{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "etalentdatatransform"
		},
		"AzureBatch1_properties_typeProperties_batchUri": {
			"type": "string",
			"defaultValue": "https://batchacct1.centralus.batch.azure.com"
		},
		"AzureBatch1_properties_typeProperties_poolName": {
			"type": "string",
			"defaultValue": "python-pool-1"
		},
		"AzureBatch1_properties_typeProperties_accountName": {
			"type": "string",
			"defaultValue": "batchacct1"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/etalentPerfRatingMapTbl')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "connection to gender mapping table",
				"linkedServiceName": {
					"referenceName": "etalentdb_connection",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Client/Database"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ClientId",
						"type": "nvarchar"
					},
					{
						"name": "ClientEngagementDt",
						"type": "date"
					},
					{
						"name": "ClientPerfRating",
						"type": "nvarchar"
					},
					{
						"name": "ElloreePerfRating",
						"type": "nvarchar"
					},
					{
						"name": "ElloreePerfRatingSortId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "LoadDt",
						"type": "date"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "PerfRatingMapTbl"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/etalentReqFactTbl')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "connection to Core Fact table",
				"linkedServiceName": {
					"referenceName": "etalentdb_connection",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Client/Database"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ClientId",
						"type": "nvarchar"
					},
					{
						"name": "ClientEngagementDt",
						"type": "date"
					},
					{
						"name": "ClientEngagementType",
						"type": "nvarchar"
					},
					{
						"name": "EventDt",
						"type": "date"
					},
					{
						"name": "EventMonth",
						"type": "int",
						"precision": 10
					},
					{
						"name": "EventQuarter",
						"type": "int",
						"precision": 10
					},
					{
						"name": "EventYear",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Event",
						"type": "nvarchar"
					},
					{
						"name": "EventId",
						"type": "nvarchar"
					},
					{
						"name": "ReqId",
						"type": "nvarchar"
					},
					{
						"name": "ReqType",
						"type": "nvarchar"
					},
					{
						"name": "PostingDt",
						"type": "date"
					},
					{
						"name": "ReqStatus",
						"type": "nvarchar"
					},
					{
						"name": "NumberofOpenings",
						"type": "int",
						"precision": 10
					},
					{
						"name": "JobTitle",
						"type": "nvarchar"
					},
					{
						"name": "JobFunction",
						"type": "nvarchar"
					},
					{
						"name": "CorpTitle",
						"type": "nvarchar"
					},
					{
						"name": "WorkOfficeLoc",
						"type": "nvarchar"
					},
					{
						"name": "WorkOfficeCity",
						"type": "nvarchar"
					},
					{
						"name": "WorkOfficeState",
						"type": "nvarchar"
					},
					{
						"name": "WorkOfficeCountry",
						"type": "nvarchar"
					},
					{
						"name": "WorkStrategicLocInd",
						"type": "nvarchar"
					},
					{
						"name": "BusinessGrpLvl1",
						"type": "nvarchar"
					},
					{
						"name": "BusinessGrpLvl2",
						"type": "nvarchar"
					},
					{
						"name": "BusinessGrpLvl3",
						"type": "nvarchar"
					},
					{
						"name": "BusinessGrpLvl4",
						"type": "nvarchar"
					},
					{
						"name": "HiringMgrWorkerId",
						"type": "nvarchar"
					},
					{
						"name": "PrimaryRecruiterWorkerId",
						"type": "nvarchar"
					},
					{
						"name": "ReqOther1",
						"type": "nvarchar"
					},
					{
						"name": "ReqOther2",
						"type": "nvarchar"
					},
					{
						"name": "ReqOther3",
						"type": "nvarchar"
					},
					{
						"name": "ReqOther4",
						"type": "nvarchar"
					},
					{
						"name": "ReqOther5",
						"type": "nvarchar"
					},
					{
						"name": "LoadDt",
						"type": "date"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "TAReqTbl"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/etalentReqStatusMapTbl')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "etalentdb_connection",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Client/Database"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ClientId",
						"type": "nvarchar"
					},
					{
						"name": "ClientEngagementDt",
						"type": "date"
					},
					{
						"name": "ClientReqStatus",
						"type": "nvarchar"
					},
					{
						"name": "ElloreeReqStatus",
						"type": "nvarchar"
					},
					{
						"name": "LoadDt",
						"type": "date"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "TAReqStatusMapTbl"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/etalentReqTypeMapTbl')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "etalentdb_connection",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Client/Database"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ClientId",
						"type": "nvarchar"
					},
					{
						"name": "ClientEngagementDt",
						"type": "date"
					},
					{
						"name": "ClientReqType",
						"type": "nvarchar"
					},
					{
						"name": "ElloreeReqType",
						"type": "nvarchar"
					},
					{
						"name": "LoadDt",
						"type": "date"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "TAReqTypeMapTbl"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/etalentSilverMedalistFactTbl')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "connection to Silver Medalist Fact table",
				"linkedServiceName": {
					"referenceName": "etalentdb_connection",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Client/Database"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ClientId",
						"type": "nvarchar"
					},
					{
						"name": "ClientEngagementDt",
						"type": "date"
					},
					{
						"name": "EventYear",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ReqId",
						"type": "nvarchar"
					},
					{
						"name": "ApplId",
						"type": "nvarchar"
					},
					{
						"name": "IntWorkerId",
						"type": "nvarchar"
					},
					{
						"name": "SilverMedalistInd",
						"type": "nvarchar"
					},
					{
						"name": "LoadDt",
						"type": "date"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "TASilverMedalistFactTbl"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/etalentSpeedbumpsFactTbl')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "connection to Core Fact table",
				"linkedServiceName": {
					"referenceName": "etalentdb_connection",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Client/Database"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ClientId",
						"type": "nvarchar"
					},
					{
						"name": "ClientEngagementDt",
						"type": "date"
					},
					{
						"name": "EventQuarter",
						"type": "int",
						"precision": 10
					},
					{
						"name": "EventYear",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CoreEventId",
						"type": "nvarchar"
					},
					{
						"name": "CoreEventQuarter",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CoreEventDate",
						"type": "date"
					},
					{
						"name": "WorkerId",
						"type": "nvarchar"
					},
					{
						"name": "SpeedbumnpWorkerStatus",
						"type": "nvarchar"
					},
					{
						"name": "SpeedbumpPopulationInd",
						"type": "nvarchar"
					},
					{
						"name": "Speedbump1Name",
						"type": "nvarchar"
					},
					{
						"name": "Speedbump1Desc",
						"type": "nvarchar"
					},
					{
						"name": "Speedbump1Flag",
						"type": "nvarchar"
					},
					{
						"name": "Speedbump2Name",
						"type": "nvarchar"
					},
					{
						"name": "Speedbump2Desc",
						"type": "nvarchar"
					},
					{
						"name": "Speedbump2Flag",
						"type": "nvarchar"
					},
					{
						"name": "Speedbump3Name",
						"type": "nvarchar"
					},
					{
						"name": "Speedbump3Desc",
						"type": "nvarchar"
					},
					{
						"name": "Speedbump3Flag",
						"type": "nvarchar"
					},
					{
						"name": "Speedbump4Name",
						"type": "nvarchar"
					},
					{
						"name": "Speedbump4Desc",
						"type": "nvarchar"
					},
					{
						"name": "Speedbump4Flag",
						"type": "nvarchar"
					},
					{
						"name": "Speedbump5Name",
						"type": "nvarchar"
					},
					{
						"name": "Speedbump5Desc",
						"type": "nvarchar"
					},
					{
						"name": "Speedbump5Flag",
						"type": "nvarchar"
					},
					{
						"name": "Speedbump6Name",
						"type": "nvarchar"
					},
					{
						"name": "Speedbump6Desc",
						"type": "nvarchar"
					},
					{
						"name": "Speedbump6Flag",
						"type": "nvarchar"
					},
					{
						"name": "Speedbump7Name",
						"type": "nvarchar"
					},
					{
						"name": "Speedbump7Desc",
						"type": "nvarchar"
					},
					{
						"name": "Speedbump7Flag",
						"type": "nvarchar"
					},
					{
						"name": "Speedbump8Name",
						"type": "nvarchar"
					},
					{
						"name": "Speedbump8Desc",
						"type": "nvarchar"
					},
					{
						"name": "Speedbump8Flag",
						"type": "nvarchar"
					},
					{
						"name": "Speedbump9Name",
						"type": "nvarchar"
					},
					{
						"name": "Speedbump9Desc",
						"type": "nvarchar"
					},
					{
						"name": "Speedbump9Flag",
						"type": "nvarchar"
					},
					{
						"name": "Speedbump10Name",
						"type": "nvarchar"
					},
					{
						"name": "Speedbump10Desc",
						"type": "nvarchar"
					},
					{
						"name": "Speedbump10Flag",
						"type": "nvarchar"
					},
					{
						"name": "Speedbump11Name",
						"type": "nvarchar"
					},
					{
						"name": "Speedbump11Desc",
						"type": "nvarchar"
					},
					{
						"name": "Speedbump11Flag",
						"type": "nvarchar"
					},
					{
						"name": "Speedbump12Name",
						"type": "nvarchar"
					},
					{
						"name": "Speedbump12Desc",
						"type": "nvarchar"
					},
					{
						"name": "Speedbump12Flag",
						"type": "nvarchar"
					},
					{
						"name": "Speedbump13Name",
						"type": "nvarchar"
					},
					{
						"name": "Speedbump13Desc",
						"type": "nvarchar"
					},
					{
						"name": "Speedbump13Flag",
						"type": "nvarchar"
					},
					{
						"name": "Speedbump14Name",
						"type": "nvarchar"
					},
					{
						"name": "Speedbump14Desc",
						"type": "nvarchar"
					},
					{
						"name": "Speedbump14Flag",
						"type": "nvarchar"
					},
					{
						"name": "Speedbump15Name",
						"type": "nvarchar"
					},
					{
						"name": "Speedbump15Desc",
						"type": "nvarchar"
					},
					{
						"name": "Speedbump15Flag",
						"type": "nvarchar"
					},
					{
						"name": "LoadDt",
						"type": "date"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "SpeedbumpsFactTbl"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/etalentTagIdentifierTbl')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "connection to TagIdentifierTbl",
				"linkedServiceName": {
					"referenceName": "etalentdb_connection",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Client/Database"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "TagIdentifier",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "TagIdentifierTbl"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/etalentTalentFactTbl')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "connection to Talent Fact table",
				"linkedServiceName": {
					"referenceName": "etalentdb_connection",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Client/Database"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ClientId",
						"type": "nvarchar"
					},
					{
						"name": "ClientEngagementDt",
						"type": "date"
					},
					{
						"name": "WorkerId",
						"type": "nvarchar"
					},
					{
						"name": "EventYear",
						"type": "int",
						"precision": 10
					},
					{
						"name": "EventDt",
						"type": "date"
					},
					{
						"name": "Event",
						"type": "nvarchar"
					},
					{
						"name": "EventType",
						"type": "nvarchar"
					},
					{
						"name": "PerfRating",
						"type": "nvarchar"
					},
					{
						"name": "PerfRatingDt",
						"type": "date"
					},
					{
						"name": "TalentIdentifier1",
						"type": "nvarchar"
					},
					{
						"name": "TalentIdentifier2",
						"type": "nvarchar"
					},
					{
						"name": "TalentIdentifier3",
						"type": "nvarchar"
					},
					{
						"name": "TalentIdentifier4",
						"type": "nvarchar"
					},
					{
						"name": "TalentIdentifier5",
						"type": "nvarchar"
					},
					{
						"name": "LoadDt",
						"type": "date"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "TalentFactTbl"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/etalentUSCensusSummaryTbl')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "connection to Core Fact table",
				"linkedServiceName": {
					"referenceName": "etalentdb_connection",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "External Data/US Census"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Census_Year",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Census_City",
						"type": "nvarchar"
					},
					{
						"name": "Census_State",
						"type": "nvarchar"
					},
					{
						"name": "Census_Country",
						"type": "nvarchar"
					},
					{
						"name": "Census_MSA",
						"type": "nvarchar"
					},
					{
						"name": "Census_Region",
						"type": "nvarchar"
					},
					{
						"name": "Census_Total",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Census_Male",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Census_Female",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Census_White",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Census_Black",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Census_Hispanic",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Census_Asian",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Census_OtherRace",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Census_PoC",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Census_TwoPlusRaces",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Census_AmerIndAlaskaNat",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Census_NatHawaiianOtherPacIsl",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Census_SomeOtherRace",
						"type": "int",
						"precision": 10
					},
					{
						"name": "MSA_Total",
						"type": "int",
						"precision": 10
					},
					{
						"name": "MSA_Male",
						"type": "int",
						"precision": 10
					},
					{
						"name": "MSA_Female",
						"type": "int",
						"precision": 10
					},
					{
						"name": "MSA_White",
						"type": "int",
						"precision": 10
					},
					{
						"name": "MSA_Black",
						"type": "int",
						"precision": 10
					},
					{
						"name": "MSA_Hispanic",
						"type": "int",
						"precision": 10
					},
					{
						"name": "MSA_Asian",
						"type": "int",
						"precision": 10
					},
					{
						"name": "MSA_OtherRace",
						"type": "int",
						"precision": 10
					},
					{
						"name": "MSA_PoC",
						"type": "int",
						"precision": 10
					},
					{
						"name": "MSA_TwoPlusRaces",
						"type": "int",
						"precision": 10
					},
					{
						"name": "MSA_AmerIndAlaskaNat",
						"type": "int",
						"precision": 10
					},
					{
						"name": "MSA_NatHawaiianOtherPacIsl",
						"type": "int",
						"precision": 10
					},
					{
						"name": "MSA_SomeOtherRace",
						"type": "int",
						"precision": 10
					},
					{
						"name": "State_Total",
						"type": "int",
						"precision": 10
					},
					{
						"name": "State_Male",
						"type": "int",
						"precision": 10
					},
					{
						"name": "State_Female",
						"type": "int",
						"precision": 10
					},
					{
						"name": "State_White",
						"type": "int",
						"precision": 10
					},
					{
						"name": "State_Black",
						"type": "int",
						"precision": 10
					},
					{
						"name": "State_Hispanic",
						"type": "int",
						"precision": 10
					},
					{
						"name": "State_Asian",
						"type": "int",
						"precision": 10
					},
					{
						"name": "State_OtherRace",
						"type": "int",
						"precision": 10
					},
					{
						"name": "State_PoC",
						"type": "int",
						"precision": 10
					},
					{
						"name": "State_TwoPlusRaces",
						"type": "int",
						"precision": 10
					},
					{
						"name": "State_AmerIndAlaskaNat",
						"type": "int",
						"precision": 10
					},
					{
						"name": "State_NatHawaiianOtherPacIsl",
						"type": "int",
						"precision": 10
					},
					{
						"name": "State_SomeOtherRace",
						"type": "int",
						"precision": 10
					},
					{
						"name": "US_Total",
						"type": "int",
						"precision": 10
					},
					{
						"name": "US_Male",
						"type": "int",
						"precision": 10
					},
					{
						"name": "US_Female",
						"type": "int",
						"precision": 10
					},
					{
						"name": "US_White",
						"type": "int",
						"precision": 10
					},
					{
						"name": "US_Black",
						"type": "int",
						"precision": 10
					},
					{
						"name": "US_Hispanic",
						"type": "int",
						"precision": 10
					},
					{
						"name": "US_Asian",
						"type": "int",
						"precision": 10
					},
					{
						"name": "US_OtherRace",
						"type": "int",
						"precision": 10
					},
					{
						"name": "US_PoC",
						"type": "int",
						"precision": 10
					},
					{
						"name": "US_TwoPlusRaces",
						"type": "int",
						"precision": 10
					},
					{
						"name": "US_AmerIndAlaskaNat",
						"type": "int",
						"precision": 10
					},
					{
						"name": "US_NatHawaiianOtherPacIsl",
						"type": "int",
						"precision": 10
					},
					{
						"name": "US_SomeOtherRace",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "USCensusSummaryTbl"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/etalentVeteranMapTbl')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "connection to veteran mapping table",
				"linkedServiceName": {
					"referenceName": "etalentdb_connection",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Client/Database"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ClientId",
						"type": "nvarchar"
					},
					{
						"name": "ClientEngagementDt",
						"type": "date"
					},
					{
						"name": "ClientVeteran",
						"type": "nvarchar"
					},
					{
						"name": "ElloreeVeteran",
						"type": "nvarchar"
					},
					{
						"name": "LoadDt",
						"type": "date"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "VeteranMapTbl"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/etalentYearRefTbl')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "connection to Core Fact table",
				"linkedServiceName": {
					"referenceName": "etalentdb_connection",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Client/Database"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ClientId",
						"type": "nvarchar"
					},
					{
						"name": "ClientEngagementDt",
						"type": "date"
					},
					{
						"name": "CurEventYear",
						"type": "int",
						"precision": 10
					},
					{
						"name": "P1EventYear",
						"type": "int",
						"precision": 10
					},
					{
						"name": "P2EventYear",
						"type": "int",
						"precision": 10
					},
					{
						"name": "P3EventYear",
						"type": "int",
						"precision": 10
					},
					{
						"name": "P4EventYear",
						"type": "int",
						"precision": 10
					},
					{
						"name": "P5EventYear",
						"type": "int",
						"precision": 10
					},
					{
						"name": "LoadDt",
						"type": "date"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "YearRefTbl"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBatch1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBatch",
				"typeProperties": {
					"batchUri": "[parameters('AzureBatch1_properties_typeProperties_batchUri')]",
					"poolName": "[parameters('AzureBatch1_properties_typeProperties_poolName')]",
					"accountName": "[parameters('AzureBatch1_properties_typeProperties_accountName')]",
					"linkedServiceName": {
						"referenceName": "AzureBlobStorage2",
						"type": "LinkedServiceReference"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/BLS_TEST')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET"
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "Source_BLS_Site",
								"type": "DatasetReference",
								"parameters": {
									"SeriesId": "https://api.bls.gov/publicAPI/v2/timeseries/data/LNU02072666"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "Json_BLS_Asian_Female",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "External Data/BLS"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-14T00:01:06Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Move_Template_Into_AnalysisFldr')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Analysis Template to Client Folder",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "Source_Binary_AnalysisTemplate_TemplateAdminFldr",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Source_Binary_AnalysisFldr",
								"type": "DatasetReference",
								"parameters": {
									"Source_Client_Fldr": {
										"value": "@pipeline().parameters.P_Client_Id",
										"type": "Expression"
									},
									"Source_Client_Date": {
										"value": "@pipeline().parameters.P_Client_Dt",
										"type": "Expression"
									},
									"Source_Client_Year": {
										"value": "@pipeline().parameters.P_Folder_Year",
										"type": "Expression"
									},
									"Source_Client_Quarter": {
										"value": "@concat('Q',pipeline().parameters.P_Folder_Quarter)",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"P_Client_Id": {
						"type": "string"
					},
					"P_Client_Dt": {
						"type": "string"
					},
					"P_Folder_Year": {
						"type": "string"
					},
					"P_Folder_Quarter": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Client/Create Analysis Table Files"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-11T23:59:37Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Move_Templates_Into_ClientFldr')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "Source_Binary_CoreTemplate_ProcessingFldr",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Source_Binary_TemplatesFldr",
								"type": "DatasetReference",
								"parameters": {
									"Source_Client_Fldr": {
										"value": "@pipeline().parameters.P_Client_Id",
										"type": "Expression"
									},
									"Source_Client_Date": {
										"value": "@pipeline().parameters.P_Client_Dt",
										"type": "Expression"
									},
									"Source_Client_Year": {
										"value": "@pipeline().parameters.P_Folder_Year",
										"type": "Expression"
									},
									"Source_Client_Quarter": {
										"value": "@concat('Q',pipeline().parameters.P_Folder_Quarter)",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Copy data2",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "Source_Binary_TalentAcqTemplate_ProcessingFldr",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Source_Binary_TemplatesFldr",
								"type": "DatasetReference",
								"parameters": {
									"Source_Client_Fldr": {
										"value": "@pipeline().parameters.P_Client_Id",
										"type": "Expression"
									},
									"Source_Client_Date": {
										"value": "@pipeline().parameters.P_Client_Dt",
										"type": "Expression"
									},
									"Source_Client_Year": {
										"value": "@pipeline().parameters.P_Folder_Year",
										"type": "Expression"
									},
									"Source_Client_Quarter": {
										"value": "@concat('Q',pipeline().parameters.P_Folder_Quarter)",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Copy data3",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "Source_Binary_OtherTemplate_ProcessingFldr",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Source_Binary_TemplatesFldr",
								"type": "DatasetReference",
								"parameters": {
									"Source_Client_Fldr": {
										"value": "@pipeline().parameters.P_Client_Id",
										"type": "Expression"
									},
									"Source_Client_Date": {
										"value": "@pipeline().parameters.P_Client_Dt",
										"type": "Expression"
									},
									"Source_Client_Year": {
										"value": "@pipeline().parameters.P_Folder_Year",
										"type": "Expression"
									},
									"Source_Client_Quarter": {
										"value": "@concat('Q',pipeline().parameters.P_Folder_Quarter)",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"P_Client_Id": {
						"type": "string"
					},
					"P_Client_Dt": {
						"type": "string"
					},
					"P_Folder_Year": {
						"type": "string"
					},
					"P_Folder_Quarter": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Client/Create Fact Table Files"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-11T23:59:37Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline_python_test')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Custom1",
						"type": "Custom",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"command": "python pythontest_new.py",
							"resourceLinkedService": {
								"referenceName": "AzureBlobStorage_python",
								"type": "LinkedServiceReference"
							},
							"folderPath": "python",
							"referenceObjects": {
								"linkedServices": [],
								"datasets": []
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureBatch1",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBatch1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Append_FactTbl_ApplStatus')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "Client/Database/Load Fact Tables"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "Source_FactTbl_ApplStatus_File",
								"type": "DatasetReference"
							},
							"name": "ApplStatus"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "etalentApplStatusFactTbl",
								"type": "DatasetReference"
							},
							"name": "AppendApplStatusFact"
						}
					],
					"transformations": [
						{
							"name": "alterRow1"
						},
						{
							"name": "AlterColumnNamesforMap"
						},
						{
							"name": "derivedColumn1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          {Client ID} as string,",
						"          {Client Engagement Date} as date 'yyyy-MM-dd',",
						"          {Applicant ID} as string,",
						"          {Requisition ID} as string,",
						"          {Event Date} as date 'yyyy-MM-dd',",
						"          EventMonth as integer,",
						"          {Event Quarter} as integer,",
						"          {Event Year} as short,",
						"          {Applicant Type} as string,",
						"          {Elloree Applicant Final Disposition} as string,",
						"          {Elloree Applicant Category} as string,",
						"          {Elloree Submitted to Mgr Fl} as string,",
						"          {Elloree Race} as string,",
						"          {Elloree Hispanic or Latino Origin} as string,",
						"          {Elloree Gender} as string,",
						"          Applicant as integer,",
						"          {White Appl} as integer,",
						"          {Black Appl} as integer,",
						"          {Latinx Appl} as integer,",
						"          {Asian Appl} as integer,",
						"          {Two or More Appl} as integer,",
						"          {Other Appl} as integer,",
						"          {DNSID Appl} as integer,",
						"          {Female Appl} as integer,",
						"          {PoC Appl} as integer,",
						"          {Male Appl} as integer,",
						"          {Other Gender Appl} as integer,",
						"          {DNSID Gender Appl} as integer,",
						"          {Diverse Applicant} as integer,",
						"          {Applicant Rejected by HR} as integer,",
						"          {Applicant Withdrew} as integer,",
						"          Candidate as integer,",
						"          {Candidate Rejected by HR} as integer,",
						"          {Candidate StM} as integer,",
						"          {Candidate Rejected by HM} as integer,",
						"          {Candidate Interviewed} as integer,",
						"          {Candidate Hired} as integer,",
						"          {Candidate Withdrew} as integer",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> ApplStatus",
						"ApplStatus alterRow(upsertIf(true()),",
						"     deleteIf(isNull({Client ID})),",
						"     deleteIf(isNull({Client Engagement Date})),",
						"     deleteIf(isNull({Event Date})),",
						"     deleteIf(isNull({Requisition ID})),",
						"     deleteIf(isNull({Applicant ID}))) ~> alterRow1",
						"alterRow1 select(mapColumn(",
						"          ClientId = {Client ID},",
						"          ClientEngagementDt = {Client Engagement Date},",
						"          EventMonth,",
						"          EventQuarter = {Event Quarter},",
						"          EventYear = {Event Year},",
						"          EventDt = {Event Date},",
						"          ReqId = {Requisition ID},",
						"          ApplId = {Applicant ID},",
						"          {Applicant Type},",
						"          {Elloree Applicant Final Disposition},",
						"          {Elloree Applicant Category},",
						"          {Elloree Submitted to Mgr Fl},",
						"          {Elloree Race},",
						"          {Elloree Hispanic or Latino Origin},",
						"          {Elloree Gender},",
						"          Applicants = Applicant,",
						"          WhiteAppl = {White Appl},",
						"          BlackAppl = {Black Appl},",
						"          LatinxAppl = {Latinx Appl},",
						"          AsianAppl = {Asian Appl},",
						"          TwoorMoreAppl = {Two or More Appl},",
						"          OtherAppl = {Other Appl},",
						"          PoCAppl = {PoC Appl},",
						"          DNSIDAppl = {DNSID Appl},",
						"          FemaleAppl = {Female Appl},",
						"          MaleAppl = {Male Appl},",
						"          OtherGenderAppl = {Other Gender Appl},",
						"          DNSIDGenderAppl = {DNSID Gender Appl},",
						"          DiverseAppl = {Diverse Applicant},",
						"          ApplRejected = {Applicant Rejected by HR},",
						"          ApplWithdrew = {Applicant Withdrew},",
						"          Candidates = Candidate,",
						"          CandRejectedHR = {Candidate Rejected by HR},",
						"          CandStM = {Candidate StM},",
						"          CandRejectedHM = {Candidate Rejected by HM},",
						"          CandInterviewed = {Candidate Interviewed},",
						"          CandHired = {Candidate Hired},",
						"          CandWithdrew = {Candidate Withdrew}",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> AlterColumnNamesforMap",
						"AlterColumnNamesforMap derive(LoadDt = currentDate()) ~> derivedColumn1",
						"derivedColumn1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          ClientId as string,",
						"          ClientEngagementDt as date,",
						"          ApplId as string,",
						"          ReqId as string,",
						"          EventDt as date,",
						"          EventMonth as integer,",
						"          EventQuarter as integer,",
						"          EventYear as integer,",
						"          Applicants as integer,",
						"          WhiteAppl as integer,",
						"          BlackAppl as integer,",
						"          LatinxAppl as integer,",
						"          AsianAppl as integer,",
						"          TwoorMoreAppl as integer,",
						"          OtherAppl as integer,",
						"          DNSIDAppl as integer,",
						"          PoCAppl as integer,",
						"          FemaleAppl as integer,",
						"          MaleAppl as integer,",
						"          OtherGenderAppl as integer,",
						"          DNSIDGenderAppl as integer,",
						"          DiverseAppl as integer,",
						"          ApplRejected as integer,",
						"          ApplWithdrew as integer,",
						"          Candidates as integer,",
						"          CandRejectedHR as integer,",
						"          CandStM as integer,",
						"          CandRejectedHM as integer,",
						"          CandInterviewed as integer,",
						"          CandHired as integer,",
						"          CandWithdrew as integer,",
						"          LoadDt as date",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:true,",
						"     keys:['ClientId','ClientEngagementDt','EventDt','ReqId','ApplId'],",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          ClientId,",
						"          ClientEngagementDt,",
						"          ApplId,",
						"          ReqId,",
						"          EventDt,",
						"          EventMonth,",
						"          EventQuarter,",
						"          EventYear,",
						"          Applicants,",
						"          WhiteAppl,",
						"          BlackAppl,",
						"          LatinxAppl,",
						"          AsianAppl,",
						"          TwoorMoreAppl,",
						"          OtherAppl,",
						"          DNSIDAppl,",
						"          PoCAppl,",
						"          FemaleAppl,",
						"          MaleAppl,",
						"          OtherGenderAppl,",
						"          DNSIDGenderAppl,",
						"          DiverseAppl,",
						"          ApplRejected,",
						"          ApplWithdrew,",
						"          Candidates,",
						"          CandRejectedHR,",
						"          CandStM,",
						"          CandRejectedHM,",
						"          CandInterviewed,",
						"          CandHired,",
						"          CandWithdrew,",
						"          LoadDt",
						"     )) ~> AppendApplStatusFact"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Append_FactTbl_ApplStatus_Hist')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "Client/Database/Load Fact Tables/Load Prior Engagement"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "etalentApplStatusFactTbl",
								"type": "DatasetReference"
							},
							"name": "ApplStatus"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "etalentApplStatusFactTbl",
								"type": "DatasetReference"
							},
							"name": "AppendApplStatusFact"
						}
					],
					"transformations": [
						{
							"name": "alterRow1"
						},
						{
							"name": "derivedColumn1"
						}
					],
					"scriptLines": [
						"parameters{",
						"     Flow_Client_Id as string,",
						"     Flow_Client_Dt as string,",
						"     Flow_Hist_Client_Dt as string",
						"}",
						"source(output(",
						"          ClientId as string,",
						"          ClientEngagementDt as date,",
						"          ApplId as string,",
						"          ReqId as string,",
						"          EventDt as date,",
						"          EventMonth as integer,",
						"          EventQuarter as integer,",
						"          EventYear as integer,",
						"          Applicants as integer,",
						"          WhiteAppl as integer,",
						"          BlackAppl as integer,",
						"          LatinxAppl as integer,",
						"          AsianAppl as integer,",
						"          TwoorMoreAppl as integer,",
						"          OtherAppl as integer,",
						"          DNSIDAppl as integer,",
						"          PoCAppl as integer,",
						"          FemaleAppl as integer,",
						"          MaleAppl as integer,",
						"          OtherGenderAppl as integer,",
						"          DNSIDGenderAppl as integer,",
						"          DiverseAppl as integer,",
						"          ApplRejected as integer,",
						"          ApplWithdrew as integer,",
						"          Candidates as integer,",
						"          CandRejectedHR as integer,",
						"          CandStM as integer,",
						"          CandRejectedHM as integer,",
						"          CandInterviewed as integer,",
						"          CandHired as integer,",
						"          CandWithdrew as integer,",
						"          LoadDt as date",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     query: (\"select * from [dbo].[TAApplStatusFactTbl] where ClientId = '{$Flow_Client_Id}' and ClientEngagementDt = '{$Flow_Hist_Client_Dt}'\"),",
						"     format: 'query') ~> ApplStatus",
						"ApplStatus alterRow(upsertIf(true())) ~> alterRow1",
						"alterRow1 derive(LoadDt = currentDate(),",
						"          ClientEngagementDt = toDate($Flow_Client_Dt,'MM/dd/yyyy')) ~> derivedColumn1",
						"derivedColumn1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          ClientId as string,",
						"          ClientEngagementDt as date,",
						"          ApplId as string,",
						"          ReqId as string,",
						"          EventDt as date,",
						"          EventMonth as integer,",
						"          EventQuarter as integer,",
						"          EventYear as integer,",
						"          Applicants as integer,",
						"          WhiteAppl as integer,",
						"          BlackAppl as integer,",
						"          LatinxAppl as integer,",
						"          AsianAppl as integer,",
						"          TwoorMoreAppl as integer,",
						"          OtherAppl as integer,",
						"          DNSIDAppl as integer,",
						"          PoCAppl as integer,",
						"          FemaleAppl as integer,",
						"          MaleAppl as integer,",
						"          OtherGenderAppl as integer,",
						"          DNSIDGenderAppl as integer,",
						"          DiverseAppl as integer,",
						"          ApplRejected as integer,",
						"          ApplWithdrew as integer,",
						"          Candidates as integer,",
						"          CandRejectedHR as integer,",
						"          CandStM as integer,",
						"          CandRejectedHM as integer,",
						"          CandInterviewed as integer,",
						"          CandHired as integer,",
						"          CandWithdrew as integer,",
						"          LoadDt as date",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:true,",
						"     keys:['ClientId','ClientEngagementDt','EventDt','ReqId','ApplId'],",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          ClientId,",
						"          ClientEngagementDt,",
						"          ApplId,",
						"          ReqId,",
						"          EventDt,",
						"          EventMonth,",
						"          EventQuarter,",
						"          EventYear,",
						"          Applicants,",
						"          WhiteAppl,",
						"          BlackAppl,",
						"          LatinxAppl,",
						"          AsianAppl,",
						"          TwoorMoreAppl,",
						"          OtherAppl,",
						"          DNSIDAppl,",
						"          PoCAppl,",
						"          FemaleAppl,",
						"          MaleAppl,",
						"          OtherGenderAppl,",
						"          DNSIDGenderAppl,",
						"          DiverseAppl,",
						"          ApplRejected,",
						"          ApplWithdrew,",
						"          Candidates,",
						"          CandRejectedHR,",
						"          CandStM,",
						"          CandRejectedHM,",
						"          CandInterviewed,",
						"          CandHired,",
						"          CandWithdrew,",
						"          LoadDt",
						"     )) ~> AppendApplStatusFact"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Append_FactTbl_Applicant')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "Client/Database/Load Fact Tables"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "Source_FactTbl_Applicant_File",
								"type": "DatasetReference"
							},
							"name": "Applicant2"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "etalentApplicantFactTbl",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "alterRow1"
						},
						{
							"name": "AlterColumnNamesforMap"
						},
						{
							"name": "RemoveNullRows"
						},
						{
							"name": "derivedColumn2"
						}
					],
					"scriptLines": [
						"source(output(",
						"          {Client ID} as string,",
						"          {Client Engagement Date} as date 'MM/dd/yyyy',",
						"          {Event Date} as date 'yyyy-MM-dd',",
						"          EventMonth as integer,",
						"          {Event Quarter} as integer,",
						"          {Event Year} as short,",
						"          Event as string,",
						"          {Requisition ID} as string,",
						"          {Applicant ID} as string,",
						"          Source as string,",
						"          {Applicant Type} as string,",
						"          {Internal Worker ID} as string,",
						"          {Applicant City} as string,",
						"          {Applicant State} as string,",
						"          {Applicant Country} as string,",
						"          Race as string,",
						"          {Hispanic or Latino Origin} as string,",
						"          Gender as string,",
						"          {Veteran Ind} as string,",
						"          LGBTQ as string,",
						"          {Disability Ind} as string,",
						"          {Applicant Final Disposition} as string,",
						"          {Applicant Step Before Final Disposition} as string,",
						"          {Applicant Rejected Reason} as string,",
						"          {Applicant Other (1)} as string,",
						"          {Applicant Other (2)} as string,",
						"          {Applicant Other (3)} as string,",
						"          {Applicant Other (4)} as string,",
						"          {Applicant Other (5)} as string,",
						"          RowCount as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> Applicant2",
						"RemoveNullRows alterRow(upsertIf(true()),",
						"     deleteIf(isNull({Client ID})),",
						"     deleteIf(isNull({Client Engagement Date})),",
						"     deleteIf(isNull({Event Date})),",
						"     deleteIf(isNull(Event)),",
						"     deleteIf(isNull({Requisition ID})),",
						"     deleteIf(isNull({Applicant ID}))) ~> alterRow1",
						"derivedColumn2 select(mapColumn(",
						"          ClientId = {Client ID},",
						"          ClientEngagementDt = {Client Engagement Date},",
						"          EventDt = {Event Date},",
						"          EventMonth,",
						"          EventQuarter = {Event Quarter},",
						"          EventYear = {Event Year},",
						"          EventId,",
						"          Event,",
						"          ReqId = {Requisition ID},",
						"          ApplicantId = {Applicant ID},",
						"          Source,",
						"          ApplType = {Applicant Type},",
						"          InternalWorkerId = {Internal Worker ID},",
						"          ApplicantCity = {Applicant City},",
						"          ApplicantState = {Applicant State},",
						"          ApplicantCountry = {Applicant Country},",
						"          Race,",
						"          HispanicLatinoOrigin = {Hispanic or Latino Origin},",
						"          Gender,",
						"          Veteran = {Veteran Ind},",
						"          LGBTQ,",
						"          DisabilityInd = {Disability Ind},",
						"          ApplFinalDisp = {Applicant Final Disposition},",
						"          ApplStepBeforeFinalDisp = {Applicant Step Before Final Disposition},",
						"          ApplRejectedReason = {Applicant Rejected Reason},",
						"          ApplOther1 = {Applicant Other (1)},",
						"          ApplOther2 = {Applicant Other (2)},",
						"          ApplOther3 = {Applicant Other (3)},",
						"          ApplOther4 = {Applicant Other (4)},",
						"          ApplOther5 = {Applicant Other (5)},",
						"          LoadDt",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> AlterColumnNamesforMap",
						"Applicant2 filter(!(isNull({Event Date}))||!(isNull({Applicant ID}))) ~> RemoveNullRows",
						"alterRow1 derive(EventId = 'APP',",
						"          LoadDt = currentDate()) ~> derivedColumn2",
						"AlterColumnNamesforMap sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          ClientId as string,",
						"          ClientEngagementDt as date,",
						"          EventDt as date,",
						"          EventMonth as integer,",
						"          EventQuarter as integer,",
						"          EventYear as integer,",
						"          Event as string,",
						"          EventId as string,",
						"          ReqId as string,",
						"          ApplicantId as string,",
						"          Source as string,",
						"          ApplType as string,",
						"          InternalWorkerId as string,",
						"          Race as string,",
						"          HispanicLatinoOrigin as string,",
						"          Gender as string,",
						"          Veteran as string,",
						"          LGBTQ as string,",
						"          DisabilityInd as string,",
						"          ApplFinalDisp as string,",
						"          ApplStepBeforeFinalDisp as string,",
						"          ApplRejectedReason as string,",
						"          ApplOther1 as string,",
						"          ApplOther2 as string,",
						"          ApplOther3 as string,",
						"          ApplOther4 as string,",
						"          ApplOther5 as string,",
						"          LoadDt as date,",
						"          ApplicantCity as string,",
						"          ApplicantState as string,",
						"          ApplicantCountry as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:true,",
						"     keys:['ClientId','ClientEngagementDt','ApplicantId','ReqId','EventDt','EventId'],",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> sink1"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Append_FactTbl_Applicant_Hist')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "Client/Database/Load Fact Tables/Load Prior Engagement"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "etalentApplicantFactTbl",
								"type": "DatasetReference"
							},
							"name": "Applicant"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "etalentApplicantFactTbl",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "alterRow1"
						},
						{
							"name": "derivedColumn2"
						}
					],
					"scriptLines": [
						"parameters{",
						"     Flow_Client_Id as string,",
						"     Flow_Client_Dt as string,",
						"     Flow_Hist_Client_Dt as string",
						"}",
						"source(output(",
						"          ClientId as string,",
						"          ClientEngagementDt as date,",
						"          EventDt as date,",
						"          EventMonth as integer,",
						"          EventQuarter as integer,",
						"          EventYear as integer,",
						"          Event as string,",
						"          EventId as string,",
						"          ReqId as string,",
						"          ApplicantId as string,",
						"          Source as string,",
						"          ApplType as string,",
						"          InternalWorkerId as string,",
						"          Race as string,",
						"          HispanicLatinoOrigin as string,",
						"          Gender as string,",
						"          Veteran as string,",
						"          LGBTQ as string,",
						"          DisabilityInd as string,",
						"          ApplFinalDisp as string,",
						"          ApplStepBeforeFinalDisp as string,",
						"          ApplRejectedReason as string,",
						"          ApplOther1 as string,",
						"          ApplOther2 as string,",
						"          ApplOther3 as string,",
						"          ApplOther4 as string,",
						"          ApplOther5 as string,",
						"          LoadDt as date,",
						"          ApplicantCity as string,",
						"          ApplicantState as string,",
						"          ApplicantCountry as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     query: (\"select * from [dbo].[TAApplTbl] where ClientId = '{$Flow_Client_Id}' and ClientEngagementDt = '{$Flow_Hist_Client_Dt}'\"),",
						"     format: 'query') ~> Applicant",
						"Applicant alterRow(upsertIf(true())) ~> alterRow1",
						"alterRow1 derive(ClientEngagementDt = toDate($Flow_Client_Dt,'MM/dd/yyyy'),",
						"          LoadDt = currentDate()) ~> derivedColumn2",
						"derivedColumn2 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          ClientId as string,",
						"          ClientEngagementDt as date,",
						"          EventDt as date,",
						"          EventMonth as integer,",
						"          EventQuarter as integer,",
						"          EventYear as integer,",
						"          Event as string,",
						"          EventId as string,",
						"          ReqId as string,",
						"          ApplicantId as string,",
						"          Source as string,",
						"          ApplType as string,",
						"          InternalWorkerId as string,",
						"          Race as string,",
						"          HispanicLatinoOrigin as string,",
						"          Gender as string,",
						"          Veteran as string,",
						"          LGBTQ as string,",
						"          DisabilityInd as string,",
						"          ApplFinalDisp as string,",
						"          ApplStepBeforeFinalDisp as string,",
						"          ApplRejectedReason as string,",
						"          ApplOther1 as string,",
						"          ApplOther2 as string,",
						"          ApplOther3 as string,",
						"          ApplOther4 as string,",
						"          ApplOther5 as string,",
						"          LoadDt as date,",
						"          ApplicantCity as string,",
						"          ApplicantState as string,",
						"          ApplicantCountry as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:true,",
						"     keys:['ClientId','ClientEngagementDt','ApplicantId','ReqId','EventDt','EventId'],",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> sink1"
					]
				}
			},
			"dependsOn": []
		}
	]
}