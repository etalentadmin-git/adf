{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "etalentdatatransform"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Anonymization_Output_TA')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Creating anonymization review file (this one runs)",
				"activities": [
					{
						"name": "RunPython",
						"type": "Custom",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"command": "python3 Anonymization_Output_TAv2.py",
							"resourceLinkedService": {
								"referenceName": "AzureBlob_Etalent1Storage",
								"type": "LinkedServiceReference"
							},
							"folderPath": "processing/Python",
							"referenceObjects": {
								"linkedServices": [],
								"datasets": []
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureBatch_etalent1storage",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"ErrorMessage": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Client/Client Setup Routines/Anonymization"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Anonymization_Review_Core')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Creating anonymization review file (this one runs)",
				"activities": [
					{
						"name": "Custom1",
						"type": "Custom",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"command": "python3 Anonymization_Review_Corev4.py",
							"resourceLinkedService": {
								"referenceName": "AzureBlob_Etalent1Storage",
								"type": "LinkedServiceReference"
							},
							"folderPath": "processing/Python",
							"referenceObjects": {
								"linkedServices": [],
								"datasets": []
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureBatch_etalent1storage",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Client/Client Setup Routines/Anonymization"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Anonymization_Review_Other')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Creating anonymization review file (this one runs)",
				"activities": [
					{
						"name": "Custom1",
						"type": "Custom",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"command": "python3 Anonymization_Review_Otherv3.py",
							"resourceLinkedService": {
								"referenceName": "AzureBlob_Etalent1Storage",
								"type": "LinkedServiceReference"
							},
							"folderPath": "processing/Python",
							"referenceObjects": {
								"linkedServices": [],
								"datasets": []
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureBatch_etalent1storage",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Client/Client Setup Routines/Anonymization"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Anonymization_Review_TA')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Creating anonymization review file (this one runs)",
				"activities": [
					{
						"name": "Custom1",
						"type": "Custom",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"command": "python3 Anonymization_Review_TAv3.py",
							"resourceLinkedService": {
								"referenceName": "AzureBlob_Etalent1Storage",
								"type": "LinkedServiceReference"
							},
							"folderPath": "processing/Python",
							"referenceObjects": {
								"linkedServices": [],
								"datasets": []
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureBatch_etalent1storage",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Client/Client Setup Routines/Anonymization"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Append_FactTbl_All_Hist')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Append_FactTbl_ApplStatus_Hist",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Append_FactTbl_Applicant_Hist",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Append_FactTbl_ApplStatus_Hist",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"P_Client_Id": {
									"value": "@pipeline().parameters.P_Client_Id",
									"type": "Expression"
								},
								"P_Client_Dt": {
									"value": "@pipeline().parameters.P_Client_Dt",
									"type": "Expression"
								},
								"P_Hist_Client_Dt": {
									"value": "@pipeline().parameters.P_Hist_Client_Dt",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Append_FactTbl_Applicant_Hist",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Append_FactTbl_Applicant_Hist",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"P_Client_Id": {
									"value": "@pipeline().parameters.P_Client_Id",
									"type": "Expression"
								},
								"P_Client_Dt": {
									"value": "@pipeline().parameters.P_Client_Dt",
									"type": "Expression"
								},
								"P_Hist_Client_Dt": {
									"value": "@pipeline().parameters.P_Hist_Client_Dt",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Append_FactTbl_ClientInfo_Hist",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Append_FactTbl_ApplStatus_Hist",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Append_FactTbl_ClientInfo_Hist",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"P_Client_Id": {
									"value": "@pipeline().parameters.P_Client_Id",
									"type": "Expression"
								},
								"P_Client_Dt": {
									"value": "@pipeline().parameters.P_Client_Dt",
									"type": "Expression"
								},
								"P_Hist_Client_Dt": {
									"value": "@pipeline().parameters.P_Hist_Client_Dt",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Append_FactTbl_Core_Hist",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Append_FactTbl_ClientInfo_Hist",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Append_FactTbl_Core_Hist",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"P_Client_Id": {
									"value": "@pipeline().parameters.P_Client_Id",
									"type": "Expression"
								},
								"P_Client_Dt": {
									"value": "@pipeline().parameters.P_Client_Dt",
									"type": "Expression"
								},
								"P_Hist_Client_Dt": {
									"value": "@pipeline().parameters.P_Hist_Client_Dt",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Append_FactTbl_DivSlate_Hist",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Append_FactTbl_Core_Hist",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Append_FactTbl_DivSlate_Hist",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"P_Client_Id": {
									"value": "@pipeline().parameters.P_Client_Id",
									"type": "Expression"
								},
								"P_Client_Dt": {
									"value": "@pipeline().parameters.P_Client_Dt",
									"type": "Expression"
								},
								"P_Hist_Client_Dt": {
									"value": "@pipeline().parameters.P_Hist_Client_Dt",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Append_FactTbl_OtherCore_Hist",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Append_FactTbl_DivSlate_Hist",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Append_FactTbl_OtherCore_Hist",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"P_Client_Id": {
									"value": "@pipeline().parameters.P_Client_Id",
									"type": "Expression"
								},
								"P_Client_Dt": {
									"value": "@pipeline().parameters.P_Client_Dt",
									"type": "Expression"
								},
								"P_Hist_Client_Dt": {
									"value": "@pipeline().parameters.P_Hist_Client_Dt",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Append_FactTbl_PerfRating_Hist",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Append_FactTbl_OtherCore_Hist",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Append_FactTbl_PerfRating_Hist",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"P_Client_Id": {
									"value": "@pipeline().parameters.P_Client_Id",
									"type": "Expression"
								},
								"P_Client_Dt": {
									"value": "@pipeline().parameters.P_Client_Dt",
									"type": "Expression"
								},
								"P_Hist_Client_Dt": {
									"value": "@pipeline().parameters.P_Hist_Client_Dt",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Append_FactTbl_Req_Hist",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Append_FactTbl_PerfRating_Hist",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Append_FactTbl_Req_Hist",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"P_Client_Id": {
									"value": "@pipeline().parameters.P_Client_Id",
									"type": "Expression"
								},
								"P_Client_Dt": {
									"value": "@pipeline().parameters.P_Client_Dt",
									"type": "Expression"
								},
								"P_Hist_Client_Dt": {
									"value": "@pipeline().parameters.P_Hist_Client_Dt",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Append_FactTbl_SilverMedalist_Hist",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Append_FactTbl_Req_Hist",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Append_FactTbl_SilverMedalist_Hist",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"P_Client_Id": {
									"value": "@pipeline().parameters.P_Client_Id",
									"type": "Expression"
								},
								"P_Client_Dt": {
									"value": "@pipeline().parameters.P_Client_Dt",
									"type": "Expression"
								},
								"P_Hist_Client_Dt": {
									"value": "@pipeline().parameters.P_Hist_Client_Dt",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Append_FactTbl_Speedbumps_Hist",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Append_FactTbl_SilverMedalist_Hist",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Append_FactTbl_Speedbumps_Hist",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"P_Client_Id": {
									"value": "@pipeline().parameters.P_Client_Id",
									"type": "Expression"
								},
								"P_Client_Dt": {
									"value": "@pipeline().parameters.P_Client_Dt",
									"type": "Expression"
								},
								"P_Hist_Client_Dt": {
									"value": "@pipeline().parameters.P_Hist_Client_Dt",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Append_FactTbl_Talent_Hist",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Append_FactTbl_Speedbumps_Hist",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Append_FactTbl_Talent_Hist",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"P_Client_Id": {
									"value": "@pipeline().parameters.P_Client_Id",
									"type": "Expression"
								},
								"P_Client_Dt": {
									"value": "@pipeline().parameters.P_Client_Dt",
									"type": "Expression"
								},
								"P_Hist_Client_Dt": {
									"value": "@pipeline().parameters.P_Hist_Client_Dt",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Append_FactTbl_YearRef_Hist",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Append_FactTbl_Talent_Hist",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Append_FactTbl_YearRef_Hist",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"P_Client_Id": {
									"value": "@pipeline().parameters.P_Client_Id",
									"type": "Expression"
								},
								"P_Client_Dt": {
									"value": "@pipeline().parameters.P_Client_Dt",
									"type": "Expression"
								},
								"P_Hist_Client_Dt": {
									"value": "@pipeline().parameters.P_Hist_Client_Dt",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"P_Client_Id": {
						"type": "string"
					},
					"P_Client_Dt": {
						"type": "string"
					},
					"P_Hist_Client_Dt": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Client/Database/Load Fact Tables/Load From Prior Engagement"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-12T14:43:29Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Append_Mapping_All_Hist')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Append_Mapping_BusHierarchy_Hist",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Append_Mapping_ApplicantFlow_Hist",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Append_Mapping_BusHierarchy_Hist",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"P_Client_Id": {
									"value": "@pipeline().parameters.P_Client_Id",
									"type": "Expression"
								},
								"P_Client_Dt": {
									"value": "@pipeline().parameters.P_Client_Dt",
									"type": "Expression"
								},
								"P_Hist_Client_Dt": {
									"value": "@pipeline().parameters.P_Hist_Client_Dt",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Append_Mapping_ApplicantFlow_Hist",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Append_Mapping_ApplicantFlow_Hist",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"P_Client_Id": {
									"value": "@pipeline().parameters.P_Client_Id",
									"type": "Expression"
								},
								"P_Client_Dt": {
									"value": "@pipeline().parameters.P_Client_Dt",
									"type": "Expression"
								},
								"P_Hist_Client_Dt": {
									"value": "@pipeline().parameters.P_Hist_Client_Dt",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Append_Mapping_CorpTitle_Hist",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Append_Mapping_BusHierarchy_Hist",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Append_Mapping_CorpTitle_Hist",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"P_Client_Id": {
									"value": "@pipeline().parameters.P_Client_Id",
									"type": "Expression"
								},
								"P_Client_Dt": {
									"value": "@pipeline().parameters.P_Client_Dt",
									"type": "Expression"
								},
								"P_Hist_Client_Dt": {
									"value": "@pipeline().parameters.P_Hist_Client_Dt",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Append_Mapping_Disability_Hist",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Append_Mapping_CorpTitle_Hist",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Append_Mapping_Disability_Hist",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"P_Client_Id": {
									"value": "@pipeline().parameters.P_Client_Id",
									"type": "Expression"
								},
								"P_Client_Dt": {
									"value": "@pipeline().parameters.P_Client_Dt",
									"type": "Expression"
								},
								"P_Hist_Client_Dt": {
									"value": "@pipeline().parameters.P_Hist_Client_Dt",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Append_Mapping_Ethnicity_Hist",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Append_Mapping_Disability_Hist",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Append_Mapping_Ethnicity_Hist",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"P_Client_Id": {
									"value": "@pipeline().parameters.P_Client_Id",
									"type": "Expression"
								},
								"P_Client_Dt": {
									"value": "@pipeline().parameters.P_Client_Dt",
									"type": "Expression"
								},
								"P_Hist_Client_Dt": {
									"value": "@pipeline().parameters.P_Hist_Client_Dt",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Append_Mapping_Event_Hist",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Append_Mapping_Ethnicity_Hist",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Append_Mapping_Event_Hist",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"P_Client_Id": {
									"value": "@pipeline().parameters.P_Client_Id",
									"type": "Expression"
								},
								"P_Client_Dt": {
									"value": "@pipeline().parameters.P_Client_Dt",
									"type": "Expression"
								},
								"P_Hist_Client_Dt": {
									"value": "@pipeline().parameters.P_Hist_Client_Dt",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Append_Mapping_Gender_Hist",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Append_Mapping_Event_Hist",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Append_Mapping_Gender_Hist",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"P_Client_Id": {
									"value": "@pipeline().parameters.P_Client_Id",
									"type": "Expression"
								},
								"P_Client_Dt": {
									"value": "@pipeline().parameters.P_Client_Dt",
									"type": "Expression"
								},
								"P_Hist_Client_Dt": {
									"value": "@pipeline().parameters.P_Hist_Client_Dt",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Append_Mapping_LGTBQ_Hist",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Append_Mapping_Gender_Hist",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Append_Mapping_LGTBQ_Hist",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"P_Client_Id": {
									"value": "@pipeline().parameters.P_Client_Id",
									"type": "Expression"
								},
								"P_Client_Dt": {
									"value": "@pipeline().parameters.P_Client_Dt",
									"type": "Expression"
								},
								"P_Hist_Client_Dt": {
									"value": "@pipeline().parameters.P_Hist_Client_Dt",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Append_Mapping_Location_Hist",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Append_Mapping_LGTBQ_Hist",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Append_Mapping_Location_Hist",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"P_Client_Id": {
									"value": "@pipeline().parameters.P_Client_Id",
									"type": "Expression"
								},
								"P_Client_Dt": {
									"value": "@pipeline().parameters.P_Client_Dt",
									"type": "Expression"
								},
								"P_Hist_Client_Dt": {
									"value": "@pipeline().parameters.P_Hist_Client_Dt",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Append_Mapping_PerformanceRating_Hist",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Append_Mapping_Location_Hist",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Append_Mapping_PerformanceRating_Hist",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"P_Client_Id": {
									"value": "@pipeline().parameters.P_Client_Id",
									"type": "Expression"
								},
								"P_Client_Dt": {
									"value": "@pipeline().parameters.P_Client_Dt",
									"type": "Expression"
								},
								"P_Hist_Client_Dt": {
									"value": "@pipeline().parameters.P_Hist_Client_Dt",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Append_Mapping_ReqStatus_Hist",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Append_Mapping_PerformanceRating_Hist",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Append_Mapping_ReqStatus_Hist",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"P_Client_Id": {
									"value": "@pipeline().parameters.P_Client_Id",
									"type": "Expression"
								},
								"P_Client_Dt": {
									"value": "@pipeline().parameters.P_Client_Dt",
									"type": "Expression"
								},
								"P_Hist_Client_Dt": {
									"value": "@pipeline().parameters.P_Hist_Client_Dt",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Append_Mapping_ReqType_Hist",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Append_Mapping_ReqStatus_Hist",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Append_Mapping_ReqType_Hist",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"P_Client_Id": {
									"value": "@pipeline().parameters.P_Client_Id",
									"type": "Expression"
								},
								"P_Client_Dt": {
									"value": "@pipeline().parameters.P_Client_Dt",
									"type": "Expression"
								},
								"P_Hist_Client_Dt": {
									"value": "@pipeline().parameters.P_Hist_Client_Dt",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Append_Mapping_Veteran_Hist",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Append_Mapping_ReqType_Hist",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Append_Mapping_Veteran_Hist",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"P_Client_Id": {
									"value": "@pipeline().parameters.P_Client_Id",
									"type": "Expression"
								},
								"P_Client_Dt": {
									"value": "@pipeline().parameters.P_Client_Dt",
									"type": "Expression"
								},
								"P_Hist_Client_Dt": {
									"value": "@pipeline().parameters.P_Hist_Client_Dt",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"P_Client_Id": {
						"type": "string"
					},
					"P_Client_Dt": {
						"type": "string"
					},
					"P_Hist_Client_Dt": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Client/Database/Load Mapping Tables/Load From Prior Engagement"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-12T14:43:29Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Archive_Output_Core')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Creating anonymization review file (this one runs)",
				"activities": [
					{
						"name": "RunPython",
						"type": "Custom",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"command": "python Summary_Archive_Core.py",
							"resourceLinkedService": {
								"referenceName": "AzureBlob_Etalent1Storage",
								"type": "LinkedServiceReference"
							},
							"folderPath": "processing/Python",
							"referenceObjects": {
								"linkedServices": [],
								"datasets": []
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureBatch_etalent1storage",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"P_Client_Id": {
						"type": "string"
					},
					"P_Client_Dt": {
						"type": "string"
					},
					"P_Folder_Year": {
						"type": "string"
					},
					"P_Folder_Quarter": {
						"type": "string"
					}
				},
				"variables": {
					"ErrorMessage": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Client/Archive"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/BLS_TEST')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET"
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "Source_BLS_Site",
								"type": "DatasetReference",
								"parameters": {
									"SeriesId": "https://api.bls.gov/publicAPI/v2/timeseries/data/LNU02072666"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "Json_BLS_Asian_Female",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "External Data/BLS"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-14T00:01:06Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Delete_Rec_FactTbl_All')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "WARNING - This pipeline will delete all client table records in the database (Fact Tables and Mapping) based on the parameters for Client Id and Client Engagement Dt. ",
				"activities": [
					{
						"name": "Delete_Rec_FactTbl_Speedbumps",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Delete_All_Rec_FactTbl_Speedbumps",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"P_Client_Id": {
									"value": "@pipeline().parameters.P_Client_Id",
									"type": "Expression"
								},
								"P_Client_Dt": {
									"value": "@pipeline().parameters.P_Client_Dt",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Delete_Rec_FactTbl_Applicant",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Delete_Rec_FactTbl_Speedbumps",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Delete_Rec_FactTbl_Applicant",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"P_Client_Id": {
									"value": "@pipeline().parameters.P_Client_Id",
									"type": "Expression"
								},
								"P_Client_Dt": {
									"value": "@pipeline().parameters.P_Client_Dt",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Delete_Rec_FactTbl_ApplicantStatus",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Delete_Rec_FactTbl_Applicant",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Delete_Rec_FactTbl_ApplicantStatus",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"P_Client_Id": {
									"value": "@pipeline().parameters.P_Client_Id",
									"type": "Expression"
								},
								"P_Client_Dt": {
									"value": "@pipeline().parameters.P_Client_Dt",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Delete_Rec_FactTbl_Client",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Delete_Rec_FactTbl_ApplicantStatus",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Delete_Rec_FactTbl_Client",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"P_Client_Id": {
									"value": "@pipeline().parameters.P_Client_Id",
									"type": "Expression"
								},
								"P_Client_Dt": {
									"value": "@pipeline().parameters.P_Client_Dt",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Delete_Rec_FactTbl_Core",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Delete_Rec_FactTbl_Client",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Delete_Rec_FactTbl_Core",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"P_Client_Id": {
									"value": "@pipeline().parameters.P_Client_Id",
									"type": "Expression"
								},
								"P_Client_Dt": {
									"value": "@pipeline().parameters.P_Client_Dt",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Delete_Rec_FactTbl_DivSlate",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Delete_Rec_FactTbl_Core",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Delete_Rec_FactTbl_DivSlate",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"P_Client_Id": {
									"value": "@pipeline().parameters.P_Client_Id",
									"type": "Expression"
								},
								"P_Client_Dt": {
									"value": "@pipeline().parameters.P_Client_Dt",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Delete_Rec_FactTbl_OtherCore",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Delete_Rec_FactTbl_DivSlate",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Delete_Rec_FactTbl_OtherCore",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"P_Client_Id": {
									"value": "@pipeline().parameters.P_Client_Id",
									"type": "Expression"
								},
								"P_Client_Dt": {
									"value": "@pipeline().parameters.P_Client_Dt",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Delete_Rec_FactTbl_PerfRatingHist",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Delete_Rec_FactTbl_OtherCore",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Delete_Rec_FactTbl_PerfRatingHist",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"P_Client_Id": {
									"value": "@pipeline().parameters.P_Client_Id",
									"type": "Expression"
								},
								"P_Client_Dt": {
									"value": "@pipeline().parameters.P_Client_Dt",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Delete_Rec_FactTbl_Req",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Delete_Rec_FactTbl_PerfRatingHist",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Delete_Rec_FactTbl_Req",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"P_Client_Id": {
									"value": "@pipeline().parameters.P_Client_Id",
									"type": "Expression"
								},
								"P_Client_Dt": {
									"value": "@pipeline().parameters.P_Client_Dt",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Delete_Rec_FactTbl_SilverMedalist",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Delete_Rec_FactTbl_Req",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Delete_Rec_FactTbl_SilverMedalist",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"P_Client_Id": {
									"value": "@pipeline().parameters.P_Client_Id",
									"type": "Expression"
								},
								"P_Client_Dt": {
									"value": "@pipeline().parameters.P_Client_Dt",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Delete_Rec_FactTbl_Talent",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Delete_Rec_FactTbl_SilverMedalist",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Delete_Rec_FactTbl_Talent",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"P_Client_Id": {
									"value": "@pipeline().parameters.P_Client_Id",
									"type": "Expression"
								},
								"P_Client_Dt": {
									"value": "@pipeline().parameters.P_Client_Dt",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Delete_Rec_FactTbl_YearRef",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Delete_Rec_FactTbl_Talent",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Delete_Rec_FactTbl_YearRef",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"P_Client_Id": {
									"value": "@pipeline().parameters.P_Client_Id",
									"type": "Expression"
								},
								"P_Client_Dt": {
									"value": "@pipeline().parameters.P_Client_Dt",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"P_Client_Id": {
						"type": "string"
					},
					"P_Client_Dt": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Client/Database/Delete Records/Fact Tables"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-12T14:43:29Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Delete_Rec_Mapping_All')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "WARNING - This pipeline will delete all client table records in the database (Fact Tables and Mapping) based on the parameters for Client Id and Client Engagement Dt. ",
				"activities": [
					{
						"name": "Delete_Rec_Mapping_Veteran",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Delete_Rec_Mapping_Veteran",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"P_Client_Id": {
									"value": "@pipeline().parameters.P_Client_Id",
									"type": "Expression"
								},
								"P_Client_Dt": {
									"value": "@pipeline().parameters.P_Client_Dt",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Delete_Rec_Mapping_ApplFlow",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Delete_Rec_Mapping_Veteran",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Delete_Rec_Mapping_ApplFlow",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"P_Client_Id": {
									"value": "@pipeline().parameters.P_Client_Id",
									"type": "Expression"
								},
								"P_Client_Dt": {
									"value": "@pipeline().parameters.P_Client_Dt",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Delete_Rec_Mapping_BusHierarchy",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Delete_Rec_Mapping_ApplFlow",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Delete_Rec_Mapping_BusHierarchy",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"P_Client_Id": {
									"value": "@pipeline().parameters.P_Client_Id",
									"type": "Expression"
								},
								"P_Client_Dt": {
									"value": "@pipeline().parameters.P_Client_Dt",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Delete_Rec_Mapping_CorpTitle",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Delete_Rec_Mapping_BusHierarchy",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Delete_Rec_Mapping_CorpTitle",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"P_Client_Id": {
									"value": "@pipeline().parameters.P_Client_Id",
									"type": "Expression"
								},
								"P_Client_Dt": {
									"value": "@pipeline().parameters.P_Client_Dt",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Delete_Rec_Mapping_Disability",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Delete_Rec_Mapping_CorpTitle",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Delete_Rec_Mapping_Disability",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"P_Client_Id": {
									"value": "@pipeline().parameters.P_Client_Id",
									"type": "Expression"
								},
								"P_Client_Dt": {
									"value": "@pipeline().parameters.P_Client_Dt",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Delete_Rec_Mapping_Ethnicity",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Delete_Rec_Mapping_Disability",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Delete_Rec_Mapping_Ethnicity",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"P_Client_Id": {
									"value": "@pipeline().parameters.P_Client_Id",
									"type": "Expression"
								},
								"P_Client_Dt": {
									"value": "@pipeline().parameters.P_Client_Dt",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Delete_Rec_Mapping_Event",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Delete_Rec_Mapping_Ethnicity",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Delete_Rec_Mapping_Event",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"P_Client_Id": {
									"value": "@pipeline().parameters.P_Client_Id",
									"type": "Expression"
								},
								"P_Client_Dt": {
									"value": "@pipeline().parameters.P_Client_Dt",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Delete_Rec_Mapping_Gender",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Delete_Rec_Mapping_Event",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Delete_Rec_Mapping_Gender",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"P_Client_Id": {
									"value": "@pipeline().parameters.P_Client_Id",
									"type": "Expression"
								},
								"P_Client_Dt": {
									"value": "@pipeline().parameters.P_Client_Dt",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Delete_Rec_Mapping_LGTBQ",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Delete_Rec_Mapping_Gender",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Delete_Rec_Mapping_LGTBQ",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"P_Client_Id": {
									"value": "@pipeline().parameters.P_Client_Id",
									"type": "Expression"
								},
								"P_Client_Dt": {
									"value": "@pipeline().parameters.P_Client_Dt",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Delete_Rec_Mapping_Location",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Delete_Rec_Mapping_LGTBQ",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Delete_Rec_Mapping_Location",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"P_Client_Id": {
									"value": "@pipeline().parameters.P_Client_Id",
									"type": "Expression"
								},
								"P_Client_Dt": {
									"value": "@pipeline().parameters.P_Client_Dt",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Delete_Rec_Mapping_PerfRating",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Delete_Rec_Mapping_Location",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Delete_Rec_Mapping_PerfRating",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"P_Client_Id": {
									"value": "@pipeline().parameters.P_Client_Id",
									"type": "Expression"
								},
								"P_Client_Dt": {
									"value": "@pipeline().parameters.P_Client_Dt",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Delete_Rec_Mapping_ReqStatusMap",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Delete_Rec_Mapping_PerfRating",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Delete_Rec_Mapping_ReqStatusMap",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"P_Client_Id": {
									"value": "@pipeline().parameters.P_Client_Id",
									"type": "Expression"
								},
								"P_Client_Dt": {
									"value": "@pipeline().parameters.P_Client_Dt",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Delete_Rec_Mapping_ReqType",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Delete_Rec_Mapping_ReqStatusMap",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Delete_Rec_Mapping_ReqType",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"P_Client_Id": {
									"value": "@pipeline().parameters.P_Client_Id",
									"type": "Expression"
								},
								"P_Client_Dt": {
									"value": "@pipeline().parameters.P_Client_Dt",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"P_Client_Id": {
						"type": "string"
					},
					"P_Client_Dt": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Client/Database/Delete Records/Mapping"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-12T14:43:29Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Move_Template_Into_AnalysisFldr')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Analysis Template to Client Folder",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "Source_Binary_AnalysisTemplate_TemplateAdminFldr",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Source_Binary_AnalysisFldr",
								"type": "DatasetReference",
								"parameters": {
									"Source_Client_Fldr": {
										"value": "@pipeline().parameters.P_Client_Id",
										"type": "Expression"
									},
									"Source_Client_Date": {
										"value": "@pipeline().parameters.P_Client_Dt",
										"type": "Expression"
									},
									"Source_Client_Year": {
										"value": "@pipeline().parameters.P_Folder_Year",
										"type": "Expression"
									},
									"Source_Client_Quarter": {
										"value": "@concat('Q',pipeline().parameters.P_Folder_Quarter)",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"P_Client_Id": {
						"type": "string"
					},
					"P_Client_Dt": {
						"type": "string"
					},
					"P_Folder_Year": {
						"type": "string"
					},
					"P_Folder_Quarter": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Client/Create Analysis Table Files"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-11T23:59:37Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Move_Templates_Into_ClientFldr')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "Source_Binary_CoreTemplate_ProcessingFldr",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Source_Binary_TemplatesFldr",
								"type": "DatasetReference",
								"parameters": {
									"Source_Client_Fldr": {
										"value": "@pipeline().parameters.P_Client_Id",
										"type": "Expression"
									},
									"Source_Client_Date": {
										"value": "@pipeline().parameters.P_Client_Dt",
										"type": "Expression"
									},
									"Source_Client_Year": {
										"value": "@pipeline().parameters.P_Folder_Year",
										"type": "Expression"
									},
									"Source_Client_Quarter": {
										"value": "@concat('Q',pipeline().parameters.P_Folder_Quarter)",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Copy data2",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "Source_Binary_TalentAcqTemplate_ProcessingFldr",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Source_Binary_TemplatesFldr",
								"type": "DatasetReference",
								"parameters": {
									"Source_Client_Fldr": {
										"value": "@pipeline().parameters.P_Client_Id",
										"type": "Expression"
									},
									"Source_Client_Date": {
										"value": "@pipeline().parameters.P_Client_Dt",
										"type": "Expression"
									},
									"Source_Client_Year": {
										"value": "@pipeline().parameters.P_Folder_Year",
										"type": "Expression"
									},
									"Source_Client_Quarter": {
										"value": "@concat('Q',pipeline().parameters.P_Folder_Quarter)",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Copy data3",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "Source_Binary_OtherTemplate_ProcessingFldr",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Source_Binary_TemplatesFldr",
								"type": "DatasetReference",
								"parameters": {
									"Source_Client_Fldr": {
										"value": "@pipeline().parameters.P_Client_Id",
										"type": "Expression"
									},
									"Source_Client_Date": {
										"value": "@pipeline().parameters.P_Client_Dt",
										"type": "Expression"
									},
									"Source_Client_Year": {
										"value": "@pipeline().parameters.P_Folder_Year",
										"type": "Expression"
									},
									"Source_Client_Quarter": {
										"value": "@concat('Q',pipeline().parameters.P_Folder_Quarter)",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"P_Client_Id": {
						"type": "string"
					},
					"P_Client_Dt": {
						"type": "string"
					},
					"P_Folder_Year": {
						"type": "string"
					},
					"P_Folder_Quarter": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Client/Create Fact Table Files"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-11T23:59:37Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Output_Archive')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Creating anonymization review file (this one runs)",
				"activities": [
					{
						"name": "RunPython",
						"type": "Custom",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"command": "python Summary_Archive_Core1.py",
							"resourceLinkedService": {
								"referenceName": "AzureBlob_Etalent1Storage",
								"type": "LinkedServiceReference"
							},
							"folderPath": "processing/Python",
							"referenceObjects": {
								"linkedServices": [],
								"datasets": []
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureBatch_etalent1storage",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"ErrorMessage": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Client/Archive"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Output_Mapping_BusHierarchy')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Client_Information_Secrets",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Client_Information_Secrets",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"P_Client_Id": {
									"value": "@pipeline().parameters.P_Client_Id",
									"type": "Expression"
								},
								"P_Client_Dt": {
									"value": "@pipeline().parameters.P_Client_Dt",
									"type": "Expression"
								},
								"P_Folder_Year": {
									"value": "@pipeline().parameters.P_Folder_Year",
									"type": "Expression"
								},
								"P_Folder_Quarter": {
									"value": "@pipeline().parameters.P_Folder_Quarter",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "RunBusHierarchyMapping",
						"type": "Custom",
						"dependsOn": [
							{
								"activity": "Client_Information_Secrets",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"command": "python3 HierarchyMappingAnalysis_v16.py",
							"resourceLinkedService": {
								"referenceName": "AzureBlob_Etalent1Storage",
								"type": "LinkedServiceReference"
							},
							"folderPath": "processing/Python",
							"referenceObjects": {
								"linkedServices": [],
								"datasets": []
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureBatch_etalent1storage",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "RunBusHierarchyLineage",
						"type": "Custom",
						"dependsOn": [
							{
								"activity": "RunBusHierarchyMapping",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"command": "python3 HierarchyLineageAnalysis_v1.py",
							"resourceLinkedService": {
								"referenceName": "AzureBlob_Etalent1Storage",
								"type": "LinkedServiceReference"
							},
							"folderPath": "processing/Python",
							"referenceObjects": {
								"linkedServices": [],
								"datasets": []
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureBatch_etalent1storage",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"P_Client_Id": {
						"type": "string"
					},
					"P_Client_Dt": {
						"type": "string"
					},
					"P_Folder_Year": {
						"type": "string"
					},
					"P_Folder_Quarter": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Client/Create Mapping Table Files"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-11T23:59:38Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline_Summarize')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Read DB Name",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "GET",
							"headers": {},
							"url": "https://elloreesecurevault.vault.azure.net/secrets/sql-database/f8dcde178f2149989daee6b6a5c83979?api-version=7.0",
							"authentication": {
								"type": "MSI",
								"resource": "https://vault.azure.net"
							}
						}
					},
					{
						"name": "Set DB Name Variable",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Read DB Name",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "SQL_DATABASE",
							"value": {
								"value": "@activity('Read DB Name').output.value",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Blob Connect Variable",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Read Blob Connection",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "azure-blob-connection",
							"value": {
								"value": "@activity('Read Blob Connection').output.value",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set DB Server Variable",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Read DB Server",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "SQL_SERVER",
							"value": {
								"value": "@activity('Read DB Server').output.value",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set DB User Variable",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Read DB User",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "SQL_USERNAME",
							"value": {
								"value": "@activity('Read DB User').output.value",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set DB PW Variable",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Read DB PW",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "SQL_PASSWORD",
							"value": {
								"value": "@activity('Read DB PW').output.value",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Read Blob Connection",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Set DB Name Variable",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "GET",
							"headers": {},
							"url": "https://elloreesecurevault.vault.azure.net/secrets/azure-blob-connection/b9d4997570b84fdba6a67f8b4d4795e9?api-version=7.0",
							"authentication": {
								"type": "MSI",
								"resource": "https://vault.azure.net"
							}
						}
					},
					{
						"name": "Read DB Server",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Set Blob Connect Variable",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "GET",
							"headers": {},
							"url": "https://elloreesecurevault.vault.azure.net/secrets/sql-server/ce2878bb10db479bbd3f1a3afd91901a?api-version=7.0",
							"authentication": {
								"type": "MSI",
								"resource": "https://vault.azure.net"
							}
						}
					},
					{
						"name": "Read DB User",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Set DB Server Variable",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "GET",
							"headers": {},
							"url": "https://elloreesecurevault.vault.azure.net/secrets/sql-username/fd0c783a9a2b418ab54532229eace065?api-version=7.0",
							"authentication": {
								"type": "MSI",
								"resource": "https://vault.azure.net"
							}
						}
					},
					{
						"name": "Read DB PW",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Set DB User Variable",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "GET",
							"headers": {},
							"url": "https://elloreesecurevault.vault.azure.net/secrets/sql-password/d3abf941c6334d83aaa8e161cfac79db?api-version=7.0",
							"authentication": {
								"type": "MSI",
								"resource": "https://vault.azure.net"
							}
						}
					},
					{
						"name": "Run_Test_PY",
						"type": "Custom",
						"dependsOn": [
							{
								"activity": "Set DB PW Variable",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"command": "python3 summarize_applications.py",
							"resourceLinkedService": {
								"referenceName": "AzureBlob_Etalent1Storage",
								"type": "LinkedServiceReference"
							},
							"folderPath": "processing/Python",
							"extendedProperties": {
								"SQL_SERVER": {
									"value": "@variables('SQL_SERVER')",
									"type": "Expression"
								},
								"SQL_DATABASE": {
									"value": "@variables('SQL_DATABASE')",
									"type": "Expression"
								},
								"SQL_USERNAME": {
									"value": "@variables('SQL_USERNAME')",
									"type": "Expression"
								},
								"SQL_PASSWORD": {
									"value": "@variables('SQL_PASSWORD')",
									"type": "Expression"
								},
								"azure-blob-connection": {
									"value": "@variables('azure-blob-connection')",
									"type": "Expression"
								}
							},
							"referenceObjects": {
								"linkedServices": [],
								"datasets": []
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureBatch_etalent1storage",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"SQL_DATABASE": {
						"type": "String"
					},
					"SQL_SERVER": {
						"type": "String"
					},
					"SQL_USERNAME": {
						"type": "String"
					},
					"SQL_PASSWORD": {
						"type": "String"
					},
					"azure-blob-connection": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Client"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline_Summarize_Test')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Custom1",
						"type": "Custom",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"command": {
								"value": "python3 HierarchyMappingAnalysis_v1.py",
								"type": "Expression"
							},
							"resourceLinkedService": {
								"referenceName": "AzureBlob_Etalent1Storage",
								"type": "LinkedServiceReference"
							},
							"folderPath": "processing/Python",
							"referenceObjects": {
								"linkedServices": [],
								"datasets": []
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureBatch_etalent1storage",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"SQL_DATABASE": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Client"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline_etalent1storageTest')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Custom1",
						"type": "Custom",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"command": "python3 testHelloWorld_blob1.py",
							"resourceLinkedService": {
								"referenceName": "AzureBlob_Etalent1Storage",
								"type": "LinkedServiceReference"
							},
							"folderPath": "processing/Python",
							"referenceObjects": {
								"linkedServices": [],
								"datasets": []
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureBatch_etalent1storage",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Append_FactTbl_ApplStatus')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "Client/Database/Load Fact Tables"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "Source_FactTbl_ApplStatus_File",
								"type": "DatasetReference"
							},
							"name": "ApplStatus"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "etalentApplStatusFactTbl",
								"type": "DatasetReference"
							},
							"name": "AppendApplStatusFact"
						}
					],
					"transformations": [
						{
							"name": "alterRow1"
						},
						{
							"name": "AlterColumnNamesforMap"
						},
						{
							"name": "derivedColumn1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          {Client ID} as string,",
						"          {Client Engagement Date} as date 'yyyy-MM-dd',",
						"          {Applicant ID} as string,",
						"          {Requisition ID} as string,",
						"          {Event Date} as date 'yyyy-MM-dd',",
						"          EventMonth as integer,",
						"          {Event Quarter} as integer,",
						"          {Event Year} as short,",
						"          {Applicant Type} as string,",
						"          {Elloree Applicant Final Disposition} as string,",
						"          {Elloree Applicant Category} as string,",
						"          {Elloree Submitted to Mgr Fl} as string,",
						"          {Elloree Race} as string,",
						"          {Elloree Hispanic or Latino Origin} as string,",
						"          {Elloree Gender} as string,",
						"          Applicant as integer,",
						"          {White Appl} as integer,",
						"          {Black Appl} as integer,",
						"          {Latinx Appl} as integer,",
						"          {Asian Appl} as integer,",
						"          {Two or More Appl} as integer,",
						"          {Other Appl} as integer,",
						"          {DNSID Appl} as integer,",
						"          {Female Appl} as integer,",
						"          {PoC Appl} as integer,",
						"          {Male Appl} as integer,",
						"          {Other Gender Appl} as integer,",
						"          {DNSID Gender Appl} as integer,",
						"          {Diverse Applicant} as integer,",
						"          {Applicant Rejected by HR} as integer,",
						"          {Applicant Withdrew} as integer,",
						"          Candidate as integer,",
						"          {Candidate Rejected by HR} as integer,",
						"          {Candidate StM} as integer,",
						"          {Candidate Rejected by HM} as integer,",
						"          {Candidate Interviewed} as integer,",
						"          {Candidate Hired} as integer,",
						"          {Candidate Withdrew} as integer",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> ApplStatus",
						"ApplStatus alterRow(upsertIf(true()),",
						"     deleteIf(isNull({Client ID})),",
						"     deleteIf(isNull({Client Engagement Date})),",
						"     deleteIf(isNull({Event Date})),",
						"     deleteIf(isNull({Requisition ID})),",
						"     deleteIf(isNull({Applicant ID}))) ~> alterRow1",
						"alterRow1 select(mapColumn(",
						"          ClientId = {Client ID},",
						"          ClientEngagementDt = {Client Engagement Date},",
						"          EventMonth,",
						"          EventQuarter = {Event Quarter},",
						"          EventYear = {Event Year},",
						"          EventDt = {Event Date},",
						"          ReqId = {Requisition ID},",
						"          ApplId = {Applicant ID},",
						"          {Applicant Type},",
						"          {Elloree Applicant Final Disposition},",
						"          {Elloree Applicant Category},",
						"          {Elloree Submitted to Mgr Fl},",
						"          {Elloree Race},",
						"          {Elloree Hispanic or Latino Origin},",
						"          {Elloree Gender},",
						"          Applicants = Applicant,",
						"          WhiteAppl = {White Appl},",
						"          BlackAppl = {Black Appl},",
						"          LatinxAppl = {Latinx Appl},",
						"          AsianAppl = {Asian Appl},",
						"          TwoorMoreAppl = {Two or More Appl},",
						"          OtherAppl = {Other Appl},",
						"          PoCAppl = {PoC Appl},",
						"          DNSIDAppl = {DNSID Appl},",
						"          FemaleAppl = {Female Appl},",
						"          MaleAppl = {Male Appl},",
						"          OtherGenderAppl = {Other Gender Appl},",
						"          DNSIDGenderAppl = {DNSID Gender Appl},",
						"          DiverseAppl = {Diverse Applicant},",
						"          ApplRejected = {Applicant Rejected by HR},",
						"          ApplWithdrew = {Applicant Withdrew},",
						"          Candidates = Candidate,",
						"          CandRejectedHR = {Candidate Rejected by HR},",
						"          CandStM = {Candidate StM},",
						"          CandRejectedHM = {Candidate Rejected by HM},",
						"          CandInterviewed = {Candidate Interviewed},",
						"          CandHired = {Candidate Hired},",
						"          CandWithdrew = {Candidate Withdrew}",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> AlterColumnNamesforMap",
						"AlterColumnNamesforMap derive(LoadDt = currentDate()) ~> derivedColumn1",
						"derivedColumn1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          ClientId as string,",
						"          ClientEngagementDt as date,",
						"          ApplId as string,",
						"          ReqId as string,",
						"          EventDt as date,",
						"          EventMonth as integer,",
						"          EventQuarter as integer,",
						"          EventYear as integer,",
						"          Applicants as integer,",
						"          WhiteAppl as integer,",
						"          BlackAppl as integer,",
						"          LatinxAppl as integer,",
						"          AsianAppl as integer,",
						"          TwoorMoreAppl as integer,",
						"          OtherAppl as integer,",
						"          DNSIDAppl as integer,",
						"          PoCAppl as integer,",
						"          FemaleAppl as integer,",
						"          MaleAppl as integer,",
						"          OtherGenderAppl as integer,",
						"          DNSIDGenderAppl as integer,",
						"          DiverseAppl as integer,",
						"          ApplRejected as integer,",
						"          ApplWithdrew as integer,",
						"          Candidates as integer,",
						"          CandRejectedHR as integer,",
						"          CandStM as integer,",
						"          CandRejectedHM as integer,",
						"          CandInterviewed as integer,",
						"          CandHired as integer,",
						"          CandWithdrew as integer,",
						"          LoadDt as date",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:true,",
						"     keys:['ClientId','ClientEngagementDt','EventDt','ReqId','ApplId'],",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          ClientId,",
						"          ClientEngagementDt,",
						"          ApplId,",
						"          ReqId,",
						"          EventDt,",
						"          EventMonth,",
						"          EventQuarter,",
						"          EventYear,",
						"          Applicants,",
						"          WhiteAppl,",
						"          BlackAppl,",
						"          LatinxAppl,",
						"          AsianAppl,",
						"          TwoorMoreAppl,",
						"          OtherAppl,",
						"          DNSIDAppl,",
						"          PoCAppl,",
						"          FemaleAppl,",
						"          MaleAppl,",
						"          OtherGenderAppl,",
						"          DNSIDGenderAppl,",
						"          DiverseAppl,",
						"          ApplRejected,",
						"          ApplWithdrew,",
						"          Candidates,",
						"          CandRejectedHR,",
						"          CandStM,",
						"          CandRejectedHM,",
						"          CandInterviewed,",
						"          CandHired,",
						"          CandWithdrew,",
						"          LoadDt",
						"     )) ~> AppendApplStatusFact"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Append_FactTbl_Applicant')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "Client/Database/Load Fact Tables"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "Source_FactTbl_Applicant_File",
								"type": "DatasetReference"
							},
							"name": "Applicant2"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "etalentApplicantFactTbl",
								"type": "DatasetReference"
							},
							"name": "sink2"
						}
					],
					"transformations": [
						{
							"name": "alterRow1"
						},
						{
							"name": "AlterColumnNamesforMap"
						},
						{
							"name": "RemoveNullRows"
						},
						{
							"name": "derivedColumn2"
						}
					],
					"scriptLines": [
						"source(output(",
						"          {Client ID} as string,",
						"          {Client Engagement Date} as date 'MM/dd/yyyy',",
						"          {Event Date} as date,",
						"          EventMonth as integer,",
						"          {Event Quarter} as integer,",
						"          {Event Year} as short,",
						"          Event as string,",
						"          {Requisition ID} as string,",
						"          {Application Date} as date,",
						"          {Applicant ID} as string,",
						"          {Applicant City} as string,",
						"          {Applicant State} as string,",
						"          {Applicant Country} as string,",
						"          Source as string,",
						"          {Applicant Type} as string,",
						"          {Internal Worker ID} as string,",
						"          Race as string,",
						"          {Hispanic or Latino Origin} as string,",
						"          Gender as string,",
						"          {Veteran Ind} as string,",
						"          LGBTQ as string,",
						"          {Disability Ind} as string,",
						"          {Applicant Final Disposition Date} as date 'MM/dd/yyyy',",
						"          {Applicant Final Disposition} as string,",
						"          {Applicant Step Before Final Disposition} as string,",
						"          {Applicant Rejected Reason} as string,",
						"          {Applicant Other (1)} as string,",
						"          {Applicant Other (2)} as string,",
						"          {Applicant Other (3)} as string,",
						"          {Applicant Other (4)} as string,",
						"          {Applicant Other (5)} as string,",
						"          RowCount as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> Applicant2",
						"RemoveNullRows alterRow(upsertIf(true()),",
						"     deleteIf(isNull({Client ID})),",
						"     deleteIf(isNull({Client Engagement Date})),",
						"     deleteIf(isNull({Event Date})),",
						"     deleteIf(isNull(Event)),",
						"     deleteIf(isNull({Requisition ID})),",
						"     deleteIf(isNull({Applicant ID}))) ~> alterRow1",
						"derivedColumn2 select(mapColumn(",
						"          ClientId = {Client ID},",
						"          ClientEngagementDt = {Client Engagement Date},",
						"          EventDt = {Event Date},",
						"          EventMonth,",
						"          EventQuarter = {Event Quarter},",
						"          EventYear = {Event Year},",
						"          Event,",
						"          ReqId = {Requisition ID},",
						"          ApplDt = {Application Date},",
						"          ApplicantId = {Applicant ID},",
						"          ApplicantCity = {Applicant City},",
						"          ApplicantState = {Applicant State},",
						"          ApplicantCountry = {Applicant Country},",
						"          Source,",
						"          ApplType = {Applicant Type},",
						"          InternalWorkerId = {Internal Worker ID},",
						"          Race,",
						"          HispanicLatinoOrigin = {Hispanic or Latino Origin},",
						"          Gender,",
						"          Veteran = {Veteran Ind},",
						"          LGBTQ,",
						"          DisabilityInd = {Disability Ind},",
						"          ApplFinalDispDt = {Applicant Final Disposition Date},",
						"          ApplFinalDisp = {Applicant Final Disposition},",
						"          ApplStepBeforeFinalDisp = {Applicant Step Before Final Disposition},",
						"          ApplRejectedReason = {Applicant Rejected Reason},",
						"          ApplOther1 = {Applicant Other (1)},",
						"          ApplOther2 = {Applicant Other (2)},",
						"          ApplOther3 = {Applicant Other (3)},",
						"          ApplOther4 = {Applicant Other (4)},",
						"          ApplOther5 = {Applicant Other (5)},",
						"          EventId,",
						"          LoadDt",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> AlterColumnNamesforMap",
						"Applicant2 filter(!(isNull({Event Date}))||!(isNull({Applicant ID}))) ~> RemoveNullRows",
						"alterRow1 derive(EventId = 'APP',",
						"          LoadDt = currentDate()) ~> derivedColumn2",
						"AlterColumnNamesforMap sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          ClientId as string,",
						"          ClientEngagementDt as date,",
						"          EventDt as date,",
						"          EventMonth as integer,",
						"          EventQuarter as integer,",
						"          EventYear as integer,",
						"          Event as string,",
						"          EventId as string,",
						"          ReqId as string,",
						"          ApplicantId as string,",
						"          Source as string,",
						"          ApplType as string,",
						"          InternalWorkerId as string,",
						"          Race as string,",
						"          HispanicLatinoOrigin as string,",
						"          Gender as string,",
						"          Veteran as string,",
						"          LGBTQ as string,",
						"          DisabilityInd as string,",
						"          ApplFinalDisp as string,",
						"          ApplStepBeforeFinalDisp as string,",
						"          ApplRejectedReason as string,",
						"          ApplOther1 as string,",
						"          ApplOther2 as string,",
						"          ApplOther3 as string,",
						"          ApplOther4 as string,",
						"          ApplOther5 as string,",
						"          LoadDt as date,",
						"          ApplicantCity as string,",
						"          ApplicantState as string,",
						"          ApplicantCountry as string,",
						"          ApplDt as date,",
						"          ApplFinalDispDt as date",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:true,",
						"     keys:['ClientId','ClientEngagementDt','EventDt','EventId','ReqId','ApplicantId'],",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          ClientId,",
						"          ClientEngagementDt,",
						"          EventDt,",
						"          EventMonth,",
						"          EventQuarter,",
						"          EventYear,",
						"          Event,",
						"          EventId,",
						"          ReqId,",
						"          ApplicantId,",
						"          Source,",
						"          ApplType,",
						"          InternalWorkerId,",
						"          Race,",
						"          HispanicLatinoOrigin,",
						"          Gender,",
						"          Veteran,",
						"          LGBTQ,",
						"          DisabilityInd,",
						"          ApplFinalDisp,",
						"          ApplStepBeforeFinalDisp,",
						"          ApplRejectedReason,",
						"          ApplOther1,",
						"          ApplOther2,",
						"          ApplOther3,",
						"          ApplOther4,",
						"          ApplOther5,",
						"          LoadDt,",
						"          ApplicantCity,",
						"          ApplicantState,",
						"          ApplicantCountry,",
						"          ApplDt,",
						"          ApplFinalDispDt",
						"     )) ~> sink2"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Append_FactTbl_Core')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "Client/Database/Load Fact Tables"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "Source_FactTbl_AllCoreData_File",
								"type": "DatasetReference"
							},
							"name": "Core"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "etalentCoreFactTbl",
								"type": "DatasetReference"
							},
							"name": "AppendCoreFact"
						}
					],
					"transformations": [
						{
							"name": "alterRow1"
						},
						{
							"name": "RemoveNullRows"
						},
						{
							"name": "derivedColumn1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          {Client ID} as string,",
						"          {Client Engagement Date} as date 'MM/dd/yyyy',",
						"          EventMonth as string,",
						"          {Event Quarter} as string,",
						"          {Event Year} as string,",
						"          {Worker ID} as string,",
						"          {Event Date} as string,",
						"          {Event Code} as string,",
						"          {Event Type} as string,",
						"          Event as string,",
						"          {Event Reason} as string,",
						"          {Worker Type} as string,",
						"          {Job Title} as string,",
						"          {Job Function} as string,",
						"          {Years in Job} as string,",
						"          {Previous Job Title} as string,",
						"          {Previous Job Function} as string,",
						"          {Original Hire Date} as string,",
						"          {Current Hire Date} as string,",
						"          {Years of Service} as string,",
						"          {Years of Service Band} as string,",
						"          {Years of Service Sort ID} as string,",
						"          {Last Promo Date} as string,",
						"          {Corporate Title} as string,",
						"          {Previous Corporate Title} as string,",
						"          {Manager Indicator} as string,",
						"          {Direct Manager Worker ID} as string,",
						"          {Work Office Location} as string,",
						"          {Work City} as string,",
						"          {Work State} as string,",
						"          {Work Country} as string,",
						"          {Strategic Work Location Ind} as string,",
						"          {Legacy Organization} as string,",
						"          {Business Group Level 1} as string,",
						"          {Business Group Level 2} as string,",
						"          {Business Group Level 3} as string,",
						"          {Business Group Level 4} as string,",
						"          Race as string,",
						"          {Hispanic or Latino Origin} as string,",
						"          Gender as string,",
						"          {Veteran Ind} as string,",
						"          LGBTQ as string,",
						"          {Disability Ind} as string,",
						"          {Birth Year} as string,",
						"          {Generation Desc} as string,",
						"          {Generation Sort ID} as string,",
						"          EmpCount as string,",
						"          RowCount as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> Core",
						"RemoveNullRows alterRow(upsertIf(true()),",
						"     deleteIf(isNull({Client ID})),",
						"     deleteIf(isNull({Client Engagement Date})),",
						"     deleteIf(isNull({Worker ID})),",
						"     deleteIf(isNull({Event Date})),",
						"     deleteIf(isNull({Event Year})),",
						"     deleteIf(isNull({Event Code})),",
						"     deleteIf(isNull({Event Type})),",
						"     deleteIf(isNull(Event)),",
						"     deleteIf(isNull({Event Reason})),",
						"     deleteIf(isNull({Worker Type})),",
						"     deleteIf(isNull({Job Title})),",
						"     deleteIf(isNull({Job Function})),",
						"     deleteIf(isNull({Years in Job})),",
						"     deleteIf(isNull({Previous Job Title})),",
						"     deleteIf(isNull({Previous Job Function})),",
						"     deleteIf(isNull({Original Hire Date})),",
						"     deleteIf(isNull({Current Hire Date})),",
						"     deleteIf(isNull({Years of Service})),",
						"     deleteIf(isNull({Years of Service Band})),",
						"     deleteIf(isNull({Years of Service Sort ID})),",
						"     deleteIf(isNull({Corporate Title})),",
						"     deleteIf(isNull({Previous Corporate Title})),",
						"     deleteIf(isNull({Manager Indicator})),",
						"     deleteIf(isNull({Direct Manager Worker ID})),",
						"     deleteIf(isNull({Work Office Location})),",
						"     deleteIf(isNull({Work City})),",
						"     deleteIf(isNull({Work State})),",
						"     deleteIf(isNull({Work Country})),",
						"     deleteIf(isNull({Strategic Work Location Ind})),",
						"     deleteIf(isNull({Legacy Organization})),",
						"     deleteIf(isNull({Business Group Level 1})),",
						"     deleteIf(isNull({Business Group Level 2})),",
						"     deleteIf(isNull({Business Group Level 3})),",
						"     deleteIf(isNull({Business Group Level 4})),",
						"     deleteIf(isNull(Race)),",
						"     deleteIf(isNull({Hispanic or Latino Origin})),",
						"     deleteIf(isNull(Gender)),",
						"     deleteIf(isNull({Veteran Ind})),",
						"     deleteIf(isNull(LGBTQ)),",
						"     deleteIf(isNull({Disability Ind})),",
						"     deleteIf(isNull({Generation Desc})),",
						"     deleteIf(isNull({Generation Sort ID})),",
						"     deleteIf(isNull(EmpCount))) ~> alterRow1",
						"Core filter(!(isNull({Event Date}))||!(isNull({Worker ID}))) ~> RemoveNullRows",
						"alterRow1 derive(LoadDt = currentDate()) ~> derivedColumn1",
						"derivedColumn1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          ClientId as string,",
						"          ClientEngagementDt as date,",
						"          WorkerId as string,",
						"          EventDt as date,",
						"          EventMonth as integer,",
						"          EventQuarter as integer,",
						"          EventYear as integer,",
						"          Event as string,",
						"          EventId as string,",
						"          EventType as string,",
						"          EventReason as string,",
						"          WorkerType as string,",
						"          JobTitle as string,",
						"          JobFunction as string,",
						"          YearsinJob as double,",
						"          PrevJobTitle as string,",
						"          PrevJobFunction as string,",
						"          LastPromoDt as date,",
						"          OrigHireDt as date,",
						"          CurrHireDt as date,",
						"          YearsofSrvc as double,",
						"          YearsofSrvcBand as string,",
						"          YearsofSrvcBandSortId as integer,",
						"          CorpTitle as string,",
						"          PrevCorpTitle as string,",
						"          ManagerInd as string,",
						"          DirectMgrWorkerId as string,",
						"          WorkOfficeLoc as string,",
						"          WorkOfficeCity as string,",
						"          WorkOfficeState as string,",
						"          WorkOfficeCountry as string,",
						"          WorkStrategicLocInd as string,",
						"          LegacyOrg as string,",
						"          BusinessGrpLvl1 as string,",
						"          BusinessGrpLvl2 as string,",
						"          BusinessGrpLvl3 as string,",
						"          BusinessGrpLvl4 as string,",
						"          Race as string,",
						"          HispanicLatinoOrigin as string,",
						"          Gender as string,",
						"          Veteran as string,",
						"          LGBTQ as string,",
						"          DisabilityInd as string,",
						"          BirthYear as integer,",
						"          Generation as string,",
						"          GenerationSortId as integer,",
						"          EmpCount as integer,",
						"          LoadDt as date",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:true,",
						"     keys:['ClientId','ClientEngagementDt','EventDt','EventId','WorkerId'],",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          ClientId = {Client ID},",
						"          ClientEngagementDt = {Client Engagement Date},",
						"          WorkerId = {Worker ID},",
						"          EventDt = {Event Date},",
						"          EventMonth,",
						"          EventQuarter = {Event Quarter},",
						"          EventYear = {Event Year},",
						"          Event,",
						"          EventId = {Event Code},",
						"          EventType = {Event Type},",
						"          EventReason = {Event Reason},",
						"          WorkerType = {Worker Type},",
						"          JobTitle = {Job Title},",
						"          JobFunction = {Job Function},",
						"          YearsinJob = {Years in Job},",
						"          PrevJobTitle = {Previous Job Title},",
						"          PrevJobFunction = {Previous Job Function},",
						"          LastPromoDt = {Last Promo Date},",
						"          OrigHireDt = {Original Hire Date},",
						"          CurrHireDt = {Current Hire Date},",
						"          YearsofSrvc = {Years of Service},",
						"          YearsofSrvcBand = {Years of Service Band},",
						"          YearsofSrvcBandSortId = {Years of Service Sort ID},",
						"          CorpTitle = {Corporate Title},",
						"          PrevCorpTitle = {Previous Corporate Title},",
						"          ManagerInd = {Manager Indicator},",
						"          DirectMgrWorkerId = {Direct Manager Worker ID},",
						"          WorkOfficeLoc = {Work Office Location},",
						"          WorkOfficeCity = {Work City},",
						"          WorkOfficeState = {Work State},",
						"          WorkOfficeCountry = {Work Country},",
						"          WorkStrategicLocInd = {Strategic Work Location Ind},",
						"          LegacyOrg = {Legacy Organization},",
						"          BusinessGrpLvl1 = {Business Group Level 1},",
						"          BusinessGrpLvl2 = {Business Group Level 2},",
						"          BusinessGrpLvl3 = {Business Group Level 3},",
						"          BusinessGrpLvl4 = {Business Group Level 4},",
						"          Race,",
						"          HispanicLatinoOrigin = {Hispanic or Latino Origin},",
						"          Gender,",
						"          Veteran = {Veteran Ind},",
						"          LGBTQ,",
						"          DisabilityInd = {Disability Ind},",
						"          BirthYear = {Birth Year},",
						"          Generation = {Generation Desc},",
						"          GenerationSortId = {Generation Sort ID},",
						"          EmpCount,",
						"          LoadDt",
						"     )) ~> AppendCoreFact"
					]
				}
			},
			"dependsOn": []
		}
	]
}