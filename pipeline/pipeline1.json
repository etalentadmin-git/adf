{
	"name": "pipeline1",
	"properties": {
		"activities": [
			{
				"name": "Until1",
				"type": "Until",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@greaterOrEquals(int(variables('Counter')),1)",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "Set variable1",
							"type": "SetVariable",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"variableName": "tempCounter",
								"value": {
									"value": "@string(add(int(variables('Counter')),1))",
									"type": "Expression"
								}
							}
						},
						{
							"name": "Set variable2",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "Set variable1",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"variableName": "Counter",
								"value": {
									"value": "@variables('tempCounter')",
									"type": "Expression"
								}
							}
						},
						{
							"name": "If Condition T1",
							"type": "IfCondition",
							"dependsOn": [
								{
									"activity": "Set variable2",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@equals(variables('Counter'),'1')",
									"type": "Expression"
								},
								"ifTrueActivities": [
									{
										"name": "LookupT1",
										"type": "Lookup",
										"dependsOn": [],
										"policy": {
											"timeout": "0.12:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"source": {
												"type": "AzureSqlSource",
												"sqlReaderQuery": {
													"value": "Select * from [dbo].[Tmp_OtherAnalysisTbl] where [Id]='@{int(variables('Counter'))}'",
													"type": "Expression"
												},
												"queryTimeout": "02:00:00",
												"partitionOption": "None"
											},
											"dataset": {
												"referenceName": "etalentTmp_OtherAnalysisTbl",
												"type": "DatasetReference"
											}
										}
									},
									{
										"name": "Set T1 Type",
										"type": "SetVariable",
										"dependsOn": [
											{
												"activity": "LookupT1",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"userProperties": [],
										"typeProperties": {
											"variableName": "T1_Type",
											"value": {
												"value": "@activity('LookupT1').output.firstRow.Id",
												"type": "Expression"
											}
										}
									},
									{
										"name": "Set T1 Year",
										"type": "SetVariable",
										"dependsOn": [
											{
												"activity": "LookupT1",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"userProperties": [],
										"typeProperties": {
											"variableName": "T1_Year",
											"value": {
												"value": "@activity('LookupT1').output.firstRow.Year",
												"type": "Expression"
											}
										}
									},
									{
										"name": "Set T2 Quarter",
										"type": "SetVariable",
										"dependsOn": [
											{
												"activity": "LookupT1",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"userProperties": [],
										"typeProperties": {
											"variableName": "T1_Quarter",
											"value": {
												"value": "@activity('LookupT1').output.firstRow.Quarter",
												"type": "Expression"
											}
										}
									}
								]
							}
						}
					],
					"timeout": "0.12:00:00"
				}
			},
			{
				"name": "DF_Adhoc_OtherAnaylysis_Output",
				"type": "ExecuteDataFlow",
				"dependsOn": [
					{
						"activity": "Until1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataflow": {
						"referenceName": "DF_Adhoc_OtherAnaylysis_Output",
						"type": "DataFlowReference",
						"parameters": {
							"Flow_Client_Id": {
								"value": "'@{pipeline().parameters.P_Client_Id}'",
								"type": "Expression"
							},
							"Flow_Client_Dt": {
								"value": "'@{pipeline().parameters.P_Client_Dt}'",
								"type": "Expression"
							},
							"T1_Event_Type": {
								"value": "'@{variables('T1_Type')}'",
								"type": "Expression"
							},
							"T1_Event_Year": {
								"value": "'@{variables('T1_Year')}'",
								"type": "Expression"
							},
							"T1_Event_Qtr": {
								"value": "'@{variables('T1_Quarter')}'",
								"type": "Expression"
							}
						},
						"datasetParameters": {
							"sink1": {
								"Source_Client_Fldr": {
									"value": "@pipeline().parameters.P_Client_Id",
									"type": "Expression"
								},
								"Source_Client_Date": {
									"value": "@pipeline().parameters.P_Client_Dt",
									"type": "Expression"
								},
								"Source_Client_Year": {
									"value": "@pipeline().parameters.P_Folder_Year",
									"type": "Expression"
								},
								"Source_Client_Quarter": {
									"value": "@pipeline().parameters.P_Folder_Quarter",
									"type": "Expression"
								}
							}
						}
					},
					"compute": {
						"coreCount": 8,
						"computeType": "General"
					},
					"traceLevel": "Fine"
				}
			}
		],
		"parameters": {
			"P_Client_Id": {
				"type": "string"
			},
			"P_Client_Dt": {
				"type": "string"
			},
			"P_Folder_Year": {
				"type": "string"
			},
			"P_Folder_Quarter": {
				"type": "string"
			}
		},
		"variables": {
			"tempCounter": {
				"type": "String"
			},
			"Counter": {
				"type": "String"
			},
			"T1_Type": {
				"type": "String"
			},
			"T1_Year": {
				"type": "String"
			},
			"T1_Quarter": {
				"type": "String"
			}
		},
		"annotations": []
	}
}