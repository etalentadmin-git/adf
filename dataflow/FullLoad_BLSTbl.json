{
	"name": "FullLoad_BLSTbl",
	"properties": {
		"folder": {
			"name": "External Data/BLS"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "BLS_AmerIndAlaskNat_Female_Tbl",
						"type": "DatasetReference"
					},
					"name": "AmerIndAlaskNatFemale"
				},
				{
					"dataset": {
						"referenceName": "BLS_AmerIndAlaskNat_Male_Tbl",
						"type": "DatasetReference"
					},
					"name": "AmerIndAlaskNatMale"
				},
				{
					"dataset": {
						"referenceName": "BLS_AmerIndAlaskNat_Total_Tbl",
						"type": "DatasetReference"
					},
					"name": "AmerIndAlaskNatTotal"
				},
				{
					"dataset": {
						"referenceName": "BLS_Asian_Female_Tbl",
						"type": "DatasetReference"
					},
					"name": "AsianFemale"
				},
				{
					"dataset": {
						"referenceName": "BLS_Asian_Male_Tbl",
						"type": "DatasetReference"
					},
					"name": "AsianMale"
				},
				{
					"dataset": {
						"referenceName": "BLS_Asian_Total_Tbl",
						"type": "DatasetReference"
					},
					"name": "AsianTotal"
				},
				{
					"dataset": {
						"referenceName": "BLS_Black_Female_Tbl",
						"type": "DatasetReference"
					},
					"name": "BlackFemale"
				},
				{
					"dataset": {
						"referenceName": "BLS_Black_Male_Tbl",
						"type": "DatasetReference"
					},
					"name": "BlackMale"
				},
				{
					"dataset": {
						"referenceName": "BLS_Black_Total_Tbl",
						"type": "DatasetReference"
					},
					"name": "BlackTotal"
				},
				{
					"dataset": {
						"referenceName": "BLS_Female_Tbl",
						"type": "DatasetReference"
					},
					"name": "Female"
				},
				{
					"dataset": {
						"referenceName": "BLS_Latinx_Female_Tbl",
						"type": "DatasetReference"
					},
					"name": "LatinxFemale"
				},
				{
					"dataset": {
						"referenceName": "BLS_Latinx_Male_Tbl",
						"type": "DatasetReference"
					},
					"name": "LatinxMale"
				},
				{
					"dataset": {
						"referenceName": "BLS_Latinx_Total_Tbl",
						"type": "DatasetReference"
					},
					"name": "LatinxTotal"
				},
				{
					"dataset": {
						"referenceName": "BLS_Male_Tbl",
						"type": "DatasetReference"
					},
					"name": "Male"
				},
				{
					"dataset": {
						"referenceName": "BLS_NatHawPacIsl_Female_Tbl",
						"type": "DatasetReference"
					},
					"name": "NatHawPacIslFemale"
				},
				{
					"dataset": {
						"referenceName": "BLS_NatHawPacIsl_Male_Tbl",
						"type": "DatasetReference"
					},
					"name": "NatHawPacIslMale"
				},
				{
					"dataset": {
						"referenceName": "BLS_NatHawPacIsl_Total_Tbl",
						"type": "DatasetReference"
					},
					"name": "NatHawPacIslTotal"
				},
				{
					"dataset": {
						"referenceName": "BLS_Total_Tbl",
						"type": "DatasetReference"
					},
					"name": "Total"
				},
				{
					"dataset": {
						"referenceName": "BLS_TwoOrMore_Female_Tbl",
						"type": "DatasetReference"
					},
					"name": "TwoOrMoreFemale"
				},
				{
					"dataset": {
						"referenceName": "BLS_TwoOrMore_Male_Tbl",
						"type": "DatasetReference"
					},
					"name": "TwoOrMoreMale"
				},
				{
					"dataset": {
						"referenceName": "BLS_TwoOrMore_Total_Tbl",
						"type": "DatasetReference"
					},
					"name": "TwoOrMoreTotal"
				},
				{
					"dataset": {
						"referenceName": "BLS_White_Female_Tbl",
						"type": "DatasetReference"
					},
					"name": "WhiteFemale"
				},
				{
					"dataset": {
						"referenceName": "BLS_White_Male_Tbl",
						"type": "DatasetReference"
					},
					"name": "WhiteMale"
				},
				{
					"dataset": {
						"referenceName": "BLS_White_Total_Tbl",
						"type": "DatasetReference"
					},
					"name": "WhiteTotal"
				},
				{
					"dataset": {
						"referenceName": "BLS_Asian_Female_Hisp_Tbl",
						"type": "DatasetReference"
					},
					"name": "AsianFemaleHisp"
				},
				{
					"dataset": {
						"referenceName": "BLS_Asian_Female_NonHisp_Tbl",
						"type": "DatasetReference"
					},
					"name": "AsianFemaleNonHisp"
				},
				{
					"dataset": {
						"referenceName": "BLS_Asian_Male_Hisp_Tbl",
						"type": "DatasetReference"
					},
					"name": "AsianMaleHisp"
				},
				{
					"dataset": {
						"referenceName": "BLS_Asian_Male_NonHisp_Tbl",
						"type": "DatasetReference"
					},
					"name": "AsianMaleNonHisp"
				},
				{
					"dataset": {
						"referenceName": "BLS_Asian_Total_Hisp_Tbl",
						"type": "DatasetReference"
					},
					"name": "AsianTotalHisp"
				},
				{
					"dataset": {
						"referenceName": "BLS_Asian_Total_NonHisp_Tbl",
						"type": "DatasetReference"
					},
					"name": "AsianTotalNonHisp"
				},
				{
					"dataset": {
						"referenceName": "BLS_Black_Female_Hisp_Tbl",
						"type": "DatasetReference"
					},
					"name": "BlackFemaleHisp"
				},
				{
					"dataset": {
						"referenceName": "BLS_Black_Female_NonHisp_Tbl",
						"type": "DatasetReference"
					},
					"name": "BlackFemaleNonHisp"
				},
				{
					"dataset": {
						"referenceName": "BLS_Black_Male_Hisp_Tbl",
						"type": "DatasetReference"
					},
					"name": "BlackMaleHisp"
				},
				{
					"dataset": {
						"referenceName": "BLS_Black_Male_NonHisp_Tbl",
						"type": "DatasetReference"
					},
					"name": "BlackMaleNonHisp"
				},
				{
					"dataset": {
						"referenceName": "BLS_Black_Total_Hisp_Tbl",
						"type": "DatasetReference"
					},
					"name": "BlackTotalHisp"
				},
				{
					"dataset": {
						"referenceName": "BLS_Black_Total_NonHisp_Tbl",
						"type": "DatasetReference"
					},
					"name": "BlackTotalNonHisp"
				},
				{
					"dataset": {
						"referenceName": "BLS_Other_Female_Hisp_Tbl",
						"type": "DatasetReference"
					},
					"name": "OtherFemaleHisp"
				},
				{
					"dataset": {
						"referenceName": "BLS_Other_Male_Hisp_Tbl",
						"type": "DatasetReference"
					},
					"name": "OtherMaleHisp"
				},
				{
					"dataset": {
						"referenceName": "BLS_Other_Total_Hisp_Tbl",
						"type": "DatasetReference"
					},
					"name": "OtherTotalHisp"
				},
				{
					"dataset": {
						"referenceName": "BLS_White_Female_Hisp_Tbl",
						"type": "DatasetReference"
					},
					"name": "WhiteFemaleHisp"
				},
				{
					"dataset": {
						"referenceName": "BLS_White_Female_NonHisp_Tbl",
						"type": "DatasetReference"
					},
					"name": "WhiteFemaleNonHisp"
				},
				{
					"dataset": {
						"referenceName": "BLS_White_Male_Hisp_Tbl",
						"type": "DatasetReference"
					},
					"name": "WhiteMaleHisp"
				},
				{
					"dataset": {
						"referenceName": "BLS_White_Male_NonHisp_Tbl",
						"type": "DatasetReference"
					},
					"name": "WhiteMaleNonHisp"
				},
				{
					"dataset": {
						"referenceName": "BLS_White_Total_Hisp_Tbl",
						"type": "DatasetReference"
					},
					"name": "WhiteTotalHisp"
				},
				{
					"dataset": {
						"referenceName": "BLS_White_Total_NonHisp_Tbl",
						"type": "DatasetReference"
					},
					"name": "WhiteTotalNonHisp"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "etalentBLSTbl",
						"type": "DatasetReference"
					},
					"name": "FullLoadBLSTable"
				}
			],
			"transformations": [
				{
					"name": "derivedColumn1"
				},
				{
					"name": "select1"
				},
				{
					"name": "union1"
				},
				{
					"name": "RemoveDuplicates"
				},
				{
					"name": "OtherTotalHispFinal"
				},
				{
					"name": "GetMaxID"
				},
				{
					"name": "JoinInMaxTimeID"
				},
				{
					"name": "CalculateLatestTimeValue"
				},
				{
					"name": "GetMaxIDMaleHisp"
				},
				{
					"name": "JoinInMaxTimeIDMaleHisp"
				},
				{
					"name": "CalculateLatestTimeValueOtherMaleHisp"
				},
				{
					"name": "OtherMaleHispFinal"
				},
				{
					"name": "GetMaxIDFemaleHisp"
				},
				{
					"name": "JoinInMaxTimeIDFemaleHisp"
				},
				{
					"name": "CalculateLatestTimeValueOtherFemaleHisp"
				},
				{
					"name": "OtherFemaleHispFinal"
				}
			],
			"scriptLines": [
				"source(output(",
				"          Source as string,",
				"          SourceId as string,",
				"          Desc as string,",
				"          Year as short,",
				"          Quarter as integer,",
				"          Latest as string,",
				"          EthnicOrigin as string,",
				"          Race as string,",
				"          Gender as string,",
				"          Headcount as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> AmerIndAlaskNatFemale",
				"source(output(",
				"          Source as string,",
				"          SourceId as string,",
				"          Desc as string,",
				"          Year as short,",
				"          Quarter as integer,",
				"          Latest as string,",
				"          EthnicOrigin as string,",
				"          Race as string,",
				"          Gender as string,",
				"          Headcount as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> AmerIndAlaskNatMale",
				"source(output(",
				"          Source as string,",
				"          SourceId as string,",
				"          Desc as string,",
				"          Year as short,",
				"          Quarter as integer,",
				"          Latest as string,",
				"          EthnicOrigin as string,",
				"          Race as string,",
				"          Gender as string,",
				"          Headcount as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> AmerIndAlaskNatTotal",
				"source(output(",
				"          Source as string,",
				"          SourceId as string,",
				"          Desc as string,",
				"          Year as short,",
				"          Quarter as integer,",
				"          Latest as string,",
				"          EthnicOrigin as string,",
				"          Race as string,",
				"          Gender as string,",
				"          Headcount as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> AsianFemale",
				"source(output(",
				"          Source as string,",
				"          SourceId as string,",
				"          Desc as string,",
				"          Year as short,",
				"          Quarter as integer,",
				"          Latest as string,",
				"          EthnicOrigin as string,",
				"          Race as string,",
				"          Gender as string,",
				"          Headcount as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> AsianMale",
				"source(output(",
				"          Source as string,",
				"          SourceId as string,",
				"          Desc as string,",
				"          Year as short,",
				"          Quarter as integer,",
				"          Latest as string,",
				"          EthnicOrigin as string,",
				"          Race as string,",
				"          Gender as string,",
				"          Headcount as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> AsianTotal",
				"source(output(",
				"          Source as string,",
				"          SourceId as string,",
				"          Desc as string,",
				"          Year as short,",
				"          Quarter as integer,",
				"          Latest as string,",
				"          EthnicOrigin as string,",
				"          Race as string,",
				"          Gender as string,",
				"          Headcount as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> BlackFemale",
				"source(output(",
				"          Source as string,",
				"          SourceId as string,",
				"          Desc as string,",
				"          Year as short,",
				"          Quarter as integer,",
				"          Latest as string,",
				"          EthnicOrigin as string,",
				"          Race as string,",
				"          Gender as string,",
				"          Headcount as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> BlackMale",
				"source(output(",
				"          Source as string,",
				"          SourceId as string,",
				"          Desc as string,",
				"          Year as short,",
				"          Quarter as integer,",
				"          Latest as string,",
				"          EthnicOrigin as string,",
				"          Race as string,",
				"          Gender as string,",
				"          Headcount as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> BlackTotal",
				"source(output(",
				"          Source as string,",
				"          SourceId as string,",
				"          Desc as string,",
				"          Year as short,",
				"          Quarter as integer,",
				"          Latest as string,",
				"          EthnicOrigin as string,",
				"          Race as string,",
				"          Gender as string,",
				"          Headcount as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> Female",
				"source(output(",
				"          Source as string,",
				"          SourceId as string,",
				"          Desc as string,",
				"          Year as short,",
				"          Quarter as integer,",
				"          Latest as string,",
				"          EthnicOrigin as string,",
				"          Race as string,",
				"          Gender as string,",
				"          Headcount as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> LatinxFemale",
				"source(output(",
				"          Source as string,",
				"          SourceId as string,",
				"          Desc as string,",
				"          Year as short,",
				"          Quarter as integer,",
				"          Latest as string,",
				"          EthnicOrigin as string,",
				"          Race as string,",
				"          Gender as string,",
				"          Headcount as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> LatinxMale",
				"source(output(",
				"          Source as string,",
				"          SourceId as string,",
				"          Desc as string,",
				"          Year as short,",
				"          Quarter as integer,",
				"          Latest as string,",
				"          EthnicOrigin as string,",
				"          Race as string,",
				"          Gender as string,",
				"          Headcount as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> LatinxTotal",
				"source(output(",
				"          Source as string,",
				"          SourceId as string,",
				"          Desc as string,",
				"          Year as short,",
				"          Quarter as integer,",
				"          Latest as string,",
				"          EthnicOrigin as string,",
				"          Race as string,",
				"          Gender as string,",
				"          Headcount as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> Male",
				"source(output(",
				"          Source as string,",
				"          SourceId as string,",
				"          Desc as string,",
				"          Year as short,",
				"          Quarter as integer,",
				"          Latest as string,",
				"          EthnicOrigin as string,",
				"          Race as string,",
				"          Gender as string,",
				"          Headcount as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> NatHawPacIslFemale",
				"source(output(",
				"          Source as string,",
				"          SourceId as string,",
				"          Desc as string,",
				"          Year as short,",
				"          Quarter as integer,",
				"          Latest as string,",
				"          EthnicOrigin as string,",
				"          Race as string,",
				"          Gender as string,",
				"          Headcount as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> NatHawPacIslMale",
				"source(output(",
				"          Source as string,",
				"          SourceId as string,",
				"          Desc as string,",
				"          Year as short,",
				"          Quarter as integer,",
				"          Latest as string,",
				"          EthnicOrigin as string,",
				"          Race as string,",
				"          Gender as string,",
				"          Headcount as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> NatHawPacIslTotal",
				"source(output(",
				"          Source as string,",
				"          SourceId as string,",
				"          Desc as string,",
				"          Year as short,",
				"          Quarter as integer,",
				"          Latest as string,",
				"          EthnicOrigin as string,",
				"          Race as string,",
				"          Gender as string,",
				"          Headcount as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> Total",
				"source(output(",
				"          Source as string,",
				"          SourceId as string,",
				"          Desc as string,",
				"          Year as short,",
				"          Quarter as integer,",
				"          Latest as string,",
				"          EthnicOrigin as string,",
				"          Race as string,",
				"          Gender as string,",
				"          Headcount as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> TwoOrMoreFemale",
				"source(output(",
				"          Source as string,",
				"          SourceId as string,",
				"          Desc as string,",
				"          Year as short,",
				"          Quarter as integer,",
				"          Latest as string,",
				"          EthnicOrigin as string,",
				"          Race as string,",
				"          Gender as string,",
				"          Headcount as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> TwoOrMoreMale",
				"source(output(",
				"          Source as string,",
				"          SourceId as string,",
				"          Desc as string,",
				"          Year as short,",
				"          Quarter as integer,",
				"          Latest as string,",
				"          EthnicOrigin as string,",
				"          Race as string,",
				"          Gender as string,",
				"          Headcount as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> TwoOrMoreTotal",
				"source(output(",
				"          Source as string,",
				"          SourceId as string,",
				"          Desc as string,",
				"          Year as short,",
				"          Quarter as integer,",
				"          Latest as string,",
				"          EthnicOrigin as string,",
				"          Race as string,",
				"          Gender as string,",
				"          Headcount as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> WhiteFemale",
				"source(output(",
				"          Source as string,",
				"          SourceId as string,",
				"          Desc as string,",
				"          Year as short,",
				"          Quarter as integer,",
				"          Latest as string,",
				"          EthnicOrigin as string,",
				"          Race as string,",
				"          Gender as string,",
				"          Headcount as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> WhiteMale",
				"source(output(",
				"          Source as string,",
				"          SourceId as string,",
				"          Desc as string,",
				"          Year as short,",
				"          Quarter as integer,",
				"          Latest as string,",
				"          EthnicOrigin as string,",
				"          Race as string,",
				"          Gender as string,",
				"          Headcount as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> WhiteTotal",
				"source(output(",
				"          Source as string,",
				"          SourceId as string,",
				"          Desc as string,",
				"          Year as short,",
				"          Quarter as integer,",
				"          Latest as string,",
				"          EthnicOrigin as string,",
				"          Race as string,",
				"          Gender as string,",
				"          Headcount as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> AsianFemaleHisp",
				"source(output(",
				"          Source as string,",
				"          SourceId as string,",
				"          Desc as string,",
				"          Year as short,",
				"          Quarter as integer,",
				"          Latest as string,",
				"          EthnicOrigin as string,",
				"          Race as string,",
				"          Gender as string,",
				"          Headcount as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> AsianFemaleNonHisp",
				"source(output(",
				"          Source as string,",
				"          SourceId as string,",
				"          Desc as string,",
				"          Year as short,",
				"          Quarter as integer,",
				"          Latest as string,",
				"          EthnicOrigin as string,",
				"          Race as string,",
				"          Gender as string,",
				"          Headcount as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> AsianMaleHisp",
				"source(output(",
				"          Source as string,",
				"          SourceId as string,",
				"          Desc as string,",
				"          Year as short,",
				"          Quarter as integer,",
				"          Latest as string,",
				"          EthnicOrigin as string,",
				"          Race as string,",
				"          Gender as string,",
				"          Headcount as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> AsianMaleNonHisp",
				"source(output(",
				"          Source as string,",
				"          SourceId as string,",
				"          Desc as string,",
				"          Year as short,",
				"          Quarter as integer,",
				"          Latest as string,",
				"          EthnicOrigin as string,",
				"          Race as string,",
				"          Gender as string,",
				"          Headcount as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> AsianTotalHisp",
				"source(output(",
				"          Source as string,",
				"          SourceId as string,",
				"          Desc as string,",
				"          Year as short,",
				"          Quarter as integer,",
				"          Latest as string,",
				"          EthnicOrigin as string,",
				"          Race as string,",
				"          Gender as string,",
				"          Headcount as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> AsianTotalNonHisp",
				"source(output(",
				"          Source as string,",
				"          SourceId as string,",
				"          Desc as string,",
				"          Year as short,",
				"          Quarter as integer,",
				"          Latest as string,",
				"          EthnicOrigin as string,",
				"          Race as string,",
				"          Gender as string,",
				"          Headcount as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> BlackFemaleHisp",
				"source(output(",
				"          Source as string,",
				"          SourceId as string,",
				"          Desc as string,",
				"          Year as short,",
				"          Quarter as integer,",
				"          Latest as string,",
				"          EthnicOrigin as string,",
				"          Race as string,",
				"          Gender as string,",
				"          Headcount as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> BlackFemaleNonHisp",
				"source(output(",
				"          Source as string,",
				"          SourceId as string,",
				"          Desc as string,",
				"          Year as short,",
				"          Quarter as integer,",
				"          Latest as string,",
				"          EthnicOrigin as string,",
				"          Race as string,",
				"          Gender as string,",
				"          Headcount as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> BlackMaleHisp",
				"source(output(",
				"          Source as string,",
				"          SourceId as string,",
				"          Desc as string,",
				"          Year as short,",
				"          Quarter as integer,",
				"          Latest as string,",
				"          EthnicOrigin as string,",
				"          Race as string,",
				"          Gender as string,",
				"          Headcount as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> BlackMaleNonHisp",
				"source(output(",
				"          Source as string,",
				"          SourceId as string,",
				"          Desc as string,",
				"          Year as short,",
				"          Quarter as integer,",
				"          Latest as string,",
				"          EthnicOrigin as string,",
				"          Race as string,",
				"          Gender as string,",
				"          Headcount as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> BlackTotalHisp",
				"source(output(",
				"          Source as string,",
				"          SourceId as string,",
				"          Desc as string,",
				"          Year as short,",
				"          Quarter as integer,",
				"          Latest as string,",
				"          EthnicOrigin as string,",
				"          Race as string,",
				"          Gender as string,",
				"          Headcount as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> BlackTotalNonHisp",
				"source(output(",
				"          Source as string,",
				"          SourceId as string,",
				"          Desc as string,",
				"          Year as short,",
				"          Quarter as integer,",
				"          Latest as string,",
				"          EthnicOrigin as string,",
				"          Race as string,",
				"          Gender as string,",
				"          Headcount as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> OtherFemaleHisp",
				"source(output(",
				"          Source as string,",
				"          SourceId as string,",
				"          Desc as string,",
				"          Year as short,",
				"          Quarter as integer,",
				"          Latest as string,",
				"          EthnicOrigin as string,",
				"          Race as string,",
				"          Gender as string,",
				"          Headcount as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> OtherMaleHisp",
				"source(output(",
				"          Source as string,",
				"          SourceId as string,",
				"          Desc as string,",
				"          Year as short,",
				"          Quarter as integer,",
				"          Latest as string,",
				"          EthnicOrigin as string,",
				"          Race as string,",
				"          Gender as string,",
				"          Headcount as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> OtherTotalHisp",
				"source(output(",
				"          Source as string,",
				"          SourceId as string,",
				"          Desc as string,",
				"          Year as short,",
				"          Quarter as integer,",
				"          Latest as string,",
				"          EthnicOrigin as string,",
				"          Race as string,",
				"          Gender as string,",
				"          Headcount as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> WhiteFemaleHisp",
				"source(output(",
				"          Source as string,",
				"          SourceId as string,",
				"          Desc as string,",
				"          Year as short,",
				"          Quarter as integer,",
				"          Latest as string,",
				"          EthnicOrigin as string,",
				"          Race as string,",
				"          Gender as string,",
				"          Headcount as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> WhiteFemaleNonHisp",
				"source(output(",
				"          Source as string,",
				"          SourceId as string,",
				"          Desc as string,",
				"          Year as short,",
				"          Quarter as integer,",
				"          Latest as string,",
				"          EthnicOrigin as string,",
				"          Race as string,",
				"          Gender as string,",
				"          Headcount as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> WhiteMaleHisp",
				"source(output(",
				"          Source as string,",
				"          SourceId as string,",
				"          Desc as string,",
				"          Year as short,",
				"          Quarter as integer,",
				"          Latest as string,",
				"          EthnicOrigin as string,",
				"          Race as string,",
				"          Gender as string,",
				"          Headcount as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> WhiteMaleNonHisp",
				"source(output(",
				"          Source as string,",
				"          SourceId as string,",
				"          Desc as string,",
				"          Year as short,",
				"          Quarter as integer,",
				"          Latest as string,",
				"          EthnicOrigin as string,",
				"          Race as string,",
				"          Gender as string,",
				"          Headcount as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> WhiteTotalHisp",
				"source(output(",
				"          Source as string,",
				"          SourceId as string,",
				"          Desc as string,",
				"          Year as short,",
				"          Quarter as integer,",
				"          Latest as string,",
				"          EthnicOrigin as string,",
				"          Race as string,",
				"          Gender as string,",
				"          Headcount as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> WhiteTotalNonHisp",
				"union1 derive(LastRefreshDt = currentTimestamp()) ~> derivedColumn1",
				"RemoveDuplicates select(mapColumn(",
				"          LastRefreshDt,",
				"          Source,",
				"          SourceId,",
				"          SourceDesc = Desc,",
				"          Year,",
				"          Quarter,",
				"          Latest,",
				"          EthnicOrigin,",
				"          Race,",
				"          Gender,",
				"          Headcount",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"AmerIndAlaskNatFemale, AmerIndAlaskNatMale, AmerIndAlaskNatTotal, AsianFemale, AsianMale, AsianTotal, BlackFemale, BlackMale, BlackTotal, Female, LatinxFemale, LatinxMale, LatinxTotal, Male, NatHawPacIslFemale, NatHawPacIslMale, NatHawPacIslTotal, Total, TwoOrMoreFemale, TwoOrMoreMale, TwoOrMoreTotal, WhiteFemale, WhiteMale, WhiteTotal, AsianFemaleHisp, AsianFemaleNonHisp, AsianMaleHisp, AsianMaleNonHisp, AsianTotalHisp, AsianTotalNonHisp, BlackFemaleHisp, BlackFemaleNonHisp, BlackMaleHisp, BlackMaleNonHisp, BlackTotalHisp, BlackTotalNonHisp, OtherFemaleHispFinal, OtherMaleHispFinal, OtherTotalHispFinal, WhiteFemaleHisp, WhiteFemaleNonHisp, WhiteMaleHisp, WhiteMaleNonHisp, WhiteTotalHisp, WhiteTotalNonHisp union(byName: true)~> union1",
				"derivedColumn1 aggregate(groupBy(Source,",
				"          SourceId,",
				"          Desc,",
				"          Year,",
				"          Quarter,",
				"          Latest,",
				"          EthnicOrigin,",
				"          Race,",
				"          Gender,",
				"          Headcount,",
				"          LastRefreshDt),",
				"     RowCount = count(SourceId)) ~> RemoveDuplicates",
				"CalculateLatestTimeValue select(mapColumn(",
				"          Source,",
				"          SourceId,",
				"          Desc,",
				"          Year,",
				"          Quarter,",
				"          Latest,",
				"          EthnicOrigin,",
				"          Race,",
				"          Gender,",
				"          Headcount",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> OtherTotalHispFinal",
				"OtherTotalHisp aggregate(groupBy(MAXSourceId = SourceId),",
				"     MaxTimePeriod = max(Year+Quarter)) ~> GetMaxID",
				"OtherTotalHisp, GetMaxID join(SourceId == MAXSourceId,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> JoinInMaxTimeID",
				"JoinInMaxTimeID derive(Latest = iif(MaxTimePeriod==(Year+Quarter),'TRUE','')) ~> CalculateLatestTimeValue",
				"OtherMaleHisp aggregate(groupBy(MAXSourceId = SourceId),",
				"     MaxTimePeriod = max(Year+Quarter)) ~> GetMaxIDMaleHisp",
				"OtherMaleHisp, GetMaxIDMaleHisp join(SourceId == MAXSourceId,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> JoinInMaxTimeIDMaleHisp",
				"JoinInMaxTimeIDMaleHisp derive(Latest = iif(MaxTimePeriod==(Year+Quarter),'TRUE','')) ~> CalculateLatestTimeValueOtherMaleHisp",
				"CalculateLatestTimeValueOtherMaleHisp select(mapColumn(",
				"          Source,",
				"          SourceId,",
				"          Desc,",
				"          Year,",
				"          Quarter,",
				"          Latest,",
				"          EthnicOrigin,",
				"          Race,",
				"          Gender,",
				"          Headcount",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> OtherMaleHispFinal",
				"OtherFemaleHisp aggregate(groupBy(MAXSourceId = SourceId),",
				"     MaxTimePeriod = max(Year+Quarter)) ~> GetMaxIDFemaleHisp",
				"OtherFemaleHisp, GetMaxIDFemaleHisp join(SourceId == MAXSourceId,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> JoinInMaxTimeIDFemaleHisp",
				"JoinInMaxTimeIDFemaleHisp derive(Latest = iif(MaxTimePeriod==(Year+Quarter),'TRUE','')) ~> CalculateLatestTimeValueOtherFemaleHisp",
				"CalculateLatestTimeValueOtherFemaleHisp select(mapColumn(",
				"          Source,",
				"          SourceId,",
				"          Desc,",
				"          Year,",
				"          Quarter,",
				"          Latest,",
				"          EthnicOrigin,",
				"          Race,",
				"          Gender,",
				"          Headcount",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> OtherFemaleHispFinal",
				"select1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          LastRefreshDt as date,",
				"          Source as string,",
				"          SourceId as string,",
				"          SourceDesc as string,",
				"          Year as integer,",
				"          Quarter as integer,",
				"          Latest as string,",
				"          EthnicOrigin as string,",
				"          Race as string,",
				"          Gender as string,",
				"          Headcount as integer",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     truncate:true,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> FullLoadBLSTable"
			]
		}
	}
}