{
	"name": "FullLoad_BLSTbl",
	"properties": {
		"folder": {
			"name": "External Data/BLS"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "BLS_AmerIndAlaskNat_Female_Tbl",
						"type": "DatasetReference"
					},
					"name": "AmerIndAlaskNatFemale"
				},
				{
					"dataset": {
						"referenceName": "BLS_AmerIndAlaskNat_Male_Tbl",
						"type": "DatasetReference"
					},
					"name": "AmerIndAlaskNatMale"
				},
				{
					"dataset": {
						"referenceName": "BLS_AmerIndAlaskNat_Total_Tbl",
						"type": "DatasetReference"
					},
					"name": "AmerIndAlaskNatTotal"
				},
				{
					"dataset": {
						"referenceName": "BLS_Asian_Female_Tbl",
						"type": "DatasetReference"
					},
					"name": "AsianFemale"
				},
				{
					"dataset": {
						"referenceName": "BLS_Asian_Male_Tbl",
						"type": "DatasetReference"
					},
					"name": "AsianMale"
				},
				{
					"dataset": {
						"referenceName": "BLS_Asian_Total_Tbl",
						"type": "DatasetReference"
					},
					"name": "AsianTotal"
				},
				{
					"dataset": {
						"referenceName": "BLS_Black_Female_Tbl",
						"type": "DatasetReference"
					},
					"name": "BlackFemale"
				},
				{
					"dataset": {
						"referenceName": "BLS_Black_Male_Tbl",
						"type": "DatasetReference"
					},
					"name": "BlackMale"
				},
				{
					"dataset": {
						"referenceName": "BLS_Black_Total_Tbl",
						"type": "DatasetReference"
					},
					"name": "BlackTotal"
				},
				{
					"dataset": {
						"referenceName": "BLS_Female_Tbl",
						"type": "DatasetReference"
					},
					"name": "Female"
				},
				{
					"dataset": {
						"referenceName": "BLS_Latinx_Female_Tbl",
						"type": "DatasetReference"
					},
					"name": "LatinxFemale"
				},
				{
					"dataset": {
						"referenceName": "BLS_Latinx_Male_Tbl",
						"type": "DatasetReference"
					},
					"name": "LatinxMale"
				},
				{
					"dataset": {
						"referenceName": "BLS_Latinx_Total_Tbl",
						"type": "DatasetReference"
					},
					"name": "LatinxTotal"
				},
				{
					"dataset": {
						"referenceName": "BLS_Male_Tbl",
						"type": "DatasetReference"
					},
					"name": "Male"
				},
				{
					"dataset": {
						"referenceName": "BLS_NatHawPacIsl_Female_Tbl",
						"type": "DatasetReference"
					},
					"name": "NatHawPacIslFemale"
				},
				{
					"dataset": {
						"referenceName": "BLS_NatHawPacIsl_Male_Tbl",
						"type": "DatasetReference"
					},
					"name": "NatHawPacIslMale"
				},
				{
					"dataset": {
						"referenceName": "BLS_NatHawPacIsl_Total_Tbl",
						"type": "DatasetReference"
					},
					"name": "NatHawPacIslTotal"
				},
				{
					"dataset": {
						"referenceName": "BLS_Total_Tbl",
						"type": "DatasetReference"
					},
					"name": "Total"
				},
				{
					"dataset": {
						"referenceName": "BLS_TwoOrMore_Female_Tbl",
						"type": "DatasetReference"
					},
					"name": "TwoOrMoreFemale"
				},
				{
					"dataset": {
						"referenceName": "BLS_TwoOrMore_Male_Tbl",
						"type": "DatasetReference"
					},
					"name": "TwoOrMoreMale"
				},
				{
					"dataset": {
						"referenceName": "BLS_TwoOrMore_Total_Tbl",
						"type": "DatasetReference"
					},
					"name": "TwoOrMoreTotal"
				},
				{
					"dataset": {
						"referenceName": "BLS_White_Female_Tbl",
						"type": "DatasetReference"
					},
					"name": "WhiteFemale"
				},
				{
					"dataset": {
						"referenceName": "BLS_White_Male_Tbl",
						"type": "DatasetReference"
					},
					"name": "WhiteMale"
				},
				{
					"dataset": {
						"referenceName": "BLS_White_Total_Tbl",
						"type": "DatasetReference"
					},
					"name": "WhiteTotal"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "etalentBLSTbl",
						"type": "DatasetReference"
					},
					"name": "FullLoadBLSTable"
				}
			],
			"transformations": [
				{
					"name": "union1"
				},
				{
					"name": "derivedColumn1"
				},
				{
					"name": "select1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          Source as string,",
				"          SourceId as string,",
				"          Desc as string,",
				"          Year as short,",
				"          Quarter as integer,",
				"          Latest as string,",
				"          EthnicOrigin as string,",
				"          Race as string,",
				"          Gender as string,",
				"          Headcount as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> AmerIndAlaskNatFemale",
				"source(output(",
				"          Source as string,",
				"          SourceId as string,",
				"          Desc as string,",
				"          Year as short,",
				"          Quarter as integer,",
				"          Latest as string,",
				"          EthnicOrigin as string,",
				"          Race as string,",
				"          Gender as string,",
				"          Headcount as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> AmerIndAlaskNatMale",
				"source(output(",
				"          Source as string,",
				"          SourceId as string,",
				"          Desc as string,",
				"          Year as short,",
				"          Quarter as integer,",
				"          Latest as string,",
				"          EthnicOrigin as string,",
				"          Race as string,",
				"          Gender as string,",
				"          Headcount as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> AmerIndAlaskNatTotal",
				"source(output(",
				"          Source as string,",
				"          SourceId as string,",
				"          Desc as string,",
				"          Year as short,",
				"          Quarter as integer,",
				"          Latest as string,",
				"          EthnicOrigin as string,",
				"          Race as string,",
				"          Gender as string,",
				"          Headcount as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> AsianFemale",
				"source(output(",
				"          Source as string,",
				"          SourceId as string,",
				"          Desc as string,",
				"          Year as short,",
				"          Quarter as integer,",
				"          Latest as string,",
				"          EthnicOrigin as string,",
				"          Race as string,",
				"          Gender as string,",
				"          Headcount as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> AsianMale",
				"source(output(",
				"          Source as string,",
				"          SourceId as string,",
				"          Desc as string,",
				"          Year as short,",
				"          Quarter as integer,",
				"          Latest as string,",
				"          EthnicOrigin as string,",
				"          Race as string,",
				"          Gender as string,",
				"          Headcount as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> AsianTotal",
				"source(output(",
				"          Source as string,",
				"          SourceId as string,",
				"          Desc as string,",
				"          Year as short,",
				"          Quarter as integer,",
				"          Latest as string,",
				"          EthnicOrigin as string,",
				"          Race as string,",
				"          Gender as string,",
				"          Headcount as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> BlackFemale",
				"source(output(",
				"          Source as string,",
				"          SourceId as string,",
				"          Desc as string,",
				"          Year as short,",
				"          Quarter as integer,",
				"          Latest as string,",
				"          EthnicOrigin as string,",
				"          Race as string,",
				"          Gender as string,",
				"          Headcount as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> BlackMale",
				"source(output(",
				"          Source as string,",
				"          SourceId as string,",
				"          Desc as string,",
				"          Year as short,",
				"          Quarter as integer,",
				"          Latest as string,",
				"          EthnicOrigin as string,",
				"          Race as string,",
				"          Gender as string,",
				"          Headcount as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> BlackTotal",
				"source(output(",
				"          Source as string,",
				"          SourceId as string,",
				"          Desc as string,",
				"          Year as short,",
				"          Quarter as integer,",
				"          Latest as string,",
				"          EthnicOrigin as string,",
				"          Race as string,",
				"          Gender as string,",
				"          Headcount as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> Female",
				"source(output(",
				"          Source as string,",
				"          SourceId as string,",
				"          Desc as string,",
				"          Year as short,",
				"          Quarter as integer,",
				"          Latest as string,",
				"          EthnicOrigin as string,",
				"          Race as string,",
				"          Gender as string,",
				"          Headcount as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> LatinxFemale",
				"source(output(",
				"          Source as string,",
				"          SourceId as string,",
				"          Desc as string,",
				"          Year as short,",
				"          Quarter as integer,",
				"          Latest as string,",
				"          EthnicOrigin as string,",
				"          Race as string,",
				"          Gender as string,",
				"          Headcount as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> LatinxMale",
				"source(output(",
				"          Source as string,",
				"          SourceId as string,",
				"          Desc as string,",
				"          Year as short,",
				"          Quarter as integer,",
				"          Latest as string,",
				"          EthnicOrigin as string,",
				"          Race as string,",
				"          Gender as string,",
				"          Headcount as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> LatinxTotal",
				"source(output(",
				"          Source as string,",
				"          SourceId as string,",
				"          Desc as string,",
				"          Year as short,",
				"          Quarter as integer,",
				"          Latest as string,",
				"          EthnicOrigin as string,",
				"          Race as string,",
				"          Gender as string,",
				"          Headcount as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> Male",
				"source(output(",
				"          Source as string,",
				"          SourceId as string,",
				"          Desc as string,",
				"          Year as short,",
				"          Quarter as integer,",
				"          Latest as string,",
				"          EthnicOrigin as string,",
				"          Race as string,",
				"          Gender as string,",
				"          Headcount as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> NatHawPacIslFemale",
				"source(output(",
				"          Source as string,",
				"          SourceId as string,",
				"          Desc as string,",
				"          Year as short,",
				"          Quarter as integer,",
				"          Latest as string,",
				"          EthnicOrigin as string,",
				"          Race as string,",
				"          Gender as string,",
				"          Headcount as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> NatHawPacIslMale",
				"source(output(",
				"          Source as string,",
				"          SourceId as string,",
				"          Desc as string,",
				"          Year as short,",
				"          Quarter as integer,",
				"          Latest as string,",
				"          EthnicOrigin as string,",
				"          Race as string,",
				"          Gender as string,",
				"          Headcount as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> NatHawPacIslTotal",
				"source(output(",
				"          Source as string,",
				"          SourceId as string,",
				"          Desc as string,",
				"          Year as short,",
				"          Quarter as integer,",
				"          Latest as string,",
				"          EthnicOrigin as string,",
				"          Race as string,",
				"          Gender as string,",
				"          Headcount as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> Total",
				"source(output(",
				"          Source as string,",
				"          SourceId as string,",
				"          Desc as string,",
				"          Year as short,",
				"          Quarter as integer,",
				"          Latest as string,",
				"          EthnicOrigin as string,",
				"          Race as string,",
				"          Gender as string,",
				"          Headcount as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> TwoOrMoreFemale",
				"source(output(",
				"          Source as string,",
				"          SourceId as string,",
				"          Desc as string,",
				"          Year as short,",
				"          Quarter as integer,",
				"          Latest as string,",
				"          EthnicOrigin as string,",
				"          Race as string,",
				"          Gender as string,",
				"          Headcount as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> TwoOrMoreMale",
				"source(output(",
				"          Source as string,",
				"          SourceId as string,",
				"          Desc as string,",
				"          Year as short,",
				"          Quarter as integer,",
				"          Latest as string,",
				"          EthnicOrigin as string,",
				"          Race as string,",
				"          Gender as string,",
				"          Headcount as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> TwoOrMoreTotal",
				"source(output(",
				"          Source as string,",
				"          SourceId as string,",
				"          Desc as string,",
				"          Year as short,",
				"          Quarter as integer,",
				"          Latest as string,",
				"          EthnicOrigin as string,",
				"          Race as string,",
				"          Gender as string,",
				"          Headcount as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> WhiteFemale",
				"source(output(",
				"          Source as string,",
				"          SourceId as string,",
				"          Desc as string,",
				"          Year as short,",
				"          Quarter as integer,",
				"          Latest as string,",
				"          EthnicOrigin as string,",
				"          Race as string,",
				"          Gender as string,",
				"          Headcount as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> WhiteMale",
				"source(output(",
				"          Source as string,",
				"          SourceId as string,",
				"          Desc as string,",
				"          Year as short,",
				"          Quarter as integer,",
				"          Latest as string,",
				"          EthnicOrigin as string,",
				"          Race as string,",
				"          Gender as string,",
				"          Headcount as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> WhiteTotal",
				"AmerIndAlaskNatFemale, AmerIndAlaskNatMale, AmerIndAlaskNatTotal, AsianFemale, AsianMale, AsianTotal, BlackFemale, BlackMale, BlackTotal, Female, LatinxFemale, LatinxMale, LatinxTotal, Male, NatHawPacIslFemale, NatHawPacIslMale, NatHawPacIslTotal, Total, TwoOrMoreFemale, TwoOrMoreMale, TwoOrMoreTotal, WhiteFemale, WhiteMale, WhiteTotal union(byName: true)~> union1",
				"union1 derive(LastRefreshDt = currentTimestamp()) ~> derivedColumn1",
				"derivedColumn1 select(mapColumn(",
				"          LastRefreshDt,",
				"          Source,",
				"          SourceId,",
				"          SourceDesc = Desc,",
				"          Year,",
				"          Quarter,",
				"          Latest,",
				"          EthnicOrigin,",
				"          Race,",
				"          Gender,",
				"          Headcount",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"select1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          LastRefreshDt as date,",
				"          Source as string,",
				"          SourceId as string,",
				"          SourceDesc as string,",
				"          Year as integer,",
				"          Quarter as integer,",
				"          Latest as string,",
				"          EthnicOrigin as string,",
				"          Race as string,",
				"          Gender as string,",
				"          Headcount as integer",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     truncate:true,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> FullLoadBLSTable"
			]
		}
	}
}