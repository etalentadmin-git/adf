{
	"name": "Append_Mapping_Job_Review",
	"properties": {
		"folder": {
			"name": "Client/Database/Load Mapping Tables"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Source_Mapping_Job",
						"type": "DatasetReference"
					},
					"name": "JobFunctionMappingFile"
				},
				{
					"dataset": {
						"referenceName": "etalentCorpTitleMapTbl",
						"type": "DatasetReference"
					},
					"name": "CorpTitleMappingTable"
				},
				{
					"dataset": {
						"referenceName": "etalentCoreFactTbl",
						"type": "DatasetReference"
					},
					"name": "CoreDB"
				},
				{
					"dataset": {
						"referenceName": "etalentReqFactTbl",
						"type": "DatasetReference"
					},
					"name": "ReqDB"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "etalentJobMapReviewTbl",
						"type": "DatasetReference"
					},
					"name": "LoadJobMappingtoJobMappingReviewTbl"
				}
			],
			"transformations": [
				{
					"name": "alterRow1"
				},
				{
					"name": "AddLoadDt"
				},
				{
					"name": "SelectCorpTitleMapping"
				},
				{
					"name": "JoinCorpTitle"
				},
				{
					"name": "CollapseForUniqueRows"
				},
				{
					"name": "CollapseForUniqueReqRows"
				},
				{
					"name": "FInalJobReqSelect"
				},
				{
					"name": "UnionJobReqTbl"
				},
				{
					"name": "selectCoreTableFields"
				},
				{
					"name": "FinalClientTableSelections"
				},
				{
					"name": "SelectOnlyValidCorpTitleJobCombinations"
				},
				{
					"name": "SelectFinalFields"
				},
				{
					"name": "CollapseRows"
				},
				{
					"name": "derivedColumn2"
				}
			],
			"scriptLines": [
				"parameters{",
				"     Flow_Client_Id as string,",
				"     Flow_Client_Dt as string",
				"}",
				"source(output(",
				"          {Client ID} as string,",
				"          {Client Engagement Date} as date 'MM/dd/yyyy',",
				"          {Elloree Corporate Title} as string,",
				"          {Client Job Title} as string,",
				"          {Client Job Function} as string,",
				"          {Elloree Job Function} as string,",
				"          {Suggested Elloree Job Function} as string,",
				"          {Suggested Source} as string,",
				"          {2020 Headcount Curr Function} as string,",
				"          {2020 Headcount Prev Function} as string,",
				"          {2020 Hire Curr Function} as string,",
				"          {2020 Hire Prev Function} as string,",
				"          {2020 Promotion Curr Function} as string,",
				"          {2020 Promotion Prev Function} as string,",
				"          {2020 Termination Curr Function} as string,",
				"          {2020 Termination Prev Function} as string,",
				"          {2021 Headcount Curr Function} as string,",
				"          {2021 Headcount Prev Function} as string,",
				"          {2021 Hire Curr Function} as string,",
				"          {2021 Hire Prev Function} as string,",
				"          {2021 Promotion Curr Function} as string,",
				"          {2021 Promotion Prev Function} as string,",
				"          {2021 Termination Curr Function} as string,",
				"          {2021 Termination Prev Function} as string,",
				"          {2022 Headcount Curr Function} as string,",
				"          {2022 Headcount Prev Function} as string,",
				"          {2022 Hire Curr Function} as string,",
				"          {2022 Hire Prev Function} as string,",
				"          {2022 Promotion Curr Function} as string,",
				"          {2022 Promotion Prev Function} as string,",
				"          {2022 Requisition Curr Function} as string,",
				"          {2022 Requisition Prev Function} as string,",
				"          {2022 Termination Curr Function} as string,",
				"          {2022 Termination Prev Function} as string,",
				"          {2023 Headcount Curr Function} as string,",
				"          {2023 Headcount Prev Function} as string,",
				"          {2023 Hire Curr Function} as string,",
				"          {2023 Hire Prev Function} as string,",
				"          {2023 Promotion Curr Function} as string,",
				"          {2023 Promotion Prev Function} as string,",
				"          {2023 Requisition Curr Function} as string,",
				"          {2023 Requisition Prev Function} as string,",
				"          {2023 Termination Curr Function} as string,",
				"          {2023 Termination Prev Function} as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> JobFunctionMappingFile",
				"source(output(",
				"          ClientId as string,",
				"          ClientEngagementDt as date,",
				"          ClientCorpTitle as string,",
				"          ClientElloreeCorpTitle as string,",
				"          ElloreeCorpTitle as string,",
				"          ElloreeCorpTitleSortId as integer,",
				"          LoadDt as date",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     query: (\"select * from [dbo].[CorpTitleMapTbl] where ClientId = '{$Flow_Client_Id}' and ClientEngagementDt = '{$Flow_Client_Dt}'\"),",
				"     format: 'query') ~> CorpTitleMappingTable",
				"source(output(",
				"          ClientId as string,",
				"          ClientEngagementDt as date,",
				"          WorkerId as string,",
				"          EventDt as date,",
				"          EventMonth as integer,",
				"          EventQuarter as integer,",
				"          EventYear as integer,",
				"          Event as string,",
				"          EventId as string,",
				"          EventType as string,",
				"          EventReason as string,",
				"          WorkerStatus as string,",
				"          WorkerType as string,",
				"          JobTitle as string,",
				"          JobFunction as string,",
				"          YearsinJob as double,",
				"          PrevJobTitle as string,",
				"          PrevJobFunction as string,",
				"          LastPromoDt as date,",
				"          OrigHireDt as date,",
				"          CurrHireDt as date,",
				"          RehireInd as string,",
				"          YearsofSrvc as double,",
				"          YearsofSrvcBand as string,",
				"          YearsofSrvcBandSortId as integer,",
				"          CorpTitle as string,",
				"          PrevCorpTitle as string,",
				"          ManagerInd as string,",
				"          DirectMgrWorkerId as string,",
				"          WorkOfficeLoc as string,",
				"          WorkOfficeCity as string,",
				"          WorkOfficeState as string,",
				"          WorkOfficeCountry as string,",
				"          WorkStrategicLocInd as string,",
				"          LegacyOrg as string,",
				"          BusinessGrpLvl1 as string,",
				"          BusinessGrpLvl2 as string,",
				"          BusinessGrpLvl3 as string,",
				"          BusinessGrpLvl4 as string,",
				"          Race as string,",
				"          HispanicLatinoOrigin as string,",
				"          Gender as string,",
				"          Veteran as string,",
				"          LGTBQ as string,",
				"          DisabilityInd as string,",
				"          BirthYear as integer,",
				"          Generation as string,",
				"          GenerationSortId as integer,",
				"          EmpCount as integer,",
				"          LoadDt as date",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     query: (\"select * from [dbo].[CoreFactTbl] where ClientId = '{$Flow_Client_Id}' and ClientEngagementDt = '{$Flow_Client_Dt}'\"),",
				"     format: 'query') ~> CoreDB",
				"source(output(",
				"          ClientId as string,",
				"          ClientEngagementDt as date,",
				"          EventDt as date,",
				"          EventMonth as integer,",
				"          EventQuarter as integer,",
				"          EventYear as integer,",
				"          Event as string,",
				"          EventId as string,",
				"          ReqId as string,",
				"          ReqType as string,",
				"          PostingDt as date,",
				"          ReqStatus as string,",
				"          NumberofOpenings as integer,",
				"          JobTitle as string,",
				"          JobFunction as string,",
				"          CorpTitle as string,",
				"          WorkOfficeLoc as string,",
				"          WorkOfficeCity as string,",
				"          WorkOfficeState as string,",
				"          WorkOfficeCountry as string,",
				"          WorkStrategicLocInd as string,",
				"          BusinessGrpLvl1 as string,",
				"          BusinessGrpLvl2 as string,",
				"          BusinessGrpLvl3 as string,",
				"          BusinessGrpLvl4 as string,",
				"          HiringMgrWorkerId as string,",
				"          PrimaryRecruiterWorkerId as string,",
				"          ReqOther1 as string,",
				"          ReqOther2 as string,",
				"          ReqOther3 as string,",
				"          ReqOther4 as string,",
				"          ReqOther5 as string,",
				"          LoadDt as date",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     query: (\"select * from [dbo].[TAReqTbl] where ClientId = '{$Flow_Client_Id}' and ClientEngagementDt = '{$Flow_Client_Dt}'\"),",
				"     format: 'query') ~> ReqDB",
				"SelectFinalFields alterRow(upsertIf(true()),",
				"     deleteIf(isNull(ClientId)),",
				"     deleteIf(isNull(ClientEngagementDt)),",
				"     deleteIf(isNull(JobFunction)),",
				"     deleteIf(isNull(JobTitle)),",
				"     deleteIf(isNull(ElloreeJobFunction))) ~> alterRow1",
				"alterRow1 derive(LoadDt = currentDate()) ~> AddLoadDt",
				"CorpTitleMappingTable select(mapColumn(",
				"          ClientId,",
				"          ClientEngagementDt,",
				"          ClientCorpTitle,",
				"          ElloreeCorpTitle",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SelectCorpTitleMapping",
				"JobFunctionMappingFile, SelectCorpTitleMapping join({Client ID} == ClientId",
				"     && {Client Engagement Date} == ClientEngagementDt",
				"     && {Elloree Corporate Title} == ElloreeCorpTitle,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> JoinCorpTitle",
				"UnionJobReqTbl aggregate(groupBy(ClientId,",
				"          ClientEngagementDt,",
				"          CorpTitle,",
				"          JobTitle,",
				"          JobFunction),",
				"     ClientIdForQuery = max(ClientId)) ~> CollapseForUniqueRows",
				"ReqDB aggregate(groupBy(ClientId,",
				"          ClientEngagementDt,",
				"          CorpTitle,",
				"          JobTitle,",
				"          JobFunction),",
				"     ClientIdForQuery = max(ClientId)) ~> CollapseForUniqueReqRows",
				"CollapseForUniqueReqRows select(mapColumn(",
				"          ClientId,",
				"          ClientEngagementDt,",
				"          CorpTitle,",
				"          JobTitle,",
				"          JobFunction",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> FInalJobReqSelect",
				"selectCoreTableFields, FInalJobReqSelect union(byName: true)~> UnionJobReqTbl",
				"CoreDB select(mapColumn(",
				"          ClientId,",
				"          ClientEngagementDt,",
				"          CorpTitle,",
				"          JobTitle,",
				"          JobFunction",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectCoreTableFields",
				"CollapseForUniqueRows select(mapColumn(",
				"          ClientId,",
				"          ClientEngagementDt,",
				"          CorpTitle,",
				"          JobTitle,",
				"          JobFunction,",
				"          ClientIdForQuery",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> FinalClientTableSelections",
				"JoinCorpTitle, FinalClientTableSelections join({Client ID} == FinalClientTableSelections@ClientId",
				"     && {Client Engagement Date} == FinalClientTableSelections@ClientEngagementDt",
				"     && ClientCorpTitle == CorpTitle",
				"     && {Client Job Title} == JobTitle",
				"     && {Client Job Function} == JobFunction,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> SelectOnlyValidCorpTitleJobCombinations",
				"CollapseRows select(mapColumn(",
				"          ClientId = {Client ID},",
				"          ClientEngagementDt = {Client Engagement Date},",
				"          CorpTitle = ClientCorpTitle,",
				"          JobFunction = {Client Job Function},",
				"          JobTitle = {Client Job Title},",
				"          ElloreeJobFunction = {Elloree Job Function}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SelectFinalFields",
				"derivedColumn2 aggregate(groupBy({Client Engagement Date},",
				"          ClientCorpTitle,",
				"          {Client Job Function},",
				"          {Client Job Title},",
				"          {Elloree Job Function}),",
				"     {Client ID} = max({Client ID})) ~> CollapseRows",
				"SelectOnlyValidCorpTitleJobCombinations derive({Client Job Title} = trim({Client Job Title}),",
				"          {Client Job Function} = trim({Client Job Function}),",
				"          ClientCorpTitle = trim(ClientCorpTitle)) ~> derivedColumn2",
				"AddLoadDt sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          ClientId as string,",
				"          ClientEngagementDt as date,",
				"          ClientBusGrpLvl1 as string,",
				"          ClientCorpTitle as string,",
				"          ClientJobTitle as string,",
				"          ClientJobFunction as string,",
				"          ElloreeJobFunction as string,",
				"          LoadDt as date",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:true,",
				"     keys:['ClientId','ClientEngagementDt','ClientJobTitle','ClientJobFunction','ClientCorpTitle'],",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          ClientId,",
				"          ClientEngagementDt,",
				"          ClientCorpTitle = CorpTitle,",
				"          ClientJobTitle = JobTitle,",
				"          ClientJobFunction = JobFunction,",
				"          ElloreeJobFunction,",
				"          LoadDt",
				"     )) ~> LoadJobMappingtoJobMappingReviewTbl"
			]
		}
	}
}