{
	"name": "DF_Adhoc_OtherAnaylysis_Output",
	"properties": {
		"folder": {
			"name": "Client/Adhoc"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "etalentOtherCoreFactTbl",
						"type": "DatasetReference"
					},
					"name": "AllOtherCore"
				},
				{
					"dataset": {
						"referenceName": "etalentTmp_OtherAnalysisTbl",
						"type": "DatasetReference"
					},
					"name": "AllOtherTblAnalysis"
				}
			],
			"sinks": [],
			"transformations": [
				{
					"name": "join1"
				},
				{
					"name": "DerivedAddTypeId"
				},
				{
					"name": "SelectAnalyisTypeOutput"
				},
				{
					"name": "filterT1"
				},
				{
					"name": "filterT2"
				},
				{
					"name": "filterT3"
				},
				{
					"name": "filterT4"
				},
				{
					"name": "TypeT1"
				},
				{
					"name": "TypeT2"
				},
				{
					"name": "TypeT3"
				},
				{
					"name": "TypeT4"
				},
				{
					"name": "selectT1"
				},
				{
					"name": "filterT5"
				},
				{
					"name": "TypeT5"
				},
				{
					"name": "filterT6"
				},
				{
					"name": "TypeT6"
				},
				{
					"name": "filterT7"
				},
				{
					"name": "TypeT7"
				},
				{
					"name": "filterT8"
				},
				{
					"name": "TypeT8"
				},
				{
					"name": "filterT9"
				},
				{
					"name": "TypeT9"
				},
				{
					"name": "filterT10"
				},
				{
					"name": "TypeT10"
				},
				{
					"name": "filterT11"
				},
				{
					"name": "TypeT11"
				},
				{
					"name": "filterT12"
				},
				{
					"name": "TypeT12"
				},
				{
					"name": "filterT13"
				},
				{
					"name": "TypeT13"
				},
				{
					"name": "filterT14"
				},
				{
					"name": "TypeT14"
				},
				{
					"name": "filterT15"
				},
				{
					"name": "TypeT15"
				},
				{
					"name": "filterT16"
				},
				{
					"name": "TypeT16"
				},
				{
					"name": "filterT17"
				},
				{
					"name": "TypeT17"
				},
				{
					"name": "filterT18"
				},
				{
					"name": "TypeT18"
				},
				{
					"name": "filterT19"
				},
				{
					"name": "TypeT19"
				},
				{
					"name": "filterT20"
				},
				{
					"name": "TypeT20"
				},
				{
					"name": "filterT21"
				},
				{
					"name": "TypeT21"
				},
				{
					"name": "filterT22"
				},
				{
					"name": "TypeT22"
				},
				{
					"name": "filterT23"
				},
				{
					"name": "TypeT23"
				},
				{
					"name": "filterT24"
				},
				{
					"name": "TypeT24"
				},
				{
					"name": "filterT25"
				},
				{
					"name": "TypeT25"
				},
				{
					"name": "filterT26"
				},
				{
					"name": "TypeT26"
				},
				{
					"name": "filterT27"
				},
				{
					"name": "TypeT27"
				},
				{
					"name": "filterT28"
				},
				{
					"name": "TypeT28"
				},
				{
					"name": "filterT29"
				},
				{
					"name": "TypeT29"
				},
				{
					"name": "filterT30"
				},
				{
					"name": "TypeT30"
				},
				{
					"name": "filterT31"
				},
				{
					"name": "TypeT31"
				},
				{
					"name": "filterT32"
				},
				{
					"name": "TypeT32"
				},
				{
					"name": "filterT33"
				},
				{
					"name": "TypeT33"
				},
				{
					"name": "filterT34"
				},
				{
					"name": "TypeT34"
				},
				{
					"name": "filterT35"
				},
				{
					"name": "TypeT35"
				},
				{
					"name": "filterT36"
				},
				{
					"name": "TypeT36"
				},
				{
					"name": "filterT37"
				},
				{
					"name": "TypeT37"
				},
				{
					"name": "filterT38"
				},
				{
					"name": "TypeT38"
				},
				{
					"name": "filterT39"
				},
				{
					"name": "TypeT39"
				},
				{
					"name": "filterT40"
				},
				{
					"name": "TypeT40"
				},
				{
					"name": "filterT41"
				},
				{
					"name": "TypeT41"
				},
				{
					"name": "filterT42"
				},
				{
					"name": "TypeT42"
				},
				{
					"name": "filterT43"
				},
				{
					"name": "TypeT43"
				},
				{
					"name": "filterT44"
				},
				{
					"name": "TypeT44"
				},
				{
					"name": "filterT45"
				},
				{
					"name": "TypeT45"
				},
				{
					"name": "filterT46"
				},
				{
					"name": "TypeT46"
				},
				{
					"name": "filterT47"
				},
				{
					"name": "TypeT47"
				},
				{
					"name": "filterT48"
				},
				{
					"name": "TypeT48"
				},
				{
					"name": "filterT49"
				},
				{
					"name": "TypeT49"
				},
				{
					"name": "filterT50"
				},
				{
					"name": "TypeT50"
				},
				{
					"name": "join2"
				},
				{
					"name": "selectT2"
				},
				{
					"name": "join3"
				},
				{
					"name": "selectT3"
				},
				{
					"name": "join4"
				},
				{
					"name": "selectT4"
				},
				{
					"name": "join5"
				},
				{
					"name": "selectT5"
				},
				{
					"name": "join6"
				},
				{
					"name": "selectT6"
				},
				{
					"name": "join7"
				},
				{
					"name": "selectT7"
				},
				{
					"name": "join8"
				},
				{
					"name": "selectT8"
				},
				{
					"name": "join9"
				},
				{
					"name": "selectT9"
				},
				{
					"name": "join10"
				},
				{
					"name": "selectT10"
				},
				{
					"name": "join11"
				},
				{
					"name": "selectT11"
				},
				{
					"name": "join12"
				},
				{
					"name": "selectT12"
				},
				{
					"name": "join13"
				},
				{
					"name": "selectT13"
				},
				{
					"name": "join14"
				},
				{
					"name": "selectT14"
				},
				{
					"name": "join15"
				},
				{
					"name": "selectT15"
				}
			],
			"scriptLines": [
				"parameters{",
				"     Flow_Client_Id as string,",
				"     Flow_Client_Dt as string",
				"}",
				"source(output(",
				"          WorkerId as string,",
				"          Type as string,",
				"          OtherCharVal1 as string,",
				"          OtherCharVal2 as string,",
				"          OtherNumVal1 as double,",
				"          OtherNumVal2 as double,",
				"          OtherDtVal1 as date,",
				"          OtherDtVal2 as date",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     query: (\"select WorkerId,concat([EventYear],'-','Q',[EventQuarter],' ',[EventType]) as Type,OtherCharVal11 as OtherCharVal1,OtherCharVal2,OtherNumVal1,OtherNumVal2 ,OtherDtVal1 ,OtherDtVal2 from [dbo].[OtherCoreFactTbl] where ClientId = '{$Flow_Client_Id}' and ClientEngagementDt = '{$Flow_Client_Dt}'\"),",
				"     format: 'query') ~> AllOtherCore",
				"source(output(",
				"          Id as integer,",
				"          Type as string,",
				"          Year as integer,",
				"          Quarter as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     query: (\"select * from [dbo].[Tmp_OtherAnalysisTbl]\"),",
				"     format: 'query') ~> AllOtherTblAnalysis",
				"AllOtherCore, TypeT1 join(Type == Type1,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join1",
				"AllOtherTblAnalysis derive({Type Id} = concat(concat(concat(concat(concat(toString(Year),'-'),'Q'),toString(Quarter)),' '),Type)) ~> DerivedAddTypeId",
				"DerivedAddTypeId select(mapColumn(",
				"          Id,",
				"          Type = {Type Id}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SelectAnalyisTypeOutput",
				"SelectAnalyisTypeOutput filter(Id==1) ~> filterT1",
				"SelectAnalyisTypeOutput filter(Id==2) ~> filterT2",
				"SelectAnalyisTypeOutput filter(Id==3) ~> filterT3",
				"SelectAnalyisTypeOutput filter(Id==4) ~> filterT4",
				"filterT1 select(mapColumn(",
				"          Type1 = Type",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> TypeT1",
				"filterT2 select(mapColumn(",
				"          Type2 = Type",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> TypeT2",
				"filterT3 select(mapColumn(",
				"          Type3 = Type",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> TypeT3",
				"filterT4 select(mapColumn(",
				"          Type4 = Type",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> TypeT4",
				"join1 select(mapColumn(",
				"          {T1 WorkerId} = WorkerId,",
				"          {T1 Type} = Type,",
				"          {T1 OtherCharVal1} = OtherCharVal1,",
				"          {T1 OtherCharVal2} = OtherCharVal2,",
				"          {T1 OtherNumVal1} = OtherNumVal1,",
				"          {T1 OtherNumVal2} = OtherNumVal2,",
				"          {T1 OtherDtVal1} = OtherDtVal1,",
				"          {T1 OtherDtVal2} = OtherDtVal2",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectT1",
				"SelectAnalyisTypeOutput filter(Id==5) ~> filterT5",
				"filterT5 select(mapColumn(",
				"          Type5 = Type",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> TypeT5",
				"SelectAnalyisTypeOutput filter(Id==6) ~> filterT6",
				"filterT6 select(mapColumn(",
				"          Type6 = Type",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> TypeT6",
				"SelectAnalyisTypeOutput filter(Id==7) ~> filterT7",
				"filterT7 select(mapColumn(",
				"          Type7 = Type",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> TypeT7",
				"SelectAnalyisTypeOutput filter(Id==8) ~> filterT8",
				"filterT8 select(mapColumn(",
				"          Type8 = Type",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> TypeT8",
				"SelectAnalyisTypeOutput filter(Id==9) ~> filterT9",
				"filterT9 select(mapColumn(",
				"          Type9 = Type",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> TypeT9",
				"SelectAnalyisTypeOutput filter(Id==10) ~> filterT10",
				"filterT10 select(mapColumn(",
				"          Type10 = Type",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> TypeT10",
				"SelectAnalyisTypeOutput filter(Id==11) ~> filterT11",
				"filterT11 select(mapColumn(",
				"          Type11 = Type",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> TypeT11",
				"SelectAnalyisTypeOutput filter(Id==12) ~> filterT12",
				"filterT12 select(mapColumn(",
				"          Type12 = Type",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> TypeT12",
				"SelectAnalyisTypeOutput filter(Id==13) ~> filterT13",
				"filterT13 select(mapColumn(",
				"          Type13 = Type",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> TypeT13",
				"SelectAnalyisTypeOutput filter(Id==14) ~> filterT14",
				"filterT14 select(mapColumn(",
				"          Type14 = Type",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> TypeT14",
				"SelectAnalyisTypeOutput filter(Id==15) ~> filterT15",
				"filterT15 select(mapColumn(",
				"          Type15 = Type",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> TypeT15",
				"SelectAnalyisTypeOutput filter(Id==16) ~> filterT16",
				"filterT16 select(mapColumn(",
				"          Type16 = Type",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> TypeT16",
				"SelectAnalyisTypeOutput filter(Id==17) ~> filterT17",
				"filterT17 select(mapColumn(",
				"          Type17 = Type",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> TypeT17",
				"SelectAnalyisTypeOutput filter(Id==18) ~> filterT18",
				"filterT18 select(mapColumn(",
				"          Type18 = Type",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> TypeT18",
				"SelectAnalyisTypeOutput filter(Id==19) ~> filterT19",
				"filterT19 select(mapColumn(",
				"          Type19 = Type",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> TypeT19",
				"SelectAnalyisTypeOutput filter(Id==20) ~> filterT20",
				"filterT20 select(mapColumn(",
				"          Type20 = Type",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> TypeT20",
				"SelectAnalyisTypeOutput filter(Id==21) ~> filterT21",
				"filterT21 select(mapColumn(",
				"          Type21 = Type",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> TypeT21",
				"SelectAnalyisTypeOutput filter(Id==22) ~> filterT22",
				"filterT22 select(mapColumn(",
				"          Type22 = Type",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> TypeT22",
				"SelectAnalyisTypeOutput filter(Id==23) ~> filterT23",
				"filterT23 select(mapColumn(",
				"          Type23 = Type",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> TypeT23",
				"SelectAnalyisTypeOutput filter(Id==24) ~> filterT24",
				"filterT24 select(mapColumn(",
				"          Type24 = Type",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> TypeT24",
				"SelectAnalyisTypeOutput filter(Id==25) ~> filterT25",
				"filterT25 select(mapColumn(",
				"          Type25 = Type",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> TypeT25",
				"SelectAnalyisTypeOutput filter(Id==26) ~> filterT26",
				"filterT26 select(mapColumn(",
				"          Type26 = Type",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> TypeT26",
				"SelectAnalyisTypeOutput filter(Id==27) ~> filterT27",
				"filterT27 select(mapColumn(",
				"          Type27 = Type",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> TypeT27",
				"SelectAnalyisTypeOutput filter(Id==28) ~> filterT28",
				"filterT28 select(mapColumn(",
				"          Type28 = Type",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> TypeT28",
				"SelectAnalyisTypeOutput filter(Id==29) ~> filterT29",
				"filterT29 select(mapColumn(",
				"          Type29 = Type",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> TypeT29",
				"SelectAnalyisTypeOutput filter(Id==30) ~> filterT30",
				"filterT30 select(mapColumn(",
				"          Type30 = Type",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> TypeT30",
				"SelectAnalyisTypeOutput filter(Id==31) ~> filterT31",
				"filterT31 select(mapColumn(",
				"          Type31 = Type",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> TypeT31",
				"SelectAnalyisTypeOutput filter(Id==32) ~> filterT32",
				"filterT32 select(mapColumn(",
				"          Type32 = Type",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> TypeT32",
				"SelectAnalyisTypeOutput filter(Id==33) ~> filterT33",
				"filterT33 select(mapColumn(",
				"          Type33 = Type",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> TypeT33",
				"SelectAnalyisTypeOutput filter(Id==34) ~> filterT34",
				"filterT34 select(mapColumn(",
				"          Type34 = Type",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> TypeT34",
				"SelectAnalyisTypeOutput filter(Id==35) ~> filterT35",
				"filterT35 select(mapColumn(",
				"          Type35 = Type",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> TypeT35",
				"SelectAnalyisTypeOutput filter(Id==36) ~> filterT36",
				"filterT36 select(mapColumn(",
				"          Type36 = Type",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> TypeT36",
				"SelectAnalyisTypeOutput filter(Id==37) ~> filterT37",
				"filterT37 select(mapColumn(",
				"          Type37 = Type",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> TypeT37",
				"SelectAnalyisTypeOutput filter(Id==38) ~> filterT38",
				"filterT38 select(mapColumn(",
				"          Type38 = Type",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> TypeT38",
				"SelectAnalyisTypeOutput filter(Id==39) ~> filterT39",
				"filterT39 select(mapColumn(",
				"          Type39 = Type",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> TypeT39",
				"SelectAnalyisTypeOutput filter(Id==40) ~> filterT40",
				"filterT40 select(mapColumn(",
				"          Type40 = Type",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> TypeT40",
				"SelectAnalyisTypeOutput filter(Id==41) ~> filterT41",
				"filterT41 select(mapColumn(",
				"          Type41 = Type",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> TypeT41",
				"SelectAnalyisTypeOutput filter(Id==42) ~> filterT42",
				"filterT42 select(mapColumn(",
				"          Type42 = Type",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> TypeT42",
				"SelectAnalyisTypeOutput filter(Id==43) ~> filterT43",
				"filterT43 select(mapColumn(",
				"          Type43 = Type",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> TypeT43",
				"SelectAnalyisTypeOutput filter(Id==44) ~> filterT44",
				"filterT44 select(mapColumn(",
				"          Type44 = Type",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> TypeT44",
				"SelectAnalyisTypeOutput filter(Id==45) ~> filterT45",
				"filterT45 select(mapColumn(",
				"          Type45 = Type",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> TypeT45",
				"SelectAnalyisTypeOutput filter(Id==46) ~> filterT46",
				"filterT46 select(mapColumn(",
				"          Type46 = Type",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> TypeT46",
				"SelectAnalyisTypeOutput filter(Id==47) ~> filterT47",
				"filterT47 select(mapColumn(",
				"          Type47 = Type",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> TypeT47",
				"SelectAnalyisTypeOutput filter(Id==48) ~> filterT48",
				"filterT48 select(mapColumn(",
				"          Type48 = Type",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> TypeT48",
				"SelectAnalyisTypeOutput filter(Id==49) ~> filterT49",
				"filterT49 select(mapColumn(",
				"          Type49 = Type",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> TypeT49",
				"SelectAnalyisTypeOutput filter(Id==50) ~> filterT50",
				"filterT50 select(mapColumn(",
				"          Type50 = Type",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> TypeT50",
				"AllOtherCore, TypeT2 join(Type == Type2,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join2",
				"join2 select(mapColumn(",
				"          {T2 WorkerId} = WorkerId,",
				"          {T2 Type} = Type,",
				"          {T2 OtherCharVal1} = OtherCharVal1,",
				"          {T2 OtherCharVal2} = OtherCharVal2,",
				"          {T2 OtherNumVal1} = OtherNumVal1,",
				"          {T2 OtherNumVal2} = OtherNumVal2,",
				"          {T2 OtherDtVal1} = OtherDtVal1,",
				"          {T2 OtherDtVal2} = OtherDtVal2",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectT2",
				"AllOtherCore, TypeT3 join(Type == Type3,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join3",
				"join3 select(mapColumn(",
				"          {T3 WorkerId} = WorkerId,",
				"          {T3 Type} = Type,",
				"          {T3 OtherCharVal1} = OtherCharVal1,",
				"          {T3 OtherCharVal2} = OtherCharVal2,",
				"          {T3 OtherNumVal1} = OtherNumVal1,",
				"          {T3 OtherNumVal2} = OtherNumVal2,",
				"          {T3 OtherDtVal1} = OtherDtVal1,",
				"          {T3 OtherDtVal2} = OtherDtVal2",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectT3",
				"AllOtherCore, TypeT4 join(Type == Type4,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join4",
				"join4 select(mapColumn(",
				"          {T4 WorkerId} = WorkerId,",
				"          {T4 Type} = Type,",
				"          {T4 OtherCharVal1} = OtherCharVal1,",
				"          {T4 OtherCharVal2} = OtherCharVal2,",
				"          {T4 OtherNumVal1} = OtherNumVal1,",
				"          {T4 OtherNumVal2} = OtherNumVal2,",
				"          {T4 OtherDtVal1} = OtherDtVal1,",
				"          {T4 OtherDtVal2} = OtherDtVal2",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectT4",
				"AllOtherCore, TypeT5 join(Type == Type5,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join5",
				"join5 select(mapColumn(",
				"          {T5 WorkerId} = WorkerId,",
				"          {T5 Type} = Type,",
				"          {T5 OtherCharVal1} = OtherCharVal1,",
				"          {T5 OtherCharVal2} = OtherCharVal2,",
				"          {T5 OtherNumVal1} = OtherNumVal1,",
				"          {T5 OtherNumVal2} = OtherNumVal2,",
				"          {T5 OtherDtVal1} = OtherDtVal1,",
				"          {T5 OtherDtVal2} = OtherDtVal2",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectT5",
				"AllOtherCore, TypeT6 join(Type == Type6,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join6",
				"join6 select(mapColumn(",
				"          {T6 WorkerId} = WorkerId,",
				"          {T6 Type} = Type,",
				"          {T6 OtherCharVal1} = OtherCharVal1,",
				"          {T6 OtherCharVal2} = OtherCharVal2,",
				"          {T6 OtherNumVal1} = OtherNumVal1,",
				"          {T6 OtherNumVal2} = OtherNumVal2,",
				"          {T6 OtherDtVal1} = OtherDtVal1,",
				"          {T6 OtherDtVal2} = OtherDtVal2",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectT6",
				"AllOtherCore, TypeT7 join(Type == Type7,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join7",
				"join7 select(mapColumn(",
				"          {T7 WorkerId} = WorkerId,",
				"          {T7 Type} = Type,",
				"          {T7 OtherCharVal1} = OtherCharVal1,",
				"          {T7 OtherCharVal2} = OtherCharVal2,",
				"          {T7 OtherNumVal1} = OtherNumVal1,",
				"          {T7 OtherNumVal2} = OtherNumVal2,",
				"          {T7 OtherDtVal1} = OtherDtVal1,",
				"          {T7 OtherDtVal2} = OtherDtVal2",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectT7",
				"AllOtherCore, TypeT8 join(Type == Type8,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join8",
				"join8 select(mapColumn(",
				"          {T8 WorkerId} = WorkerId,",
				"          {T8 Type} = Type,",
				"          {T8 OtherCharVal1} = OtherCharVal1,",
				"          {T8 OtherCharVal2} = OtherCharVal2,",
				"          {T8 OtherNumVal1} = OtherNumVal1,",
				"          {T8 OtherNumVal2} = OtherNumVal2,",
				"          {T8 OtherDtVal1} = OtherDtVal1,",
				"          {T8 OtherDtVal2} = OtherDtVal2",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectT8",
				"AllOtherCore, TypeT9 join(Type == Type9,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join9",
				"join9 select(mapColumn(",
				"          {T9 WorkerId} = WorkerId,",
				"          {T9 Type} = Type,",
				"          {T9 OtherCharVal1} = OtherCharVal1,",
				"          {T9 OtherCharVal2} = OtherCharVal2,",
				"          {T9 OtherNumVal1} = OtherNumVal1,",
				"          {T9 OtherNumVal2} = OtherNumVal2,",
				"          {T9 OtherDtVal1} = OtherDtVal1,",
				"          {T9 OtherDtVal2} = OtherDtVal2",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectT9",
				"AllOtherCore, TypeT10 join(Type == Type10,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join10",
				"join10 select(mapColumn(",
				"          {T10 WorkerId} = WorkerId,",
				"          {T10 Type} = Type,",
				"          {T10 OtherCharVal1} = OtherCharVal1,",
				"          {T10 OtherCharVal2} = OtherCharVal2,",
				"          {T10 OtherNumVal1} = OtherNumVal1,",
				"          {T10 OtherNumVal2} = OtherNumVal2,",
				"          {T10 OtherDtVal1} = OtherDtVal1,",
				"          {T10 OtherDtVal2} = OtherDtVal2",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectT10",
				"AllOtherCore, TypeT11 join(Type == Type11,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join11",
				"join11 select(mapColumn(",
				"          {T11 WorkerId} = WorkerId,",
				"          {T11 Type} = Type,",
				"          {T11 OtherCharVal1} = OtherCharVal1,",
				"          {T11 OtherCharVal2} = OtherCharVal2,",
				"          {T11 OtherNumVal1} = OtherNumVal1,",
				"          {T11 OtherNumVal2} = OtherNumVal2,",
				"          {T11 OtherDtVal1} = OtherDtVal1,",
				"          {T11 OtherDtVal2} = OtherDtVal2",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectT11",
				"AllOtherCore, TypeT12 join(Type == Type12,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join12",
				"join12 select(mapColumn(",
				"          {T12 WorkerId} = WorkerId,",
				"          {T12 Type} = Type,",
				"          {T12 OtherCharVal1} = OtherCharVal1,",
				"          {T12 OtherCharVal2} = OtherCharVal2,",
				"          {T12 OtherNumVal1} = OtherNumVal1,",
				"          {T12 OtherNumVal2} = OtherNumVal2,",
				"          {T12 OtherDtVal1} = OtherDtVal1,",
				"          {T12 OtherDtVal2} = OtherDtVal2",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectT12",
				"AllOtherCore, TypeT13 join(Type == Type13,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join13",
				"join13 select(mapColumn(",
				"          {T13 WorkerId} = WorkerId,",
				"          {T13 Type} = Type,",
				"          {T13 OtherCharVal1} = OtherCharVal1,",
				"          {T13 OtherCharVal2} = OtherCharVal2,",
				"          {T13 OtherNumVal1} = OtherNumVal1,",
				"          {T13 OtherNumVal2} = OtherNumVal2,",
				"          {T13 OtherDtVal1} = OtherDtVal1,",
				"          {T13 OtherDtVal2} = OtherDtVal2",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectT13",
				"AllOtherCore, TypeT14 join(Type == Type14,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join14",
				"join14 select(mapColumn(",
				"          {T14 WorkerId} = WorkerId,",
				"          {T14 Type} = Type,",
				"          {T14 OtherCharVal1} = OtherCharVal1,",
				"          {T14 OtherCharVal2} = OtherCharVal2,",
				"          {T14 OtherNumVal1} = OtherNumVal1,",
				"          {T14 OtherNumVal2} = OtherNumVal2,",
				"          {T14 OtherDtVal1} = OtherDtVal1,",
				"          {T14 OtherDtVal2} = OtherDtVal2",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectT14",
				"AllOtherCore, TypeT15 join(Type == Type15,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join15",
				"join15 select(mapColumn(",
				"          {T15 WorkerId} = WorkerId,",
				"          {T15 Type} = Type,",
				"          {T15 OtherCharVal1} = OtherCharVal1,",
				"          {T15 OtherCharVal2} = OtherCharVal2,",
				"          {T15 OtherNumVal1} = OtherNumVal1,",
				"          {T15 OtherNumVal2} = OtherNumVal2,",
				"          {T15 OtherDtVal1} = OtherDtVal1,",
				"          {T15 OtherDtVal2} = OtherDtVal2",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectT15"
			]
		}
	}
}