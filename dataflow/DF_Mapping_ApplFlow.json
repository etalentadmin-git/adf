{
	"name": "DF_Mapping_ApplFlow",
	"properties": {
		"description": "This workflow outputs 1 file for review of ethnicity values across events and time periods.",
		"folder": {
			"name": "Client/Mapping Tables"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Source_FactTbl_Applicant_File",
						"type": "DatasetReference"
					},
					"name": "AllApplicantData"
				},
				{
					"dataset": {
						"referenceName": "etalentApplFlowMapTbl",
						"type": "DatasetReference"
					},
					"name": "ApplFlowMappingTbl"
				},
				{
					"dataset": {
						"referenceName": "etalentApplicantFactTbl",
						"type": "DatasetReference"
					},
					"name": "ApplicantDatabaseRecords"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "Source_MappingWorkingFldr",
						"type": "DatasetReference"
					},
					"name": "OutputWorkingApplFlowMapping"
				},
				{
					"dataset": {
						"referenceName": "Source_MappingPrepFldr",
						"type": "DatasetReference"
					},
					"name": "OutputPrepApplFlowMapping"
				}
			],
			"transformations": [
				{
					"name": "CreatePivotApplFlowAndEventTime"
				},
				{
					"name": "SortOnEvent"
				},
				{
					"name": "SortOnApplFlow"
				},
				{
					"name": "SelectUniqueOtherClientValues"
				},
				{
					"name": "SelectExistingApplFlowMapping"
				},
				{
					"name": "join1"
				},
				{
					"name": "select2"
				},
				{
					"name": "join2"
				},
				{
					"name": "derivedColumn1"
				},
				{
					"name": "select3"
				},
				{
					"name": "SelectDBApplicantData"
				},
				{
					"name": "union1"
				},
				{
					"name": "select4"
				},
				{
					"name": "derivedColumn2"
				},
				{
					"name": "CollapsePossibleDuplicates"
				},
				{
					"name": "selectApplDBRecsInit"
				},
				{
					"name": "GetCountOfClientForUniqueValues"
				},
				{
					"name": "JoinClientIDCountInForMaxFilter"
				},
				{
					"name": "CleanupSelectFields"
				},
				{
					"name": "SelectMappingWithMostClients"
				},
				{
					"name": "aggregate1"
				},
				{
					"name": "JoinBackFinalSelectMapping"
				},
				{
					"name": "TakeLastClientValForRemainingDups"
				},
				{
					"name": "NotEqualtoClientID"
				},
				{
					"name": "EqualtoClientId"
				},
				{
					"name": "GroupUniqueValues"
				},
				{
					"name": "selectUniqueClientIDValues"
				},
				{
					"name": "SelectLastEngagementDt"
				},
				{
					"name": "SelectBasedOnMostRecentClientEngagment"
				}
			],
			"scriptLines": [
				"parameters{",
				"     Flow_Client_Id as string,",
				"     Flow_Client_Dt as string",
				"}",
				"source(output(",
				"          {Client ID} as string,",
				"          {Client Engagement Date} as date 'MM/dd/yyyy',",
				"          {Event Date} as date 'MM/dd/yyyy',",
				"          EventMonth as integer,",
				"          {Event Quarter} as integer,",
				"          {Event Year} as short,",
				"          Event as string,",
				"          {Requisition ID} as string,",
				"          {Application Date} as string,",
				"          {Applicant ID} as string,",
				"          Source as string,",
				"          {Applicant Type} as string,",
				"          {Internal Worker ID} as string,",
				"          Race as string,",
				"          {Hispanic or Latino Origin} as string,",
				"          Gender as string,",
				"          {Veteran Ind} as string,",
				"          LGTBQ as string,",
				"          {Disability Ind} as string,",
				"          {Applicant Final Disposition Date} as date 'MM/dd/yyyy',",
				"          {Applicant Final Disposition} as string,",
				"          {Applicant Step Before Final Disposition} as string,",
				"          {Applicant Rejected Reason} as string,",
				"          {Applicant Other (1)} as string,",
				"          {Applicant Other (2)} as string,",
				"          {Applicant Other (3)} as string,",
				"          {Applicant Other (4)} as string,",
				"          {Applicant Other (5)} as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> AllApplicantData",
				"source(output(",
				"          ClientId as string,",
				"          ClientEngagementDt as date,",
				"          ClientApplFinalDisp as string,",
				"          ClientApplStepBeforeFinalDisp as string,",
				"          ClientApplRejectedReason as string,",
				"          ElloreeApplFinalDisp as string,",
				"          ElloreeApplCategory as string,",
				"          ElloreeSubmittedtoMgrFl as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> ApplFlowMappingTbl",
				"source(output(",
				"          ClientId as string,",
				"          ClientEngagementDt as date,",
				"          EventDt as date,",
				"          EventMonth as integer,",
				"          EventQuarter as integer,",
				"          EventYear as integer,",
				"          Event as string,",
				"          EventId as string,",
				"          ReqId as string,",
				"          ApplicantId as string,",
				"          Source as string,",
				"          ApplType as string,",
				"          InternalWorkerId as string,",
				"          Race as string,",
				"          HispanicLatinoOrigin as string,",
				"          Gender as string,",
				"          Veteran as string,",
				"          LGTBQ as string,",
				"          DisabilityInd as string,",
				"          ApplFinalDisp as string,",
				"          ApplStepBeforeFinalDisp as string,",
				"          ApplRejectedReason as string,",
				"          ApplOther1 as string,",
				"          ApplOther2 as string,",
				"          ApplOther3 as string,",
				"          ApplOther4 as string,",
				"          ApplOther5 as string,",
				"          LoadDt as date",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     query: (\"select * from [dbo].[TAApplTbl] where ClientId = '{$Flow_Client_Id}' and ClientEngagementDt = '{$Flow_Client_Dt}'\"),",
				"     format: 'query') ~> ApplicantDatabaseRecords",
				"derivedColumn1 pivot(groupBy({Client ID},",
				"          {Client Engagement Date},",
				"          {Client Applicant Final Disposition},",
				"          {Client Applicant Step Before Final Disposition},",
				"          {Client Applicant Rejected Reason},",
				"          {Elloree Applicant Final Disposition},",
				"          {Elloree Applicant Category},",
				"          {Elloree Submitted to Mgr Fl},",
				"          {Suggested Elloree Applicant Final Disposition},",
				"          {Suggested Elloree Applicant Category},",
				"          {Suggested Elloree Submitted to Mgr Fl},",
				"          {Suggested Source}),",
				"     pivotBy({Event and Year}),",
				"     {} = count({Applicant ID}),",
				"     columnNaming: '$N$V',",
				"     lateral: false,",
				"     partitionBy('hash', 1)) ~> CreatePivotApplFlowAndEventTime",
				"derivedColumn2 sort(asc({Event Year}, true)) ~> SortOnEvent",
				"CreatePivotApplFlowAndEventTime sort(asc({Client Applicant Final Disposition}, true),",
				"     asc({Client Applicant Step Before Final Disposition}, true),",
				"     asc({Client Applicant Rejected Reason}, true)) ~> SortOnApplFlow",
				"NotEqualtoClientID aggregate(groupBy({Unique ClientId} = ClientId,",
				"          {Unique ClientApplFinalDisp} = ClientApplFinalDisp,",
				"          {Unique ClientApplStepBeforeFinalDisp} = ClientApplStepBeforeFinalDisp,",
				"          {Unique ClientApplRejectedReason} = ClientApplRejectedReason,",
				"          {Unique ElloreeApplFinalDisp} = ElloreeApplFinalDisp,",
				"          {Unique ElloreeApplCategory} = ElloreeApplCategory,",
				"          {Unique ElloreeSubmittedtoMgrFl} = ElloreeSubmittedtoMgrFl),",
				"     CountClientId = count(ClientId)) ~> SelectUniqueOtherClientValues",
				"TakeLastClientValForRemainingDups select(mapColumn(",
				"          {Unique ClientId},",
				"          {Unique ClientApplFinalDisp},",
				"          {Unique ClientApplStepBeforeFinalDisp},",
				"          {Unique ClientApplRejectedReason},",
				"          {Unique ElloreeApplFinalDisp},",
				"          {Unique ElloreeApplCategory},",
				"          {Unique ElloreeSubmittedtoMgrFl}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SelectExistingApplFlowMapping",
				"SortOnEvent, selectUniqueClientIDValues join({Client ID} == {Unique ClientId}",
				"     && {Applicant Final Disposition} == {Unique ClientApplFinalDisp}",
				"     && {Applicant Step Before Final Disposition} == {Unique ClientApplStepBeforeFinalDisp}",
				"     && {Applicant Rejected Reason} == {Unique ClientApplRejectedReason},",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join1",
				"join1 select(mapColumn(",
				"          {Client Applicant Final Disposition} = {Applicant Final Disposition},",
				"          {Client Applicant Step Before Final Disposition} = {Applicant Step Before Final Disposition},",
				"          {Client Applicant Rejected Reason} = {Applicant Rejected Reason},",
				"          {Elloree Applicant Final Disposition},",
				"          {Elloree Applicant Category},",
				"          {Elloree Submitted to Mgr Fl},",
				"          {Client ID},",
				"          {Client Engagement Date},",
				"          {Event and Year},",
				"          {Suggested Source} = {Unique ClientId},",
				"          {Suggested Elloree Applicant Final Disposition} = {Unique ElloreeApplFinalDisp},",
				"          {Suggested Elloree Applicant Category} = {Unique ElloreeApplCategory},",
				"          {Suggested Elloree Submitted to Manager Fl} = {Unique ElloreeSubmittedtoMgrFl},",
				"          {Applicant ID}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select2",
				"select2, SelectExistingApplFlowMapping join({Client Applicant Final Disposition} == {Unique ClientApplFinalDisp}",
				"     && {Client Applicant Step Before Final Disposition} == {Unique ClientApplStepBeforeFinalDisp}",
				"     && {Client Applicant Rejected Reason} == {Unique ClientApplRejectedReason}",
				"     && {Client ID} != {Unique ClientId},",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'both')~> join2",
				"select3 derive({Suggested Source} = iif(isNull({Suggested Source}),{Unique ClientId},{Suggested Source}),",
				"          {Suggested Elloree Applicant Final Disposition} = iif(isNull({Suggested Source}),{Unique ClientApplFinalDisp},{Suggested Elloree Applicant Final Disposition}),",
				"          {Suggested Elloree Applicant Category} = iif(isNull({Suggested Source}),{Unique ElloreeApplCategory},{Suggested Elloree Applicant Category}),",
				"          {Suggested Elloree Submitted to Mgr Fl} = iif(isNull({Suggested Source}),{Unique ElloreeSubmittedtoMgrFl},{Suggested Elloree Submitted to Mgr Fl})) ~> derivedColumn1",
				"join2 select(mapColumn(",
				"          {Client Applicant Final Disposition},",
				"          {Client Applicant Step Before Final Disposition},",
				"          {Client Applicant Rejected Reason},",
				"          {Elloree Applicant Final Disposition},",
				"          {Elloree Applicant Category},",
				"          {Elloree Submitted to Mgr Fl},",
				"          {Client ID},",
				"          {Client Engagement Date},",
				"          {Event and Year},",
				"          {Suggested Source},",
				"          {Suggested Elloree Applicant Final Disposition},",
				"          {Suggested Elloree Applicant Category},",
				"          {Suggested Elloree Submitted to Mgr Fl} = {Suggested Elloree Submitted to Manager Fl},",
				"          {Applicant ID},",
				"          {Unique ClientId},",
				"          {Unique ClientApplFinalDisp},",
				"          {Unique ClientApplStepBeforeFinalDisp},",
				"          {Unique ClientApplRejectedReason},",
				"          {Unique ElloreeApplFinalDisp},",
				"          {Unique ElloreeApplCategory},",
				"          {Unique ElloreeSubmittedtoMgrFl}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select3",
				"selectApplDBRecsInit select(mapColumn(",
				"          {Client ID} = ClientId,",
				"          {Client Engagement Date} = ClientEngagementDt,",
				"          {Event Year} = EventYear,",
				"          Event,",
				"          {Applicant ID} = ApplicantId,",
				"          {Applicant Final Disposition} = ApplFinalDisp,",
				"          {Applicant Step Before Final Disposition} = ApplStepBeforeFinalDisp,",
				"          {Applicant Rejected Reason} = ApplRejectedReason",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SelectDBApplicantData",
				"select4, SelectDBApplicantData union(byName: true)~> union1",
				"AllApplicantData select(mapColumn(",
				"          {Client ID},",
				"          {Client Engagement Date},",
				"          {Event Year},",
				"          Event,",
				"          {Applicant ID},",
				"          {Applicant Final Disposition},",
				"          {Applicant Step Before Final Disposition},",
				"          {Applicant Rejected Reason}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select4",
				"CollapsePossibleDuplicates derive({Event and Year} = concat(toString({Event Year}),concat(' ',Event)),",
				"          {Elloree Applicant Final Disposition} = '',",
				"          {Elloree Applicant Category} = '',",
				"          {Elloree Submitted to Mgr Fl} = '') ~> derivedColumn2",
				"union1 aggregate(groupBy({Client ID},",
				"          {Client Engagement Date},",
				"          {Event Year},",
				"          Event,",
				"          {Applicant ID},",
				"          {Applicant Final Disposition},",
				"          {Applicant Rejected Reason},",
				"          {Applicant Step Before Final Disposition}),",
				"     TotApplCount = count({Applicant ID})) ~> CollapsePossibleDuplicates",
				"ApplicantDatabaseRecords aggregate(groupBy(ClientId,",
				"          ClientEngagementDt,",
				"          EventYear,",
				"          Event,",
				"          ApplicantId,",
				"          ApplType,",
				"          ApplFinalDisp,",
				"          ApplStepBeforeFinalDisp,",
				"          ApplRejectedReason),",
				"     TotRecCount = count(ApplicantId)) ~> selectApplDBRecsInit",
				"SelectUniqueOtherClientValues aggregate(groupBy({Count Unique ClientApplFinalDisp} = {Unique ClientApplFinalDisp},",
				"          {Count Unique ClientApplStepBeforeFinalDisp} = {Unique ClientApplStepBeforeFinalDisp},",
				"          {Count Unique ClientApplRejectedReason} = {Unique ClientApplRejectedReason},",
				"          {Count Unique ElloreeApplFinalDisp} = {Unique ElloreeApplFinalDisp},",
				"          {Count Unique ElloreeApplCategory} = {Unique ElloreeApplCategory},",
				"          {Count Unique ElloreeSubmittedtoMgrFl} = {Unique ElloreeSubmittedtoMgrFl}),",
				"     ClientIDCount = count({Unique ClientId})) ~> GetCountOfClientForUniqueValues",
				"SelectUniqueOtherClientValues, GetCountOfClientForUniqueValues join({Unique ClientApplFinalDisp} == {Count Unique ClientApplFinalDisp}",
				"     && {Unique ClientApplStepBeforeFinalDisp} == {Count Unique ClientApplStepBeforeFinalDisp}",
				"     && {Unique ClientApplRejectedReason} == {Count Unique ClientApplRejectedReason}",
				"     && {Unique ElloreeApplFinalDisp} == {Count Unique ElloreeApplFinalDisp}",
				"     && {Unique ElloreeApplCategory} == {Count Unique ElloreeApplCategory}",
				"     && {Unique ElloreeSubmittedtoMgrFl} == {Count Unique ElloreeSubmittedtoMgrFl},",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> JoinClientIDCountInForMaxFilter",
				"JoinClientIDCountInForMaxFilter select(mapColumn(",
				"          {Unique ClientId},",
				"          {Unique ClientApplFinalDisp},",
				"          {Unique ClientApplStepBeforeFinalDisp},",
				"          {Unique ClientApplRejectedReason},",
				"          {Unique ElloreeApplFinalDisp},",
				"          {Unique ElloreeApplCategory},",
				"          {Unique ElloreeSubmittedtoMgrFl},",
				"          ClientIDCount",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> CleanupSelectFields",
				"CleanupSelectFields aggregate(groupBy({Unique ClientId},",
				"          {Unique ClientApplFinalDisp},",
				"          {Unique ClientApplStepBeforeFinalDisp},",
				"          {Unique ClientApplRejectedReason},",
				"          {Unique ElloreeApplFinalDisp},",
				"          {Unique ElloreeApplCategory},",
				"          {Unique ElloreeSubmittedtoMgrFl}),",
				"     ClientIDCount = max(ClientIDCount)) ~> SelectMappingWithMostClients",
				"SelectMappingWithMostClients aggregate(groupBy({Agg Unique ClientApplFinalDisp} = {Unique ClientApplFinalDisp},",
				"          {Agg Unique ClientApplStepBeforeFinalDisp} = {Unique ClientApplStepBeforeFinalDisp},",
				"          {Agg Unique ClientApplRejectedReason} = {Unique ClientApplRejectedReason}),",
				"     {Agg Unique ElloreeApplFinalDisp} = first({Unique ElloreeApplFinalDisp}),",
				"          {Agg Unique ElloreeApplCategory} = first({Unique ElloreeApplCategory}),",
				"          {Agg Unique ElloreeSubmittedtoMgrFl} = first({Unique ElloreeSubmittedtoMgrFl})) ~> aggregate1",
				"SelectMappingWithMostClients, aggregate1 join({Unique ClientApplFinalDisp} == {Agg Unique ClientApplFinalDisp}",
				"     && {Unique ClientApplStepBeforeFinalDisp} == {Agg Unique ClientApplStepBeforeFinalDisp}",
				"     && {Unique ClientApplRejectedReason} == {Agg Unique ClientApplRejectedReason}",
				"     && {Unique ElloreeApplFinalDisp} == {Agg Unique ElloreeApplFinalDisp}",
				"     && {Unique ElloreeApplCategory} == {Agg Unique ElloreeApplCategory}",
				"     && {Unique ElloreeSubmittedtoMgrFl} == {Agg Unique ElloreeSubmittedtoMgrFl},",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> JoinBackFinalSelectMapping",
				"JoinBackFinalSelectMapping aggregate(groupBy({Unique ClientApplFinalDisp},",
				"          {Unique ClientApplStepBeforeFinalDisp},",
				"          {Unique ClientApplRejectedReason},",
				"          {Unique ElloreeApplFinalDisp},",
				"          {Unique ElloreeApplCategory},",
				"          {Unique ElloreeSubmittedtoMgrFl}),",
				"     {Unique ClientId} = last({Unique ClientId})) ~> TakeLastClientValForRemainingDups",
				"ApplFlowMappingTbl filter(ClientId!=$Flow_Client_Id) ~> NotEqualtoClientID",
				"ApplFlowMappingTbl filter(ClientId==$Flow_Client_Id) ~> EqualtoClientId",
				"EqualtoClientId aggregate(groupBy({Unique ClientId} = ClientId,",
				"          ClientEngagementDt,",
				"          {Unique ClientApplFinalDisp} = ClientApplFinalDisp,",
				"          {Unique ClientApplStepBeforeFinalDisp} = ClientApplStepBeforeFinalDisp,",
				"          {Unique ClientApplRejectedReason} = ClientApplRejectedReason,",
				"          {Unique ElloreeApplFinalDisp} = ElloreeApplFinalDisp,",
				"          {Unique ElloreeApplCategory} = ElloreeApplCategory,",
				"          {Unique ElloreeSubmittedtoMgrFl} = ElloreeSubmittedtoMgrFl),",
				"     RowCount = count(ClientId)) ~> GroupUniqueValues",
				"SelectBasedOnMostRecentClientEngagment select(mapColumn(",
				"          {Unique ClientId},",
				"          {Unique ClientApplFinalDisp},",
				"          {Unique ClientApplStepBeforeFinalDisp},",
				"          {Unique ClientApplRejectedReason},",
				"          {Unique ElloreeApplFinalDisp},",
				"          {Unique ElloreeApplCategory},",
				"          {Unique ElloreeSubmittedtoMgrFl}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectUniqueClientIDValues",
				"GroupUniqueValues aggregate(LastEngagementDt = max(ClientEngagementDt)) ~> SelectLastEngagementDt",
				"GroupUniqueValues, SelectLastEngagementDt exists(ClientEngagementDt == LastEngagementDt,",
				"     negate:false,",
				"     broadcast: 'auto')~> SelectBasedOnMostRecentClientEngagment",
				"SortOnApplFlow sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          Column_1 as string,",
				"          Column_2 as string,",
				"          Column_3 as string,",
				"          Column_4 as string,",
				"          Column_5 as string,",
				"          Column_6 as string,",
				"          Column_7 as string,",
				"          Column_8 as string,",
				"          Column_9 as string,",
				"          Column_10 as string,",
				"          Column_11 as string,",
				"          Column_12 as string,",
				"          Column_13 as string,",
				"          Column_14 as string,",
				"          Column_15 as string,",
				"          Column_16 as string,",
				"          Column_17 as string,",
				"          Column_18 as string,",
				"          Column_19 as string,",
				"          Column_20 as string,",
				"          Column_21 as string,",
				"          Column_22 as string,",
				"          Column_23 as string,",
				"          Column_24 as string,",
				"          Column_25 as string,",
				"          Column_26 as string,",
				"          Column_27 as string,",
				"          Column_28 as string",
				"     ),",
				"     partitionFileNames:['applflow_mapping.csv'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> OutputWorkingApplFlowMapping",
				"SortOnApplFlow sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          Column_1 as string,",
				"          Column_2 as string,",
				"          Column_3 as string,",
				"          Column_4 as string,",
				"          Column_5 as string,",
				"          Column_6 as string,",
				"          Column_7 as string,",
				"          Column_8 as string,",
				"          Column_9 as string,",
				"          Column_10 as string,",
				"          Column_11 as string,",
				"          Column_12 as string,",
				"          Column_13 as string,",
				"          Column_14 as string,",
				"          Column_15 as string,",
				"          Column_16 as string,",
				"          Column_17 as string,",
				"          Column_18 as string,",
				"          Column_19 as string,",
				"          Column_20 as string,",
				"          Column_21 as string,",
				"          Column_22 as string,",
				"          Column_23 as string,",
				"          Column_24 as string,",
				"          Column_25 as string,",
				"          Column_26 as string,",
				"          Column_27 as string,",
				"          Column_28 as string",
				"     ),",
				"     partitionFileNames:['prep_applflow_mapping.csv'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> OutputPrepApplFlowMapping"
			]
		}
	}
}