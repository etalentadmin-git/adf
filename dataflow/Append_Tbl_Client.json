{
	"name": "Append_Tbl_Client",
	"properties": {
		"folder": {
			"name": "Client/Database/Load Fact Tables"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Source_FactTbl_AllCoreData_File",
						"type": "DatasetReference"
					},
					"name": "SourceCore"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "etalentClientTbl",
						"type": "DatasetReference"
					},
					"name": "LoadClientInfo"
				}
			],
			"transformations": [
				{
					"name": "RemoveNull"
				},
				{
					"name": "GroupClientInfo"
				},
				{
					"name": "AssignDerivedColumns"
				},
				{
					"name": "SelectFinalOutput"
				},
				{
					"name": "alterRow2"
				}
			],
			"scriptLines": [
				"parameters{",
				"     Flow_Client_EngagementType as string,",
				"     Flow_Client_Desc as string,",
				"     Flow_Client_Sector as string",
				"}",
				"source(output(",
				"          {Client ID} as string,",
				"          {Client Engagement Date} as date 'MM/dd/yyyy',",
				"          EventMonth as string,",
				"          {Event Quarter} as string,",
				"          {Event Year} as string,",
				"          {Worker ID} as string,",
				"          {Event Date} as string,",
				"          {Event Code} as string,",
				"          {Event Type} as string,",
				"          Event as string,",
				"          {Event Reason} as string,",
				"          {Worker Type} as string,",
				"          {Job Title} as string,",
				"          {Job Function} as string,",
				"          {Years in Job} as string,",
				"          {Previous Job Title} as string,",
				"          {Previous Job Function} as string,",
				"          {Original Hire Date} as string,",
				"          {Current Hire Date} as string,",
				"          {Years of Service} as string,",
				"          {Years of Service Band} as string,",
				"          {Years of Service Sort ID} as string,",
				"          {Last Promo Date} as string,",
				"          {Rehire Indicator} as string,",
				"          {Corporate Title} as string,",
				"          {Previous Corporate Title} as string,",
				"          {Manager Indicator} as string,",
				"          {Direct Manager Worker ID} as string,",
				"          {Work Office Location} as string,",
				"          {Work City} as string,",
				"          {Work State} as string,",
				"          {Work Country} as string,",
				"          {Strategic Work Location Ind} as string,",
				"          {Legacy Organization} as string,",
				"          {Business Group Level 1} as string,",
				"          {Business Group Level 2} as string,",
				"          {Business Group Level 3} as string,",
				"          {Business Group Level 4} as string,",
				"          Race as string,",
				"          {Hispanic or Latino Origin} as string,",
				"          Gender as string,",
				"          {Veteran Ind} as string,",
				"          LGBTQ as string,",
				"          {Disability Ind} as string,",
				"          {Birth Year} as string,",
				"          {Generation Desc} as string,",
				"          {Generation Sort ID} as string,",
				"          EmpCount as string,",
				"          RowCount as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> SourceCore",
				"SourceCore filter(!(isNull({Event Date}))||!(isNull({Worker ID}))) ~> RemoveNull",
				"RemoveNull aggregate(groupBy({Client Engagement Date}),",
				"     ClientId = max({Client ID})) ~> GroupClientInfo",
				"GroupClientInfo derive(ClientDesc = $Flow_Client_Desc,",
				"          ClientEngagementType = $Flow_Client_EngagementType,",
				"          ClientSector = $Flow_Client_Sector,",
				"          LoadDt = currentDate()) ~> AssignDerivedColumns",
				"alterRow2 select(mapColumn(",
				"          ClientId,",
				"          ClientEngagementDt = {Client Engagement Date},",
				"          ClientEngagementType,",
				"          ClientSector,",
				"          ClientDesc,",
				"          LoadDt",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SelectFinalOutput",
				"AssignDerivedColumns alterRow(upsertIf(true())) ~> alterRow2",
				"SelectFinalOutput sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          ClientId as string,",
				"          ClientEngagementDt as date,",
				"          ClientEngagementType as string,",
				"          ClientSector as string,",
				"          ClientDesc as string,",
				"          LoadDt as date",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:true,",
				"     keys:['ClientId','ClientEngagementDt','ClientEngagementType'],",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          ClientId,",
				"          ClientEngagementDt,",
				"          ClientEngagementType,",
				"          ClientSector,",
				"          ClientDesc,",
				"          LoadDt",
				"     ),",
				"     partitionBy('hash', 1)) ~> LoadClientInfo"
			]
		}
	}
}