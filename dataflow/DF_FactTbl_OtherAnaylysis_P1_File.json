{
	"name": "DF_FactTbl_OtherAnaylysis_P1_File",
	"properties": {
		"folder": {
			"name": "Client/Analysis"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "etalentOtherCoreFactTbl",
						"type": "DatasetReference"
					},
					"name": "AllOtherCore"
				},
				{
					"dataset": {
						"referenceName": "Source_Template_Analysis_OtherTbl_1P",
						"type": "DatasetReference"
					},
					"name": "AllOtherTblAnalysis"
				},
				{
					"dataset": {
						"referenceName": "etalentOtherCoreFactTbl",
						"type": "DatasetReference"
					},
					"name": "OtherCoreWorkers"
				},
				{
					"dataset": {
						"referenceName": "etalentOtherCoreAnalysisRefTbl",
						"type": "DatasetReference"
					},
					"name": "OtherCoreYear"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "Source_AnalysisTblFldr",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "join1"
				},
				{
					"name": "DerivedAddTypeId"
				},
				{
					"name": "SelectAnalyisTypeOutput"
				},
				{
					"name": "filterT1"
				},
				{
					"name": "filterT2"
				},
				{
					"name": "filterT3"
				},
				{
					"name": "filterT4"
				},
				{
					"name": "TypeT1"
				},
				{
					"name": "TypeT2"
				},
				{
					"name": "TypeT3"
				},
				{
					"name": "TypeT4"
				},
				{
					"name": "selectT1"
				},
				{
					"name": "filterT5"
				},
				{
					"name": "TypeT5"
				},
				{
					"name": "filterT6"
				},
				{
					"name": "TypeT6"
				},
				{
					"name": "filterT7"
				},
				{
					"name": "TypeT7"
				},
				{
					"name": "filterT8"
				},
				{
					"name": "TypeT8"
				},
				{
					"name": "filterT9"
				},
				{
					"name": "TypeT9"
				},
				{
					"name": "filterT10"
				},
				{
					"name": "TypeT10"
				},
				{
					"name": "filterT11"
				},
				{
					"name": "TypeT11"
				},
				{
					"name": "filterT12"
				},
				{
					"name": "TypeT12"
				},
				{
					"name": "filterT13"
				},
				{
					"name": "TypeT13"
				},
				{
					"name": "filterT14"
				},
				{
					"name": "TypeT14"
				},
				{
					"name": "filterT15"
				},
				{
					"name": "TypeT15"
				},
				{
					"name": "filterT16"
				},
				{
					"name": "TypeT16"
				},
				{
					"name": "filterT17"
				},
				{
					"name": "TypeT17"
				},
				{
					"name": "filterT18"
				},
				{
					"name": "TypeT18"
				},
				{
					"name": "filterT19"
				},
				{
					"name": "TypeT19"
				},
				{
					"name": "filterT20"
				},
				{
					"name": "TypeT20"
				},
				{
					"name": "filterT21"
				},
				{
					"name": "TypeT21"
				},
				{
					"name": "filterT22"
				},
				{
					"name": "TypeT22"
				},
				{
					"name": "filterT23"
				},
				{
					"name": "TypeT23"
				},
				{
					"name": "filterT24"
				},
				{
					"name": "TypeT24"
				},
				{
					"name": "filterT25"
				},
				{
					"name": "TypeT25"
				},
				{
					"name": "filterT26"
				},
				{
					"name": "TypeT26"
				},
				{
					"name": "filterT27"
				},
				{
					"name": "TypeT27"
				},
				{
					"name": "filterT28"
				},
				{
					"name": "TypeT28"
				},
				{
					"name": "filterT29"
				},
				{
					"name": "TypeT29"
				},
				{
					"name": "filterT30"
				},
				{
					"name": "TypeT30"
				},
				{
					"name": "filterT31"
				},
				{
					"name": "TypeT31"
				},
				{
					"name": "filterT32"
				},
				{
					"name": "TypeT32"
				},
				{
					"name": "filterT33"
				},
				{
					"name": "TypeT33"
				},
				{
					"name": "filterT34"
				},
				{
					"name": "TypeT34"
				},
				{
					"name": "filterT35"
				},
				{
					"name": "TypeT35"
				},
				{
					"name": "filterT36"
				},
				{
					"name": "TypeT36"
				},
				{
					"name": "filterT37"
				},
				{
					"name": "TypeT37"
				},
				{
					"name": "filterT38"
				},
				{
					"name": "TypeT38"
				},
				{
					"name": "filterT39"
				},
				{
					"name": "TypeT39"
				},
				{
					"name": "filterT40"
				},
				{
					"name": "TypeT40"
				},
				{
					"name": "filterT41"
				},
				{
					"name": "TypeT41"
				},
				{
					"name": "filterT42"
				},
				{
					"name": "TypeT42"
				},
				{
					"name": "filterT43"
				},
				{
					"name": "TypeT43"
				},
				{
					"name": "filterT44"
				},
				{
					"name": "TypeT44"
				},
				{
					"name": "filterT45"
				},
				{
					"name": "TypeT45"
				},
				{
					"name": "filterT46"
				},
				{
					"name": "TypeT46"
				},
				{
					"name": "filterT47"
				},
				{
					"name": "TypeT47"
				},
				{
					"name": "filterT48"
				},
				{
					"name": "TypeT48"
				},
				{
					"name": "filterT49"
				},
				{
					"name": "TypeT49"
				},
				{
					"name": "filterT50"
				},
				{
					"name": "TypeT50"
				},
				{
					"name": "join2"
				},
				{
					"name": "selectT2"
				},
				{
					"name": "join3"
				},
				{
					"name": "selectT3"
				},
				{
					"name": "join4"
				},
				{
					"name": "selectT4"
				},
				{
					"name": "join5"
				},
				{
					"name": "selectT5"
				},
				{
					"name": "join6"
				},
				{
					"name": "selectT6"
				},
				{
					"name": "join7"
				},
				{
					"name": "selectT7"
				},
				{
					"name": "join8"
				},
				{
					"name": "selectT8"
				},
				{
					"name": "join9"
				},
				{
					"name": "selectT9"
				},
				{
					"name": "join10"
				},
				{
					"name": "selectT10"
				},
				{
					"name": "join11"
				},
				{
					"name": "selectT11"
				},
				{
					"name": "join12"
				},
				{
					"name": "selectT12"
				},
				{
					"name": "join13"
				},
				{
					"name": "selectT13"
				},
				{
					"name": "join14"
				},
				{
					"name": "selectT14"
				},
				{
					"name": "join15"
				},
				{
					"name": "selectT15"
				},
				{
					"name": "join16"
				},
				{
					"name": "selectT16"
				},
				{
					"name": "join17"
				},
				{
					"name": "selectT17"
				},
				{
					"name": "join18"
				},
				{
					"name": "selectT18"
				},
				{
					"name": "join19"
				},
				{
					"name": "selectT19"
				},
				{
					"name": "join20"
				},
				{
					"name": "selectT20"
				},
				{
					"name": "join21"
				},
				{
					"name": "selectT21"
				},
				{
					"name": "join22"
				},
				{
					"name": "selectT22"
				},
				{
					"name": "join23"
				},
				{
					"name": "selectT23"
				},
				{
					"name": "join24"
				},
				{
					"name": "selectT24"
				},
				{
					"name": "join25"
				},
				{
					"name": "selectT25"
				},
				{
					"name": "join26"
				},
				{
					"name": "selectT26"
				},
				{
					"name": "join27"
				},
				{
					"name": "selectT27"
				},
				{
					"name": "join28"
				},
				{
					"name": "selectT28"
				},
				{
					"name": "join29"
				},
				{
					"name": "selectT29"
				},
				{
					"name": "join30"
				},
				{
					"name": "selectT30"
				},
				{
					"name": "join31"
				},
				{
					"name": "selectT31"
				},
				{
					"name": "join32"
				},
				{
					"name": "selectT32"
				},
				{
					"name": "join33"
				},
				{
					"name": "selectT33"
				},
				{
					"name": "join34"
				},
				{
					"name": "selectT34"
				},
				{
					"name": "join35"
				},
				{
					"name": "selectT35"
				},
				{
					"name": "join36"
				},
				{
					"name": "selectT36"
				},
				{
					"name": "join37"
				},
				{
					"name": "selectT37"
				},
				{
					"name": "join38"
				},
				{
					"name": "selectT38"
				},
				{
					"name": "join39"
				},
				{
					"name": "selectT39"
				},
				{
					"name": "join40"
				},
				{
					"name": "selectT40"
				},
				{
					"name": "join41"
				},
				{
					"name": "selectT41"
				},
				{
					"name": "join42"
				},
				{
					"name": "selectT42"
				},
				{
					"name": "join43"
				},
				{
					"name": "selectT43"
				},
				{
					"name": "join44"
				},
				{
					"name": "selectT44"
				},
				{
					"name": "join45"
				},
				{
					"name": "selectT45"
				},
				{
					"name": "join46"
				},
				{
					"name": "selectT46"
				},
				{
					"name": "join47"
				},
				{
					"name": "selectT47"
				},
				{
					"name": "join48"
				},
				{
					"name": "selectT48"
				},
				{
					"name": "join49"
				},
				{
					"name": "selectT49"
				},
				{
					"name": "join50"
				},
				{
					"name": "selectT50"
				},
				{
					"name": "joinT1"
				},
				{
					"name": "joinT2"
				},
				{
					"name": "joinT3"
				},
				{
					"name": "joinT4"
				},
				{
					"name": "joinT5"
				},
				{
					"name": "joinT6"
				},
				{
					"name": "joinT7"
				},
				{
					"name": "joinT9"
				},
				{
					"name": "joinT10"
				},
				{
					"name": "joinT11"
				},
				{
					"name": "joinT12"
				},
				{
					"name": "joinT13"
				},
				{
					"name": "joinT14"
				},
				{
					"name": "joinT15"
				},
				{
					"name": "joinT16"
				},
				{
					"name": "joinT17"
				},
				{
					"name": "joinT18"
				},
				{
					"name": "joinT19"
				},
				{
					"name": "joinT20"
				},
				{
					"name": "joinT21"
				},
				{
					"name": "joinT22"
				},
				{
					"name": "joinT23"
				},
				{
					"name": "joinT24"
				},
				{
					"name": "joinT25"
				},
				{
					"name": "joinT26"
				},
				{
					"name": "joinT27"
				},
				{
					"name": "joinT28"
				},
				{
					"name": "joinT29"
				},
				{
					"name": "joinT30"
				},
				{
					"name": "joinT31"
				},
				{
					"name": "joinT32"
				},
				{
					"name": "joinT33"
				},
				{
					"name": "joinT34"
				},
				{
					"name": "joinT35"
				},
				{
					"name": "joinT36"
				},
				{
					"name": "joinT37"
				},
				{
					"name": "joinT38"
				},
				{
					"name": "joinT39"
				},
				{
					"name": "joinT40"
				},
				{
					"name": "joinT41"
				},
				{
					"name": "joinT42"
				},
				{
					"name": "joinT43"
				},
				{
					"name": "joinT44"
				},
				{
					"name": "joinT45"
				},
				{
					"name": "joinT46"
				},
				{
					"name": "joinT47"
				},
				{
					"name": "joinT48"
				},
				{
					"name": "joinT49"
				},
				{
					"name": "joinT50"
				},
				{
					"name": "CleanupJoinCollumns"
				},
				{
					"name": "joinT8"
				},
				{
					"name": "JoinOtherAnalysisYear"
				},
				{
					"name": "UpdateNullandAddDateRelatedColumns"
				},
				{
					"name": "RemoveRecordsWithNoActivity"
				}
			],
			"scriptLines": [
				"parameters{",
				"     Flow_Client_Id as string,",
				"     Flow_Client_Dt as string,",
				"     Flow_Folder_Year as string,",
				"     Flow_Folder_Quarter as string",
				"}",
				"source(output(",
				"          WorkerId as string,",
				"          Type as string,",
				"          OtherCharVal1 as string,",
				"          OtherCharVal2 as string,",
				"          OtherNumVal1 as double,",
				"          OtherNumVal2 as double,",
				"          OtherDtVal1 as date,",
				"          OtherDtVal2 as date",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     query: (\"select WorkerId,concat([EventYear],'-','Q',[EventQuarter],' ',[EventType]) as Type,OtherCharVal11 as OtherCharVal1,OtherCharVal2,OtherNumVal1,OtherNumVal2 ,OtherDtVal1 ,OtherDtVal2 from [dbo].[OtherCoreFactTbl] where ClientId = '{$Flow_Client_Id}' and ClientEngagementDt = '{$Flow_Client_Dt}'\"),",
				"     format: 'query') ~> AllOtherCore",
				"source(output(",
				"          Id as integer,",
				"          Type as string,",
				"          Year as integer,",
				"          Quarter as integer,",
				"          Notes as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> AllOtherTblAnalysis",
				"source(output(",
				"          WorkerId as string,",
				"          ClientId as string,",
				"          ClientEngagementDt as date",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     query: (\"select WorkerId,ClientId,ClientEngagementDt from [dbo].[OtherCoreFactTbl] where ClientId = '{$Flow_Client_Id}' and ClientEngagementDt = '{$Flow_Client_Dt}' Group By WorkerId,ClientId,ClientEngagementDt\"),",
				"     format: 'query') ~> OtherCoreWorkers",
				"source(output(",
				"          ClientId as string,",
				"          Year as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     query: (\"Select ClientId, MAX(CAST(LEFT(TYPE, 4) as INT))-1 as Year from [dbo].[OtherCoreAnalysisRefTbl] Where ClientId = '{$Flow_Client_Id}' and ClientEngagementDt = '{$Flow_Client_Dt}' Group By ClientId\"),",
				"     format: 'query') ~> OtherCoreYear",
				"AllOtherCore, TypeT1 join(Type == Type1,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join1",
				"AllOtherTblAnalysis derive({Type Id} = concat(concat(concat(concat(concat(toString(Year),'-'),'Q'),toString(Quarter)),' '),Type)) ~> DerivedAddTypeId",
				"DerivedAddTypeId select(mapColumn(",
				"          Id,",
				"          Type = {Type Id}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SelectAnalyisTypeOutput",
				"SelectAnalyisTypeOutput filter(Id==1) ~> filterT1",
				"SelectAnalyisTypeOutput filter(Id==2) ~> filterT2",
				"SelectAnalyisTypeOutput filter(Id==3) ~> filterT3",
				"SelectAnalyisTypeOutput filter(Id==4) ~> filterT4",
				"filterT1 select(mapColumn(",
				"          Type1 = Type",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> TypeT1",
				"filterT2 select(mapColumn(",
				"          Type2 = Type",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> TypeT2",
				"filterT3 select(mapColumn(",
				"          Type3 = Type",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> TypeT3",
				"filterT4 select(mapColumn(",
				"          Type4 = Type",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> TypeT4",
				"join1 select(mapColumn(",
				"          {T1 WorkerId} = WorkerId,",
				"          {T1 Type} = Type,",
				"          {T1 OtherCharVal1} = OtherCharVal1,",
				"          {T1 OtherCharVal2} = OtherCharVal2,",
				"          {T1 OtherNumVal1} = OtherNumVal1,",
				"          {T1 OtherNumVal2} = OtherNumVal2,",
				"          {T1 OtherDtVal1} = OtherDtVal1,",
				"          {T1 OtherDtVal2} = OtherDtVal2",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectT1",
				"SelectAnalyisTypeOutput filter(Id==5) ~> filterT5",
				"filterT5 select(mapColumn(",
				"          Type5 = Type",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> TypeT5",
				"SelectAnalyisTypeOutput filter(Id==6) ~> filterT6",
				"filterT6 select(mapColumn(",
				"          Type6 = Type",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> TypeT6",
				"SelectAnalyisTypeOutput filter(Id==7) ~> filterT7",
				"filterT7 select(mapColumn(",
				"          Type7 = Type",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> TypeT7",
				"SelectAnalyisTypeOutput filter(Id==8) ~> filterT8",
				"filterT8 select(mapColumn(",
				"          Type8 = Type",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> TypeT8",
				"SelectAnalyisTypeOutput filter(Id==9) ~> filterT9",
				"filterT9 select(mapColumn(",
				"          Type9 = Type",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> TypeT9",
				"SelectAnalyisTypeOutput filter(Id==10) ~> filterT10",
				"filterT10 select(mapColumn(",
				"          Type10 = Type",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> TypeT10",
				"SelectAnalyisTypeOutput filter(Id==11) ~> filterT11",
				"filterT11 select(mapColumn(",
				"          Type11 = Type",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> TypeT11",
				"SelectAnalyisTypeOutput filter(Id==12) ~> filterT12",
				"filterT12 select(mapColumn(",
				"          Type12 = Type",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> TypeT12",
				"SelectAnalyisTypeOutput filter(Id==13) ~> filterT13",
				"filterT13 select(mapColumn(",
				"          Type13 = Type",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> TypeT13",
				"SelectAnalyisTypeOutput filter(Id==14) ~> filterT14",
				"filterT14 select(mapColumn(",
				"          Type14 = Type",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> TypeT14",
				"SelectAnalyisTypeOutput filter(Id==15) ~> filterT15",
				"filterT15 select(mapColumn(",
				"          Type15 = Type",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> TypeT15",
				"SelectAnalyisTypeOutput filter(Id==16) ~> filterT16",
				"filterT16 select(mapColumn(",
				"          Type16 = Type",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> TypeT16",
				"SelectAnalyisTypeOutput filter(Id==17) ~> filterT17",
				"filterT17 select(mapColumn(",
				"          Type17 = Type",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> TypeT17",
				"SelectAnalyisTypeOutput filter(Id==18) ~> filterT18",
				"filterT18 select(mapColumn(",
				"          Type18 = Type",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> TypeT18",
				"SelectAnalyisTypeOutput filter(Id==19) ~> filterT19",
				"filterT19 select(mapColumn(",
				"          Type19 = Type",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> TypeT19",
				"SelectAnalyisTypeOutput filter(Id==20) ~> filterT20",
				"filterT20 select(mapColumn(",
				"          Type20 = Type",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> TypeT20",
				"SelectAnalyisTypeOutput filter(Id==21) ~> filterT21",
				"filterT21 select(mapColumn(",
				"          Type21 = Type",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> TypeT21",
				"SelectAnalyisTypeOutput filter(Id==22) ~> filterT22",
				"filterT22 select(mapColumn(",
				"          Type22 = Type",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> TypeT22",
				"SelectAnalyisTypeOutput filter(Id==23) ~> filterT23",
				"filterT23 select(mapColumn(",
				"          Type23 = Type",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> TypeT23",
				"SelectAnalyisTypeOutput filter(Id==24) ~> filterT24",
				"filterT24 select(mapColumn(",
				"          Type24 = Type",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> TypeT24",
				"SelectAnalyisTypeOutput filter(Id==25) ~> filterT25",
				"filterT25 select(mapColumn(",
				"          Type25 = Type",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> TypeT25",
				"SelectAnalyisTypeOutput filter(Id==26) ~> filterT26",
				"filterT26 select(mapColumn(",
				"          Type26 = Type",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> TypeT26",
				"SelectAnalyisTypeOutput filter(Id==27) ~> filterT27",
				"filterT27 select(mapColumn(",
				"          Type27 = Type",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> TypeT27",
				"SelectAnalyisTypeOutput filter(Id==28) ~> filterT28",
				"filterT28 select(mapColumn(",
				"          Type28 = Type",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> TypeT28",
				"SelectAnalyisTypeOutput filter(Id==29) ~> filterT29",
				"filterT29 select(mapColumn(",
				"          Type29 = Type",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> TypeT29",
				"SelectAnalyisTypeOutput filter(Id==30) ~> filterT30",
				"filterT30 select(mapColumn(",
				"          Type30 = Type",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> TypeT30",
				"SelectAnalyisTypeOutput filter(Id==31) ~> filterT31",
				"filterT31 select(mapColumn(",
				"          Type31 = Type",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> TypeT31",
				"SelectAnalyisTypeOutput filter(Id==32) ~> filterT32",
				"filterT32 select(mapColumn(",
				"          Type32 = Type",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> TypeT32",
				"SelectAnalyisTypeOutput filter(Id==33) ~> filterT33",
				"filterT33 select(mapColumn(",
				"          Type33 = Type",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> TypeT33",
				"SelectAnalyisTypeOutput filter(Id==34) ~> filterT34",
				"filterT34 select(mapColumn(",
				"          Type34 = Type",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> TypeT34",
				"SelectAnalyisTypeOutput filter(Id==35) ~> filterT35",
				"filterT35 select(mapColumn(",
				"          Type35 = Type",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> TypeT35",
				"SelectAnalyisTypeOutput filter(Id==36) ~> filterT36",
				"filterT36 select(mapColumn(",
				"          Type36 = Type",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> TypeT36",
				"SelectAnalyisTypeOutput filter(Id==37) ~> filterT37",
				"filterT37 select(mapColumn(",
				"          Type37 = Type",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> TypeT37",
				"SelectAnalyisTypeOutput filter(Id==38) ~> filterT38",
				"filterT38 select(mapColumn(",
				"          Type38 = Type",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> TypeT38",
				"SelectAnalyisTypeOutput filter(Id==39) ~> filterT39",
				"filterT39 select(mapColumn(",
				"          Type39 = Type",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> TypeT39",
				"SelectAnalyisTypeOutput filter(Id==40) ~> filterT40",
				"filterT40 select(mapColumn(",
				"          Type40 = Type",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> TypeT40",
				"SelectAnalyisTypeOutput filter(Id==41) ~> filterT41",
				"filterT41 select(mapColumn(",
				"          Type41 = Type",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> TypeT41",
				"SelectAnalyisTypeOutput filter(Id==42) ~> filterT42",
				"filterT42 select(mapColumn(",
				"          Type42 = Type",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> TypeT42",
				"SelectAnalyisTypeOutput filter(Id==43) ~> filterT43",
				"filterT43 select(mapColumn(",
				"          Type43 = Type",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> TypeT43",
				"SelectAnalyisTypeOutput filter(Id==44) ~> filterT44",
				"filterT44 select(mapColumn(",
				"          Type44 = Type",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> TypeT44",
				"SelectAnalyisTypeOutput filter(Id==45) ~> filterT45",
				"filterT45 select(mapColumn(",
				"          Type45 = Type",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> TypeT45",
				"SelectAnalyisTypeOutput filter(Id==46) ~> filterT46",
				"filterT46 select(mapColumn(",
				"          Type46 = Type",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> TypeT46",
				"SelectAnalyisTypeOutput filter(Id==47) ~> filterT47",
				"filterT47 select(mapColumn(",
				"          Type47 = Type",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> TypeT47",
				"SelectAnalyisTypeOutput filter(Id==48) ~> filterT48",
				"filterT48 select(mapColumn(",
				"          Type48 = Type",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> TypeT48",
				"SelectAnalyisTypeOutput filter(Id==49) ~> filterT49",
				"filterT49 select(mapColumn(",
				"          Type49 = Type",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> TypeT49",
				"SelectAnalyisTypeOutput filter(Id==50) ~> filterT50",
				"filterT50 select(mapColumn(",
				"          Type50 = Type",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> TypeT50",
				"AllOtherCore, TypeT2 join(Type == Type2,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join2",
				"join2 select(mapColumn(",
				"          {T2 WorkerId} = WorkerId,",
				"          {T2 Type} = Type,",
				"          {T2 OtherCharVal1} = OtherCharVal1,",
				"          {T2 OtherCharVal2} = OtherCharVal2,",
				"          {T2 OtherNumVal1} = OtherNumVal1,",
				"          {T2 OtherNumVal2} = OtherNumVal2,",
				"          {T2 OtherDtVal1} = OtherDtVal1,",
				"          {T2 OtherDtVal2} = OtherDtVal2",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectT2",
				"AllOtherCore, TypeT3 join(Type == Type3,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join3",
				"join3 select(mapColumn(",
				"          {T3 WorkerId} = WorkerId,",
				"          {T3 Type} = Type,",
				"          {T3 OtherCharVal1} = OtherCharVal1,",
				"          {T3 OtherCharVal2} = OtherCharVal2,",
				"          {T3 OtherNumVal1} = OtherNumVal1,",
				"          {T3 OtherNumVal2} = OtherNumVal2,",
				"          {T3 OtherDtVal1} = OtherDtVal1,",
				"          {T3 OtherDtVal2} = OtherDtVal2",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectT3",
				"AllOtherCore, TypeT4 join(Type == Type4,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join4",
				"join4 select(mapColumn(",
				"          {T4 WorkerId} = WorkerId,",
				"          {T4 Type} = Type,",
				"          {T4 OtherCharVal1} = OtherCharVal1,",
				"          {T4 OtherCharVal2} = OtherCharVal2,",
				"          {T4 OtherNumVal1} = OtherNumVal1,",
				"          {T4 OtherNumVal2} = OtherNumVal2,",
				"          {T4 OtherDtVal1} = OtherDtVal1,",
				"          {T4 OtherDtVal2} = OtherDtVal2",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectT4",
				"AllOtherCore, TypeT5 join(Type == Type5,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join5",
				"join5 select(mapColumn(",
				"          {T5 WorkerId} = WorkerId,",
				"          {T5 Type} = Type,",
				"          {T5 OtherCharVal1} = OtherCharVal1,",
				"          {T5 OtherCharVal2} = OtherCharVal2,",
				"          {T5 OtherNumVal1} = OtherNumVal1,",
				"          {T5 OtherNumVal2} = OtherNumVal2,",
				"          {T5 OtherDtVal1} = OtherDtVal1,",
				"          {T5 OtherDtVal2} = OtherDtVal2",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectT5",
				"AllOtherCore, TypeT6 join(Type == Type6,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join6",
				"join6 select(mapColumn(",
				"          {T6 WorkerId} = WorkerId,",
				"          {T6 Type} = Type,",
				"          {T6 OtherCharVal1} = OtherCharVal1,",
				"          {T6 OtherCharVal2} = OtherCharVal2,",
				"          {T6 OtherNumVal1} = OtherNumVal1,",
				"          {T6 OtherNumVal2} = OtherNumVal2,",
				"          {T6 OtherDtVal1} = OtherDtVal1,",
				"          {T6 OtherDtVal2} = OtherDtVal2",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectT6",
				"AllOtherCore, TypeT7 join(Type == Type7,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join7",
				"join7 select(mapColumn(",
				"          {T7 WorkerId} = WorkerId,",
				"          {T7 Type} = Type,",
				"          {T7 OtherCharVal1} = OtherCharVal1,",
				"          {T7 OtherCharVal2} = OtherCharVal2,",
				"          {T7 OtherNumVal1} = OtherNumVal1,",
				"          {T7 OtherNumVal2} = OtherNumVal2,",
				"          {T7 OtherDtVal1} = OtherDtVal1,",
				"          {T7 OtherDtVal2} = OtherDtVal2",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectT7",
				"AllOtherCore, TypeT8 join(Type == Type8,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join8",
				"join8 select(mapColumn(",
				"          {T8 WorkerId} = WorkerId,",
				"          {T8 Type} = Type,",
				"          {T8 OtherCharVal1} = OtherCharVal1,",
				"          {T8 OtherCharVal2} = OtherCharVal2,",
				"          {T8 OtherNumVal1} = OtherNumVal1,",
				"          {T8 OtherNumVal2} = OtherNumVal2,",
				"          {T8 OtherDtVal1} = OtherDtVal1,",
				"          {T8 OtherDtVal2} = OtherDtVal2",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectT8",
				"AllOtherCore, TypeT9 join(Type == Type9,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join9",
				"join9 select(mapColumn(",
				"          {T9 WorkerId} = WorkerId,",
				"          {T9 Type} = Type,",
				"          {T9 OtherCharVal1} = OtherCharVal1,",
				"          {T9 OtherCharVal2} = OtherCharVal2,",
				"          {T9 OtherNumVal1} = OtherNumVal1,",
				"          {T9 OtherNumVal2} = OtherNumVal2,",
				"          {T9 OtherDtVal1} = OtherDtVal1,",
				"          {T9 OtherDtVal2} = OtherDtVal2",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectT9",
				"AllOtherCore, TypeT10 join(Type == Type10,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join10",
				"join10 select(mapColumn(",
				"          {T10 WorkerId} = WorkerId,",
				"          {T10 Type} = Type,",
				"          {T10 OtherCharVal1} = OtherCharVal1,",
				"          {T10 OtherCharVal2} = OtherCharVal2,",
				"          {T10 OtherNumVal1} = OtherNumVal1,",
				"          {T10 OtherNumVal2} = OtherNumVal2,",
				"          {T10 OtherDtVal1} = OtherDtVal1,",
				"          {T10 OtherDtVal2} = OtherDtVal2",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectT10",
				"AllOtherCore, TypeT11 join(Type == Type11,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join11",
				"join11 select(mapColumn(",
				"          {T11 WorkerId} = WorkerId,",
				"          {T11 Type} = Type,",
				"          {T11 OtherCharVal1} = OtherCharVal1,",
				"          {T11 OtherCharVal2} = OtherCharVal2,",
				"          {T11 OtherNumVal1} = OtherNumVal1,",
				"          {T11 OtherNumVal2} = OtherNumVal2,",
				"          {T11 OtherDtVal1} = OtherDtVal1,",
				"          {T11 OtherDtVal2} = OtherDtVal2",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectT11",
				"AllOtherCore, TypeT12 join(Type == Type12,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join12",
				"join12 select(mapColumn(",
				"          {T12 WorkerId} = WorkerId,",
				"          {T12 Type} = Type,",
				"          {T12 OtherCharVal1} = OtherCharVal1,",
				"          {T12 OtherCharVal2} = OtherCharVal2,",
				"          {T12 OtherNumVal1} = OtherNumVal1,",
				"          {T12 OtherNumVal2} = OtherNumVal2,",
				"          {T12 OtherDtVal1} = OtherDtVal1,",
				"          {T12 OtherDtVal2} = OtherDtVal2",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectT12",
				"AllOtherCore, TypeT13 join(Type == Type13,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join13",
				"join13 select(mapColumn(",
				"          {T13 WorkerId} = WorkerId,",
				"          {T13 Type} = Type,",
				"          {T13 OtherCharVal1} = OtherCharVal1,",
				"          {T13 OtherCharVal2} = OtherCharVal2,",
				"          {T13 OtherNumVal1} = OtherNumVal1,",
				"          {T13 OtherNumVal2} = OtherNumVal2,",
				"          {T13 OtherDtVal1} = OtherDtVal1,",
				"          {T13 OtherDtVal2} = OtherDtVal2",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectT13",
				"AllOtherCore, TypeT14 join(Type == Type14,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join14",
				"join14 select(mapColumn(",
				"          {T14 WorkerId} = WorkerId,",
				"          {T14 Type} = Type,",
				"          {T14 OtherCharVal1} = OtherCharVal1,",
				"          {T14 OtherCharVal2} = OtherCharVal2,",
				"          {T14 OtherNumVal1} = OtherNumVal1,",
				"          {T14 OtherNumVal2} = OtherNumVal2,",
				"          {T14 OtherDtVal1} = OtherDtVal1,",
				"          {T14 OtherDtVal2} = OtherDtVal2",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectT14",
				"AllOtherCore, TypeT15 join(Type == Type15,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join15",
				"join15 select(mapColumn(",
				"          {T15 WorkerId} = WorkerId,",
				"          {T15 Type} = Type,",
				"          {T15 OtherCharVal1} = OtherCharVal1,",
				"          {T15 OtherCharVal2} = OtherCharVal2,",
				"          {T15 OtherNumVal1} = OtherNumVal1,",
				"          {T15 OtherNumVal2} = OtherNumVal2,",
				"          {T15 OtherDtVal1} = OtherDtVal1,",
				"          {T15 OtherDtVal2} = OtherDtVal2",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectT15",
				"AllOtherCore, TypeT16 join(Type == Type16,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join16",
				"join16 select(mapColumn(",
				"          {T16 WorkerId} = WorkerId,",
				"          {T16 Type} = Type,",
				"          {T16 OtherCharVal1} = OtherCharVal1,",
				"          {T16 OtherCharVal2} = OtherCharVal2,",
				"          {T16 OtherNumVal1} = OtherNumVal1,",
				"          {T16 OtherNumVal2} = OtherNumVal2,",
				"          {T16 OtherDtVal1} = OtherDtVal1,",
				"          {T16 OtherDtVal2} = OtherDtVal2",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectT16",
				"AllOtherCore, TypeT17 join(Type == Type17,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join17",
				"join17 select(mapColumn(",
				"          {T17 WorkerId} = WorkerId,",
				"          {T17 Type} = Type,",
				"          {T17 OtherCharVal1} = OtherCharVal1,",
				"          {T17 OtherCharVal2} = OtherCharVal2,",
				"          {T17 OtherNumVal1} = OtherNumVal1,",
				"          {T17 OtherNumVal2} = OtherNumVal2,",
				"          {T17 OtherDtVal1} = OtherDtVal1,",
				"          {T17 OtherDtVal2} = OtherDtVal2",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectT17",
				"AllOtherCore, TypeT18 join(Type == Type18,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join18",
				"join18 select(mapColumn(",
				"          {T18 WorkerId} = WorkerId,",
				"          {T18 Type} = Type,",
				"          {T18 OtherCharVal1} = OtherCharVal1,",
				"          {T18 OtherCharVal2} = OtherCharVal2,",
				"          {T18 OtherNumVal1} = OtherNumVal1,",
				"          {T18 OtherNumVal2} = OtherNumVal2,",
				"          {T18 OtherDtVal1} = OtherDtVal1,",
				"          {T18 OtherDtVal2} = OtherDtVal2",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectT18",
				"AllOtherCore, TypeT19 join(Type == Type19,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join19",
				"join19 select(mapColumn(",
				"          {T19 WorkerId} = WorkerId,",
				"          {T19 Type} = Type,",
				"          {T19 OtherCharVal1} = OtherCharVal1,",
				"          {T19 OtherCharVal2} = OtherCharVal2,",
				"          {T19 OtherNumVal1} = OtherNumVal1,",
				"          {T19 OtherNumVal2} = OtherNumVal2,",
				"          {T19 OtherDtVal1} = OtherDtVal1,",
				"          {T19 OtherDtVal2} = OtherDtVal2",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectT19",
				"AllOtherCore, TypeT20 join(Type == Type20,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join20",
				"join20 select(mapColumn(",
				"          {T20 WorkerId} = WorkerId,",
				"          {T20 Type} = Type,",
				"          {T20 OtherCharVal1} = OtherCharVal1,",
				"          {T20 OtherCharVal2} = OtherCharVal2,",
				"          {T20 OtherNumVal1} = OtherNumVal1,",
				"          {T20 OtherNumVal2} = OtherNumVal2,",
				"          {T20 OtherDtVal1} = OtherDtVal1,",
				"          {T20 OtherDtVal2} = OtherDtVal2",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectT20",
				"AllOtherCore, TypeT21 join(Type == Type21,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join21",
				"join21 select(mapColumn(",
				"          {T21 WorkerId} = WorkerId,",
				"          {T21 Type} = Type,",
				"          {T21 OtherCharVal1} = OtherCharVal1,",
				"          {T21 OtherCharVal2} = OtherCharVal2,",
				"          {T21 OtherNumVal1} = OtherNumVal1,",
				"          {T21 OtherNumVal2} = OtherNumVal2,",
				"          {T21 OtherDtVal1} = OtherDtVal1,",
				"          {T21 OtherDtVal2} = OtherDtVal2",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectT21",
				"AllOtherCore, TypeT22 join(Type == Type22,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join22",
				"join22 select(mapColumn(",
				"          {T22 WorkerId} = WorkerId,",
				"          {T22 Type} = Type,",
				"          {T22 OtherCharVal1} = OtherCharVal1,",
				"          {T22 OtherCharVal2} = OtherCharVal2,",
				"          {T22 OtherNumVal1} = OtherNumVal1,",
				"          {T22 OtherNumVal2} = OtherNumVal2,",
				"          {T22 OtherDtVal1} = OtherDtVal1,",
				"          {T22 OtherDtVal2} = OtherDtVal2",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectT22",
				"AllOtherCore, TypeT23 join(Type == Type23,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join23",
				"join23 select(mapColumn(",
				"          {T23 WorkerId} = WorkerId,",
				"          {T23 Type} = Type,",
				"          {T23 OtherCharVal1} = OtherCharVal1,",
				"          {T23 OtherCharVal2} = OtherCharVal2,",
				"          {T23 OtherNumVal1} = OtherNumVal1,",
				"          {T23 OtherNumVal2} = OtherNumVal2,",
				"          {T23 OtherDtVal1} = OtherDtVal1,",
				"          {T23 OtherDtVal2} = OtherDtVal2",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectT23",
				"AllOtherCore, TypeT24 join(Type == Type24,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join24",
				"join24 select(mapColumn(",
				"          {T24 WorkerId} = WorkerId,",
				"          {T24 Type} = Type,",
				"          {T24 OtherCharVal1} = OtherCharVal1,",
				"          {T24 OtherCharVal2} = OtherCharVal2,",
				"          {T24 OtherNumVal1} = OtherNumVal1,",
				"          {T24 OtherNumVal2} = OtherNumVal2,",
				"          {T24 OtherDtVal1} = OtherDtVal1,",
				"          {T24 OtherDtVal2} = OtherDtVal2",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectT24",
				"AllOtherCore, TypeT25 join(Type == Type25,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join25",
				"join25 select(mapColumn(",
				"          {T25 WorkerId} = WorkerId,",
				"          {T25 Type} = Type,",
				"          {T25 OtherCharVal1} = OtherCharVal1,",
				"          {T25 OtherCharVal2} = OtherCharVal2,",
				"          {T25 OtherNumVal1} = OtherNumVal1,",
				"          {T25 OtherNumVal2} = OtherNumVal2,",
				"          {T25 OtherDtVal1} = OtherDtVal1,",
				"          {T25 OtherDtVal2} = OtherDtVal2",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectT25",
				"AllOtherCore, TypeT26 join(Type == Type26,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join26",
				"join26 select(mapColumn(",
				"          {T26 WorkerId} = WorkerId,",
				"          {T26 Type} = Type,",
				"          {T26 OtherCharVal1} = OtherCharVal1,",
				"          {T26 OtherCharVal2} = OtherCharVal2,",
				"          {T26 OtherNumVal1} = OtherNumVal1,",
				"          {T26 OtherNumVal2} = OtherNumVal2,",
				"          {T26 OtherDtVal1} = OtherDtVal1,",
				"          {T26 OtherDtVal2} = OtherDtVal2",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectT26",
				"AllOtherCore, TypeT27 join(Type == Type27,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join27",
				"join27 select(mapColumn(",
				"          {T27 WorkerId} = WorkerId,",
				"          {T27 Type} = Type,",
				"          {T27 OtherCharVal1} = OtherCharVal1,",
				"          {T27 OtherCharVal2} = OtherCharVal2,",
				"          {T27 OtherNumVal1} = OtherNumVal1,",
				"          {T27 OtherNumVal2} = OtherNumVal2,",
				"          {T27 OtherDtVal1} = OtherDtVal1,",
				"          {T27 OtherDtVal2} = OtherDtVal2",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectT27",
				"AllOtherCore, TypeT28 join(Type == Type28,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join28",
				"join28 select(mapColumn(",
				"          {T28 WorkerId} = WorkerId,",
				"          {T28 Type} = Type,",
				"          {T28 OtherCharVal1} = OtherCharVal1,",
				"          {T28 OtherCharVal2} = OtherCharVal2,",
				"          {T28 OtherNumVal1} = OtherNumVal1,",
				"          {T28 OtherNumVal2} = OtherNumVal2,",
				"          {T28 OtherDtVal1} = OtherDtVal1,",
				"          {T28 OtherDtVal2} = OtherDtVal2",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectT28",
				"AllOtherCore, TypeT29 join(Type == Type29,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join29",
				"join29 select(mapColumn(",
				"          {T29 WorkerId} = WorkerId,",
				"          {T29 Type} = Type,",
				"          {T29 OtherCharVal1} = OtherCharVal1,",
				"          {T29 OtherCharVal2} = OtherCharVal2,",
				"          {T29 OtherNumVal1} = OtherNumVal1,",
				"          {T29 OtherNumVal2} = OtherNumVal2,",
				"          {T29 OtherDtVal1} = OtherDtVal1,",
				"          {T29 OtherDtVal2} = OtherDtVal2",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectT29",
				"AllOtherCore, TypeT30 join(Type == Type30,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join30",
				"join30 select(mapColumn(",
				"          {T30 WorkerId} = WorkerId,",
				"          {T30 Type} = Type,",
				"          {T30 OtherCharVal1} = OtherCharVal1,",
				"          {T30 OtherCharVal2} = OtherCharVal2,",
				"          {T30 OtherNumVal1} = OtherNumVal1,",
				"          {T30 OtherNumVal2} = OtherNumVal2,",
				"          {T30 OtherDtVal1} = OtherDtVal1,",
				"          {T30 OtherDtVal2} = OtherDtVal2",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectT30",
				"AllOtherCore, TypeT31 join(Type == Type31,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join31",
				"join31 select(mapColumn(",
				"          {T31 WorkerId} = WorkerId,",
				"          {T31 Type} = Type,",
				"          {T31 OtherCharVal1} = OtherCharVal1,",
				"          {T31 OtherCharVal2} = OtherCharVal2,",
				"          {T31 OtherNumVal1} = OtherNumVal1,",
				"          {T31 OtherNumVal2} = OtherNumVal2,",
				"          {T31 OtherDtVal1} = OtherDtVal1,",
				"          {T31 OtherDtVal2} = OtherDtVal2",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectT31",
				"AllOtherCore, TypeT32 join(Type == Type32,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join32",
				"join32 select(mapColumn(",
				"          {T32 WorkerId} = WorkerId,",
				"          {T32 Type} = Type,",
				"          {T32 OtherCharVal1} = OtherCharVal1,",
				"          {T32 OtherCharVal2} = OtherCharVal2,",
				"          {T32 OtherNumVal1} = OtherNumVal1,",
				"          {T32 OtherNumVal2} = OtherNumVal2,",
				"          {T32 OtherDtVal1} = OtherDtVal1,",
				"          {T32 OtherDtVal2} = OtherDtVal2",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectT32",
				"AllOtherCore, TypeT33 join(Type == Type33,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join33",
				"join33 select(mapColumn(",
				"          {T33 WorkerId} = WorkerId,",
				"          {T33 Type} = Type,",
				"          {T33 OtherCharVal1} = OtherCharVal1,",
				"          {T33 OtherCharVal2} = OtherCharVal2,",
				"          {T33 OtherNumVal1} = OtherNumVal1,",
				"          {T33 OtherNumVal2} = OtherNumVal2,",
				"          {T33 OtherDtVal1} = OtherDtVal1,",
				"          {T33 OtherDtVal2} = OtherDtVal2",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectT33",
				"AllOtherCore, TypeT34 join(Type == Type34,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join34",
				"join34 select(mapColumn(",
				"          {T34 WorkerId} = WorkerId,",
				"          {T34 Type} = Type,",
				"          {T34 OtherCharVal1} = OtherCharVal1,",
				"          {T34 OtherCharVal2} = OtherCharVal2,",
				"          {T34 OtherNumVal1} = OtherNumVal1,",
				"          {T34 OtherNumVal2} = OtherNumVal2,",
				"          {T34 OtherDtVal1} = OtherDtVal1,",
				"          {T34 OtherDtVal2} = OtherDtVal2",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectT34",
				"AllOtherCore, TypeT35 join(Type == Type35,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join35",
				"join35 select(mapColumn(",
				"          {T35 WorkerId} = WorkerId,",
				"          {T35 Type} = Type,",
				"          {T35 OtherCharVal1} = OtherCharVal1,",
				"          {T35 OtherCharVal2} = OtherCharVal2,",
				"          {T35 OtherNumVal1} = OtherNumVal1,",
				"          {T35 OtherNumVal2} = OtherNumVal2,",
				"          {T35 OtherDtVal1} = OtherDtVal1,",
				"          {T35 OtherDtVal2} = OtherDtVal2",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectT35",
				"AllOtherCore, TypeT36 join(Type == Type36,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join36",
				"join36 select(mapColumn(",
				"          {T36 WorkerId} = WorkerId,",
				"          {T36 Type} = Type,",
				"          {T36 OtherCharVal1} = OtherCharVal1,",
				"          {T36 OtherCharVal2} = OtherCharVal2,",
				"          {T36 OtherNumVal1} = OtherNumVal1,",
				"          {T36 OtherNumVal2} = OtherNumVal2,",
				"          {T36 OtherDtVal1} = OtherDtVal1,",
				"          {T36 OtherDtVal2} = OtherDtVal2",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectT36",
				"AllOtherCore, TypeT37 join(Type == Type37,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join37",
				"join37 select(mapColumn(",
				"          {T37 WorkerId} = WorkerId,",
				"          {T37 Type} = Type,",
				"          {T37 OtherCharVal1} = OtherCharVal1,",
				"          {T37 OtherCharVal2} = OtherCharVal2,",
				"          {T37 OtherNumVal1} = OtherNumVal1,",
				"          {T37 OtherNumVal2} = OtherNumVal2,",
				"          {T37 OtherDtVal1} = OtherDtVal1,",
				"          {T37 OtherDtVal2} = OtherDtVal2",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectT37",
				"AllOtherCore, TypeT38 join(Type == Type38,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join38",
				"join38 select(mapColumn(",
				"          {T38 WorkerId} = WorkerId,",
				"          {T38 Type} = Type,",
				"          {T38 OtherCharVal1} = OtherCharVal1,",
				"          {T38 OtherCharVal2} = OtherCharVal2,",
				"          {T38 OtherNumVal1} = OtherNumVal1,",
				"          {T38 OtherNumVal2} = OtherNumVal2,",
				"          {T38 OtherDtVal1} = OtherDtVal1,",
				"          {T38 OtherDtVal2} = OtherDtVal2",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectT38",
				"AllOtherCore, TypeT39 join(Type == Type39,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join39",
				"join39 select(mapColumn(",
				"          {T39 WorkerId} = WorkerId,",
				"          {T39 Type} = Type,",
				"          {T39 OtherCharVal1} = OtherCharVal1,",
				"          {T39 OtherCharVal2} = OtherCharVal2,",
				"          {T39 OtherNumVal1} = OtherNumVal1,",
				"          {T39 OtherNumVal2} = OtherNumVal2,",
				"          {T39 OtherDtVal1} = OtherDtVal1,",
				"          {T39 OtherDtVal2} = OtherDtVal2",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectT39",
				"AllOtherCore, TypeT40 join(Type == Type40,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join40",
				"join40 select(mapColumn(",
				"          {T40 WorkerId} = WorkerId,",
				"          {T40 Type} = Type,",
				"          {T40 OtherCharVal1} = OtherCharVal1,",
				"          {T40 OtherCharVal2} = OtherCharVal2,",
				"          {T40 OtherNumVal1} = OtherNumVal1,",
				"          {T40 OtherNumVal2} = OtherNumVal2,",
				"          {T40 OtherDtVal1} = OtherDtVal1,",
				"          {T40 OtherDtVal2} = OtherDtVal2",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectT40",
				"AllOtherCore, TypeT41 join(Type == Type41,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join41",
				"join41 select(mapColumn(",
				"          {T41 WorkerId} = WorkerId,",
				"          {T41 Type} = Type,",
				"          {T41 OtherCharVal1} = OtherCharVal1,",
				"          {T41 OtherCharVal2} = OtherCharVal2,",
				"          {T41 OtherNumVal1} = OtherNumVal1,",
				"          {T41 OtherNumVal2} = OtherNumVal2,",
				"          {T41 OtherDtVal1} = OtherDtVal1,",
				"          {T41 OtherDtVal2} = OtherDtVal2",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectT41",
				"AllOtherCore, TypeT42 join(Type == Type42,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join42",
				"join42 select(mapColumn(",
				"          {T42 WorkerId} = WorkerId,",
				"          {T42 Type} = Type,",
				"          {T42 OtherCharVal1} = OtherCharVal1,",
				"          {T42 OtherCharVal2} = OtherCharVal2,",
				"          {T42 OtherNumVal1} = OtherNumVal1,",
				"          {T42 OtherNumVal2} = OtherNumVal2,",
				"          {T42 OtherDtVal1} = OtherDtVal1,",
				"          {T42 OtherDtVal2} = OtherDtVal2",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectT42",
				"AllOtherCore, TypeT43 join(Type == Type43,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join43",
				"join43 select(mapColumn(",
				"          {T43 WorkerId} = WorkerId,",
				"          {T43 Type} = Type,",
				"          {T43 OtherCharVal1} = OtherCharVal1,",
				"          {T43 OtherCharVal2} = OtherCharVal2,",
				"          {T43 OtherNumVal1} = OtherNumVal1,",
				"          {T43 OtherNumVal2} = OtherNumVal2,",
				"          {T43 OtherDtVal1} = OtherDtVal1,",
				"          {T43 OtherDtVal2} = OtherDtVal2",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectT43",
				"AllOtherCore, TypeT44 join(Type == Type44,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join44",
				"join44 select(mapColumn(",
				"          {T44 WorkerId} = WorkerId,",
				"          {T44 Type} = Type,",
				"          {T44 OtherCharVal1} = OtherCharVal1,",
				"          {T44 OtherCharVal2} = OtherCharVal2,",
				"          {T44 OtherNumVal1} = OtherNumVal1,",
				"          {T44 OtherNumVal2} = OtherNumVal2,",
				"          {T44 OtherDtVal1} = OtherDtVal1,",
				"          {T44 OtherDtVal2} = OtherDtVal2",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectT44",
				"AllOtherCore, TypeT45 join(Type == Type45,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join45",
				"join45 select(mapColumn(",
				"          {T45 WorkerId} = WorkerId,",
				"          {T45 Type} = Type,",
				"          {T45 OtherCharVal1} = OtherCharVal1,",
				"          {T45 OtherCharVal2} = OtherCharVal2,",
				"          {T45 OtherNumVal1} = OtherNumVal1,",
				"          {T45 OtherNumVal2} = OtherNumVal2,",
				"          {T45 OtherDtVal1} = OtherDtVal1,",
				"          {T45 OtherDtVal2} = OtherDtVal2",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectT45",
				"AllOtherCore, TypeT46 join(Type == Type46,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join46",
				"join46 select(mapColumn(",
				"          {T46 WorkerId} = WorkerId,",
				"          {T46 Type} = Type,",
				"          {T46 OtherCharVal1} = OtherCharVal1,",
				"          {T46 OtherCharVal2} = OtherCharVal2,",
				"          {T46 OtherNumVal1} = OtherNumVal1,",
				"          {T46 OtherNumVal2} = OtherNumVal2,",
				"          {T46 OtherDtVal1} = OtherDtVal1,",
				"          {T46 OtherDtVal2} = OtherDtVal2",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectT46",
				"AllOtherCore, TypeT47 join(Type == Type47,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join47",
				"join47 select(mapColumn(",
				"          {T47 WorkerId} = WorkerId,",
				"          {T47 Type} = Type,",
				"          {T47 OtherCharVal1} = OtherCharVal1,",
				"          {T47 OtherCharVal2} = OtherCharVal2,",
				"          {T47 OtherNumVal1} = OtherNumVal1,",
				"          {T47 OtherNumVal2} = OtherNumVal2,",
				"          {T47 OtherDtVal1} = OtherDtVal1,",
				"          {T47 OtherDtVal2} = OtherDtVal2",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectT47",
				"AllOtherCore, TypeT48 join(Type == Type48,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join48",
				"join48 select(mapColumn(",
				"          {T48 WorkerId} = WorkerId,",
				"          {T48 Type} = Type,",
				"          {T48 OtherCharVal1} = OtherCharVal1,",
				"          {T48 OtherCharVal2} = OtherCharVal2,",
				"          {T48 OtherNumVal1} = OtherNumVal1,",
				"          {T48 OtherNumVal2} = OtherNumVal2,",
				"          {T48 OtherDtVal1} = OtherDtVal1,",
				"          {T48 OtherDtVal2} = OtherDtVal2",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectT48",
				"AllOtherCore, TypeT49 join(Type == Type49,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join49",
				"join49 select(mapColumn(",
				"          {T49 WorkerId} = WorkerId,",
				"          {T49 Type} = Type,",
				"          {T49 OtherCharVal1} = OtherCharVal1,",
				"          {T49 OtherCharVal2} = OtherCharVal2,",
				"          {T49 OtherNumVal1} = OtherNumVal1,",
				"          {T49 OtherNumVal2} = OtherNumVal2,",
				"          {T49 OtherDtVal1} = OtherDtVal1,",
				"          {T49 OtherDtVal2} = OtherDtVal2",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectT49",
				"AllOtherCore, TypeT50 join(Type == Type50,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join50",
				"join50 select(mapColumn(",
				"          {T50 WorkerId} = WorkerId,",
				"          {T50 Type} = Type,",
				"          {T50 OtherCharVal1} = OtherCharVal1,",
				"          {T50 OtherCharVal2} = OtherCharVal2,",
				"          {T50 OtherNumVal1} = OtherNumVal1,",
				"          {T50 OtherNumVal2} = OtherNumVal2,",
				"          {T50 OtherDtVal1} = OtherDtVal1,",
				"          {T50 OtherDtVal2} = OtherDtVal2",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectT50",
				"JoinOtherAnalysisYear, selectT1 join(WorkerId == {T1 WorkerId},",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> joinT1",
				"joinT1, selectT2 join(WorkerId == {T2 WorkerId},",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> joinT2",
				"joinT2, selectT3 join(WorkerId == {T3 WorkerId},",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> joinT3",
				"joinT3, selectT4 join(WorkerId == {T4 WorkerId},",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> joinT4",
				"joinT4, selectT5 join(WorkerId == {T5 WorkerId},",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> joinT5",
				"joinT5, selectT6 join(WorkerId == {T6 WorkerId},",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> joinT6",
				"joinT6, selectT7 join(WorkerId == {T7 WorkerId},",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> joinT7",
				"joinT8, selectT9 join(WorkerId == {T9 WorkerId},",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> joinT9",
				"joinT9, selectT10 join(WorkerId == {T10 WorkerId},",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> joinT10",
				"joinT10, selectT11 join(WorkerId == {T11 WorkerId},",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> joinT11",
				"joinT11, selectT12 join(WorkerId == {T12 WorkerId},",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> joinT12",
				"joinT12, selectT13 join(WorkerId == {T13 WorkerId},",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> joinT13",
				"joinT13, selectT14 join(WorkerId == {T14 WorkerId},",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> joinT14",
				"joinT14, selectT15 join(WorkerId == {T15 WorkerId},",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> joinT15",
				"joinT15, selectT16 join(WorkerId == {T16 WorkerId},",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> joinT16",
				"joinT16, selectT17 join(WorkerId == {T17 WorkerId},",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> joinT17",
				"joinT17, selectT18 join(WorkerId == {T18 WorkerId},",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> joinT18",
				"joinT18, selectT19 join(WorkerId == {T19 WorkerId},",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> joinT19",
				"joinT19, selectT20 join(WorkerId == {T20 WorkerId},",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> joinT20",
				"joinT20, selectT21 join(WorkerId == {T21 WorkerId},",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> joinT21",
				"joinT21, selectT22 join(WorkerId == {T22 WorkerId},",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> joinT22",
				"joinT22, selectT23 join(WorkerId == {T23 WorkerId},",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> joinT23",
				"joinT23, selectT24 join(WorkerId == {T24 WorkerId},",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> joinT24",
				"joinT24, selectT25 join(WorkerId == {T25 WorkerId},",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> joinT25",
				"joinT25, selectT26 join(WorkerId == {T26 WorkerId},",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> joinT26",
				"joinT26, selectT27 join(WorkerId == {T27 WorkerId},",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> joinT27",
				"joinT27, selectT28 join(WorkerId == {T28 WorkerId},",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> joinT28",
				"joinT28, selectT29 join(WorkerId == {T29 WorkerId},",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> joinT29",
				"joinT29, selectT30 join(WorkerId == {T30 WorkerId},",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> joinT30",
				"joinT30, selectT31 join(WorkerId == {T31 WorkerId},",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> joinT31",
				"joinT31, selectT32 join(WorkerId == {T32 WorkerId},",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> joinT32",
				"joinT32, selectT33 join(WorkerId == {T33 WorkerId},",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> joinT33",
				"joinT33, selectT34 join(WorkerId == {T34 WorkerId},",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> joinT34",
				"joinT34, selectT35 join(WorkerId == {T35 WorkerId},",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> joinT35",
				"joinT35, selectT36 join(WorkerId == {T36 WorkerId},",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> joinT36",
				"joinT36, selectT37 join(WorkerId == {T37 WorkerId},",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> joinT37",
				"joinT37, selectT38 join(WorkerId == {T38 WorkerId},",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> joinT38",
				"joinT38, selectT39 join(WorkerId == {T39 WorkerId},",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> joinT39",
				"joinT39, selectT40 join(WorkerId == {T40 WorkerId},",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> joinT40",
				"joinT40, selectT41 join(WorkerId == {T41 WorkerId},",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> joinT41",
				"joinT41, selectT42 join(WorkerId == {T42 WorkerId},",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> joinT42",
				"joinT42, selectT43 join(WorkerId == {T43 WorkerId},",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> joinT43",
				"joinT43, selectT44 join(WorkerId == {T44 WorkerId},",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> joinT44",
				"joinT44, selectT45 join(WorkerId == {T45 WorkerId},",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> joinT45",
				"joinT45, selectT46 join(WorkerId == {T46 WorkerId},",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> joinT46",
				"joinT46, selectT47 join(WorkerId == {T47 WorkerId},",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> joinT47",
				"joinT47, selectT48 join(WorkerId == {T48 WorkerId},",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> joinT48",
				"joinT48, selectT49 join(WorkerId == {T49 WorkerId},",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> joinT49",
				"joinT49, selectT50 join(WorkerId == {T50 WorkerId},",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> joinT50",
				"RemoveRecordsWithNoActivity select(mapColumn(",
				"          ClientId = OtherCoreWorkers@ClientId,",
				"          ClientEngagementDt,",
				"          WorkerId,",
				"          P1_DataCollectionYear = {Data Collection Year},",
				"          P1_DataCollectionQuarter = {Data Collection Quarter},",
				"          P1_EventYear = Year,",
				"          P1_T1Type = {T1 Type},",
				"          P1_T1OtherCharVal1 = {T1 OtherCharVal1},",
				"          P1_T1OtherCharVal2 = {T1 OtherCharVal2},",
				"          P1_T1OtherNumVal1 = {T1 OtherNumVal1},",
				"          P1_T1OtherNumVal2 = {T1 OtherNumVal2},",
				"          P1_T1OtherDtVal1 = {T1 OtherDtVal1},",
				"          P1_T1OtherDtVal2 = {T1 OtherDtVal2},",
				"          P1_T2Type = {T2 Type},",
				"          P1_T2OtherCharVal1 = {T2 OtherCharVal1},",
				"          P1_T2OtherCharVal2 = {T2 OtherCharVal2},",
				"          P1_T2OtherNumVal1 = {T2 OtherNumVal1},",
				"          P1_T2OtherNumVal2 = {T2 OtherNumVal2},",
				"          P1_T2OtherDtVal1 = {T2 OtherDtVal1},",
				"          P1_T2OtherDtVal2 = {T2 OtherDtVal2},",
				"          P1_T3Type = {T3 Type},",
				"          P1_T3OtherCharVal1 = {T3 OtherCharVal1},",
				"          P1_T3OtherCharVal2 = {T3 OtherCharVal2},",
				"          P1_T3OtherNumVal1 = {T3 OtherNumVal1},",
				"          P1_T3OtherNumVal2 = {T3 OtherNumVal2},",
				"          P1_T3OtherDtVal1 = {T3 OtherDtVal1},",
				"          P1_T3OtherDtVal2 = {T3 OtherDtVal2},",
				"          P1_T4Type = {T4 Type},",
				"          P1_T4OtherCharVal1 = {T4 OtherCharVal1},",
				"          P1_T4OtherCharVal2 = {T4 OtherCharVal2},",
				"          P1_T4OtherNumVal1 = {T4 OtherNumVal1},",
				"          P1_T4OtherNumVal2 = {T4 OtherNumVal2},",
				"          P1_T4OtherDtVal1 = {T4 OtherDtVal1},",
				"          P1_T4OtherDtVal2 = {T4 OtherDtVal2},",
				"          {P1_T5 Type} = {T5 Type},",
				"          P1_T5OtherCharVal1 = {T5 OtherCharVal1},",
				"          P1_T5OtherCharVal2 = {T5 OtherCharVal2},",
				"          P1_T5OtherNumVal1 = {T5 OtherNumVal1},",
				"          P1_T5OtherNumVal2 = {T5 OtherNumVal2},",
				"          P1_T5OtherDtVal1 = {T5 OtherDtVal1},",
				"          P1_T5OtherDtVal2 = {T5 OtherDtVal2},",
				"          P1_T6Type = {T6 Type},",
				"          P1_T6OtherCharVal1 = {T6 OtherCharVal1},",
				"          P1_T6OtherCharVal2 = {T6 OtherCharVal2},",
				"          P1_T6OtherNumVal1 = {T6 OtherNumVal1},",
				"          P1_T6OtherNumVal2 = {T6 OtherNumVal2},",
				"          P1_T6OtherDtVal1 = {T6 OtherDtVal1},",
				"          P1_T6OtherDtVal2 = {T6 OtherDtVal2},",
				"          P1_T7Type = {T7 Type},",
				"          P1_T7OtherCharVal1 = {T7 OtherCharVal1},",
				"          P1_T7OtherCharVal2 = {T7 OtherCharVal2},",
				"          P1_T7OtherNumVal1 = {T7 OtherNumVal1},",
				"          P1_T7OtherNumVal2 = {T7 OtherNumVal2},",
				"          P1_T7OtherDtVal1 = {T7 OtherDtVal1},",
				"          P1_T7OtherDtVal2 = {T7 OtherDtVal2},",
				"          P1_T8Type = {T8 Type},",
				"          P1_T8OtherCharVal1 = {T8 OtherCharVal1},",
				"          P1_T8OtherCharVal2 = {T8 OtherCharVal2},",
				"          P1_T8OtherNumVal1 = {T8 OtherNumVal1},",
				"          P1_T8OtherNumVal2 = {T8 OtherNumVal2},",
				"          P1_T8OtherDtVal1 = {T8 OtherDtVal1},",
				"          P1_T8OtherDtVal2 = {T8 OtherDtVal2},",
				"          P1_T9Type = {T9 Type},",
				"          P1_T9OtherCharVal1 = {T9 OtherCharVal1},",
				"          P1_T9OtherCharVal2 = {T9 OtherCharVal2},",
				"          P1_T9OtherNumVal1 = {T9 OtherNumVal1},",
				"          P1_T9OtherNumVal2 = {T9 OtherNumVal2},",
				"          P1_T9OtherDtVal1 = {T9 OtherDtVal1},",
				"          P1_T9OtherDtVal2 = {T9 OtherDtVal2},",
				"          P1_T10Type = {T10 Type},",
				"          P1_T10OtherCharVal1 = {T10 OtherCharVal1},",
				"          P1_T10OtherCharVal2 = {T10 OtherCharVal2},",
				"          P1_T10OtherNumVal1 = {T10 OtherNumVal1},",
				"          P1_T10OtherNumVal2 = {T10 OtherNumVal2},",
				"          P1_T10OtherDtVal1 = {T10 OtherDtVal1},",
				"          P1_T10OtherDtVal2 = {T10 OtherDtVal2},",
				"          P1_T11Type = {T11 Type},",
				"          P1_T11OtherCharVal1 = {T11 OtherCharVal1},",
				"          P1_T11OtherCharVal2 = {T11 OtherCharVal2},",
				"          P1_T11OtherNumVal1 = {T11 OtherNumVal1},",
				"          P1_T11OtherNumVal2 = {T11 OtherNumVal2},",
				"          P1_T11OtherDtVal1 = {T11 OtherDtVal1},",
				"          P1_T11OtherDtVal2 = {T11 OtherDtVal2},",
				"          P1_T12Type = {T12 Type},",
				"          P1_T12OtherCharVal1 = {T12 OtherCharVal1},",
				"          P1_T12OtherCharVal2 = {T12 OtherCharVal2},",
				"          P1_T12OtherNumVal1 = {T12 OtherNumVal1},",
				"          P1_T12OtherNumVal2 = {T12 OtherNumVal2},",
				"          P1_T12OtherDtVal1 = {T12 OtherDtVal1},",
				"          P1_T12OtherDtVal2 = {T12 OtherDtVal2},",
				"          P1_T13Type = {T13 Type},",
				"          P1_T13OtherCharVal1 = {T13 OtherCharVal1},",
				"          P1_T13OtherCharVal2 = {T13 OtherCharVal2},",
				"          P1_T13OtherNumVal1 = {T13 OtherNumVal1},",
				"          P1_T13OtherNumVal2 = {T13 OtherNumVal2},",
				"          P1_T13OtherDtVal1 = {T13 OtherDtVal1},",
				"          P1_T13OtherDtVal2 = {T13 OtherDtVal2},",
				"          P1_T14Type = {T14 Type},",
				"          P1_T14OtherCharVal1 = {T14 OtherCharVal1},",
				"          P1_T14OtherCharVal2 = {T14 OtherCharVal2},",
				"          P1_T14OtherNumVal1 = {T14 OtherNumVal1},",
				"          P1_T14OtherNumVal2 = {T14 OtherNumVal2},",
				"          P1_T14OtherDtVal1 = {T14 OtherDtVal1},",
				"          P1_T14OtherDtVal2 = {T14 OtherDtVal2},",
				"          P1_T15Type = {T15 Type},",
				"          P1_T15OtherCharVal1 = {T15 OtherCharVal1},",
				"          P1_T15OtherCharVal2 = {T15 OtherCharVal2},",
				"          P1_T15OtherNumVal1 = {T15 OtherNumVal1},",
				"          P1_T15OtherNumVal2 = {T15 OtherNumVal2},",
				"          P1_T15OtherDtVal1 = {T15 OtherDtVal1},",
				"          P1_T15OtherDtVal2 = {T15 OtherDtVal2},",
				"          P1_T16Type = {T16 Type},",
				"          P1_T16OtherCharVal1 = {T16 OtherCharVal1},",
				"          P1_T16OtherCharVal2 = {T16 OtherCharVal2},",
				"          P1_T16OtherNumVal1 = {T16 OtherNumVal1},",
				"          P1_T16OtherNumVal2 = {T16 OtherNumVal2},",
				"          P1_T16OtherDtVal1 = {T16 OtherDtVal1},",
				"          P1_T16OtherDtVal2 = {T16 OtherDtVal2},",
				"          P1_T17Type = {T17 Type},",
				"          P1_T17OtherCharVal1 = {T17 OtherCharVal1},",
				"          P1_T17OtherCharVal2 = {T17 OtherCharVal2},",
				"          P1_T17OtherNumVal1 = {T17 OtherNumVal1},",
				"          P1_T17OtherNumVal2 = {T17 OtherNumVal2},",
				"          P1_T17OtherDtVal1 = {T17 OtherDtVal1},",
				"          P1_T17OtherDtVal2 = {T17 OtherDtVal2},",
				"          P1_T18Type = {T18 Type},",
				"          P1_T18OtherCharVal1 = {T18 OtherCharVal1},",
				"          P1_T18OtherCharVal2 = {T18 OtherCharVal2},",
				"          P1_T18OtherNumVal1 = {T18 OtherNumVal1},",
				"          P1_T18OtherNumVal2 = {T18 OtherNumVal2},",
				"          P1_T18OtherDtVal1 = {T18 OtherDtVal1},",
				"          P1_T18OtherDtVal2 = {T18 OtherDtVal2},",
				"          P1_T19Type = {T19 Type},",
				"          P1_T19OtherCharVal1 = {T19 OtherCharVal1},",
				"          P1_T19OtherCharVal2 = {T19 OtherCharVal2},",
				"          P1_T19OtherNumVal1 = {T19 OtherNumVal1},",
				"          P1_T19OtherNumVal2 = {T19 OtherNumVal2},",
				"          P1_T19OtherDtVal1 = {T19 OtherDtVal1},",
				"          P1_T19OtherDtVal2 = {T19 OtherDtVal2},",
				"          P1_T20Type = {T20 Type},",
				"          P1_T20OtherCharVal1 = {T20 OtherCharVal1},",
				"          P1_T20OtherCharVal2 = {T20 OtherCharVal2},",
				"          P1_T20OtherNumVal1 = {T20 OtherNumVal1},",
				"          P1_T20OtherNumVal2 = {T20 OtherNumVal2},",
				"          P1_T20OtherDtVal1 = {T20 OtherDtVal1},",
				"          P1_T20OtherDtVal2 = {T20 OtherDtVal2},",
				"          P1_T21Type = {T21 Type},",
				"          P1_T21OtherCharVal1 = {T21 OtherCharVal1},",
				"          P1_T21OtherCharVal2 = {T21 OtherCharVal2},",
				"          P1_T21OtherNumVal1 = {T21 OtherNumVal1},",
				"          P1_T21OtherNumVal2 = {T21 OtherNumVal2},",
				"          P1_T21OtherDtVal1 = {T21 OtherDtVal1},",
				"          P1_T21OtherDtVal2 = {T21 OtherDtVal2},",
				"          P1_T22Type = {T22 Type},",
				"          P1_T22OtherCharVal1 = {T22 OtherCharVal1},",
				"          P1_T22OtherCharVal2 = {T22 OtherCharVal2},",
				"          P1_T22OtherNumVal1 = {T22 OtherNumVal1},",
				"          P1_T22OtherNumVal2 = {T22 OtherNumVal2},",
				"          P1_T22OtherDtVal1 = {T22 OtherDtVal1},",
				"          P1_T22OtherDtVal2 = {T22 OtherDtVal2},",
				"          P1_T23Type = {T23 Type},",
				"          P1_T23OtherCharVal1 = {T23 OtherCharVal1},",
				"          P1_T23OtherCharVal2 = {T23 OtherCharVal2},",
				"          P1_T23OtherNumVal1 = {T23 OtherNumVal1},",
				"          P1_T23OtherNumVal2 = {T23 OtherNumVal2},",
				"          P1_T23OtherDtVal1 = {T23 OtherDtVal1},",
				"          P1_T23OtherDtVal2 = {T23 OtherDtVal2},",
				"          P1_T24Type = {T24 Type},",
				"          P1_T24OtherCharVal1 = {T24 OtherCharVal1},",
				"          P1_T24OtherCharVal2 = {T24 OtherCharVal2},",
				"          P1_T24OtherNumVal1 = {T24 OtherNumVal1},",
				"          P1_T24OtherNumVal2 = {T24 OtherNumVal2},",
				"          P1_T24OtherDtVal1 = {T24 OtherDtVal1},",
				"          P1_T24OtherDtVal2 = {T24 OtherDtVal2},",
				"          P1_T25Type = {T25 Type},",
				"          P1_T25OtherCharVal1 = {T25 OtherCharVal1},",
				"          P1_T25OtherCharVal2 = {T25 OtherCharVal2},",
				"          P1_T25OtherNumVal1 = {T25 OtherNumVal1},",
				"          P1_T25OtherNumVal2 = {T25 OtherNumVal2},",
				"          P1_T25OtherDtVal1 = {T25 OtherDtVal1},",
				"          P1_T25OtherDtVal2 = {T25 OtherDtVal2},",
				"          P1_T26Type = {T26 Type},",
				"          P1_T26OtherCharVal1 = {T26 OtherCharVal1},",
				"          P1_T26OtherCharVal2 = {T26 OtherCharVal2},",
				"          P1_T26OtherNumVal1 = {T26 OtherNumVal1},",
				"          P1_T26OtherNumVal2 = {T26 OtherNumVal2},",
				"          P1_T26OtherDtVal1 = {T26 OtherDtVal1},",
				"          P1_T26OtherDtVal2 = {T26 OtherDtVal2},",
				"          P1_T27Type = {T27 Type},",
				"          P1_T27OtherCharVal1 = {T27 OtherCharVal1},",
				"          P1_T27OtherCharVal2 = {T27 OtherCharVal2},",
				"          P1_T27OtherNumVal1 = {T27 OtherNumVal1},",
				"          P1_T27OtherNumVal2 = {T27 OtherNumVal2},",
				"          P1_T27OtherDtVal1 = {T27 OtherDtVal1},",
				"          P1_T27OtherDtVal2 = {T27 OtherDtVal2},",
				"          P1_T28Type = {T28 Type},",
				"          P1_T28OtherCharVal1 = {T28 OtherCharVal1},",
				"          P1_T28OtherCharVal2 = {T28 OtherCharVal2},",
				"          P1_T28OtherNumVal1 = {T28 OtherNumVal1},",
				"          P1_T28OtherNumVal2 = {T28 OtherNumVal2},",
				"          P1_T28OtherDtVal1 = {T28 OtherDtVal1},",
				"          P1_T28OtherDtVal2 = {T28 OtherDtVal2},",
				"          P1_T29Type = {T29 Type},",
				"          P1_T29OtherCharVal1 = {T29 OtherCharVal1},",
				"          P1_T29OtherCharVal2 = {T29 OtherCharVal2},",
				"          P1_T29OtherNumVal1 = {T29 OtherNumVal1},",
				"          P1_T29OtherNumVal2 = {T29 OtherNumVal2},",
				"          P1_T29OtherDtVal1 = {T29 OtherDtVal1},",
				"          P1_T29OtherDtVal2 = {T29 OtherDtVal2},",
				"          P1_T30Type = {T30 Type},",
				"          P1_T30OtherCharVal1 = {T30 OtherCharVal1},",
				"          P1_T30OtherCharVal2 = {T30 OtherCharVal2},",
				"          P1_T30OtherNumVal1 = {T30 OtherNumVal1},",
				"          P1_T30OtherNumVal2 = {T30 OtherNumVal2},",
				"          P1_T30OtherDtVal1 = {T30 OtherDtVal1},",
				"          P1_T30OtherDtVal2 = {T30 OtherDtVal2},",
				"          P1_T31Type = {T31 Type},",
				"          P1_T31OtherCharVal1 = {T31 OtherCharVal1},",
				"          P1_T31OtherCharVal2 = {T31 OtherCharVal2},",
				"          P1_T31OtherNumVal1 = {T31 OtherNumVal1},",
				"          P1_T31OtherNumVal2 = {T31 OtherNumVal2},",
				"          P1_T31OtherDtVal1 = {T31 OtherDtVal1},",
				"          P1_T31OtherDtVal2 = {T31 OtherDtVal2},",
				"          P1_T32Type = {T32 Type},",
				"          P1_T32OtherCharVal1 = {T32 OtherCharVal1},",
				"          P1_T32OtherCharVal2 = {T32 OtherCharVal2},",
				"          P1_T32OtherNumVal1 = {T32 OtherNumVal1},",
				"          P1_T32OtherNumVal2 = {T32 OtherNumVal2},",
				"          P1_T32OtherDtVal1 = {T32 OtherDtVal1},",
				"          P1_T32OtherDtVal2 = {T32 OtherDtVal2},",
				"          P1_T33Type = {T33 Type},",
				"          P1_T33OtherCharVal1 = {T33 OtherCharVal1},",
				"          P1_T33OtherCharVal2 = {T33 OtherCharVal2},",
				"          P1_T33OtherNumVal1 = {T33 OtherNumVal1},",
				"          P1_T33OtherNumVal2 = {T33 OtherNumVal2},",
				"          P1_T33OtherDtVal1 = {T33 OtherDtVal1},",
				"          P1_T33OtherDtVal2 = {T33 OtherDtVal2},",
				"          P1_T34Type = {T34 Type},",
				"          P1_T34OtherCharVal1 = {T34 OtherCharVal1},",
				"          P1_T34OtherCharVal2 = {T34 OtherCharVal2},",
				"          P1_T34OtherNumVal1 = {T34 OtherNumVal1},",
				"          P1_T34OtherNumVal2 = {T34 OtherNumVal2},",
				"          P1_T34OtherDtVal1 = {T34 OtherDtVal1},",
				"          P1_T34OtherDtVal2 = {T34 OtherDtVal2},",
				"          P1_T35Type = {T35 Type},",
				"          P1_T35OtherCharVal1 = {T35 OtherCharVal1},",
				"          P1_T35OtherCharVal2 = {T35 OtherCharVal2},",
				"          P1_T35OtherNumVal1 = {T35 OtherNumVal1},",
				"          P1_T35OtherNumVal2 = {T35 OtherNumVal2},",
				"          P1_T35OtherDtVal1 = {T35 OtherDtVal1},",
				"          P1_T35OtherDtVal2 = {T35 OtherDtVal2},",
				"          P1_T36Type = {T36 Type},",
				"          P1_T36OtherCharVal1 = {T36 OtherCharVal1},",
				"          P1_T36OtherCharVal2 = {T36 OtherCharVal2},",
				"          P1_T36OtherNumVal1 = {T36 OtherNumVal1},",
				"          P1_T36OtherNumVal2 = {T36 OtherNumVal2},",
				"          P1_T36OtherDtVal1 = {T36 OtherDtVal1},",
				"          P1_T36OtherDtVal2 = {T36 OtherDtVal2},",
				"          P1_T37Type = {T37 Type},",
				"          P1_T37OtherCharVal1 = {T37 OtherCharVal1},",
				"          P1_T37OtherCharVal2 = {T37 OtherCharVal2},",
				"          P1_T37OtherNumVal1 = {T37 OtherNumVal1},",
				"          P1_T37OtherNumVal2 = {T37 OtherNumVal2},",
				"          P1_T37OtherDtVal1 = {T37 OtherDtVal1},",
				"          P1_T37OtherDtVal2 = {T37 OtherDtVal2},",
				"          P1_T38Type = {T38 Type},",
				"          P1_T38OtherCharVal1 = {T38 OtherCharVal1},",
				"          P1_T38OtherCharVal2 = {T38 OtherCharVal2},",
				"          P1_T38OtherNumVal1 = {T38 OtherNumVal1},",
				"          P1_T38OtherNumVal2 = {T38 OtherNumVal2},",
				"          P1_T38OtherDtVal1 = {T38 OtherDtVal1},",
				"          P1_T38OtherDtVal2 = {T38 OtherDtVal2},",
				"          P1_T39Type = {T39 Type},",
				"          P1_T39OtherCharVal1 = {T39 OtherCharVal1},",
				"          P1_T39OtherCharVal2 = {T39 OtherCharVal2},",
				"          P1_T39OtherNumVal1 = {T39 OtherNumVal1},",
				"          P1_T39OtherNumVal2 = {T39 OtherNumVal2},",
				"          P1_T39OtherDtVal1 = {T39 OtherDtVal1},",
				"          P1_T39OtherDtVal2 = {T39 OtherDtVal2},",
				"          P1_T40Type = {T40 Type},",
				"          P1_T40OtherCharVal1 = {T40 OtherCharVal1},",
				"          P1_T40OtherCharVal2 = {T40 OtherCharVal2},",
				"          P1_T40OtherNumVal1 = {T40 OtherNumVal1},",
				"          P1_T40OtherNumVal2 = {T40 OtherNumVal2},",
				"          P1_T40OtherDtVal1 = {T40 OtherDtVal1},",
				"          P1_T40OtherDtVal2 = {T40 OtherDtVal2},",
				"          P1_T41Type = {T41 Type},",
				"          P1_T41OtherCharVal1 = {T41 OtherCharVal1},",
				"          P1_T41OtherCharVal2 = {T41 OtherCharVal2},",
				"          P1_T41OtherNumVal1 = {T41 OtherNumVal1},",
				"          P1_T41OtherNumVal2 = {T41 OtherNumVal2},",
				"          P1_T41OtherDtVal1 = {T41 OtherDtVal1},",
				"          P1_T41OtherDtVal2 = {T41 OtherDtVal2},",
				"          P1_T42Type = {T42 Type},",
				"          P1_T42OtherCharVal1 = {T42 OtherCharVal1},",
				"          P1_T42OtherCharVal2 = {T42 OtherCharVal2},",
				"          P1_T42OtherNumVal1 = {T42 OtherNumVal1},",
				"          P1_T42OtherNumVal2 = {T42 OtherNumVal2},",
				"          P1_T42OtherDtVal1 = {T42 OtherDtVal1},",
				"          P1_T42OtherDtVal2 = {T42 OtherDtVal2},",
				"          P1_T43Type = {T43 Type},",
				"          P1_T43OtherCharVal1 = {T43 OtherCharVal1},",
				"          P1_T43OtherCharVal2 = {T43 OtherCharVal2},",
				"          P1_T43OtherNumVal1 = {T43 OtherNumVal1},",
				"          P1_T43OtherNumVal2 = {T43 OtherNumVal2},",
				"          P1_T43OtherDtVal1 = {T43 OtherDtVal1},",
				"          P1_T43OtherDtVal2 = {T43 OtherDtVal2},",
				"          P1_T44Type = {T44 Type},",
				"          P1_T44OtherCharVal1 = {T44 OtherCharVal1},",
				"          P1_T44OtherCharVal2 = {T44 OtherCharVal2},",
				"          P1_T44OtherNumVal1 = {T44 OtherNumVal1},",
				"          P1_T44OtherNumVal2 = {T44 OtherNumVal2},",
				"          P1_T44OtherDtVal1 = {T44 OtherDtVal1},",
				"          P1_T44OtherDtVal2 = {T44 OtherDtVal2},",
				"          P1_T45Type = {T45 Type},",
				"          P1_T45OtherCharVal1 = {T45 OtherCharVal1},",
				"          P1_T45OtherCharVal2 = {T45 OtherCharVal2},",
				"          P1_T45OtherNumVal1 = {T45 OtherNumVal1},",
				"          P1_T45OtherNumVal2 = {T45 OtherNumVal2},",
				"          P1_T45OtherDtVal1 = {T45 OtherDtVal1},",
				"          P1_T45OtherDtVal2 = {T45 OtherDtVal2},",
				"          P1_T46Type = {T46 Type},",
				"          P1_T46OtherCharVal1 = {T46 OtherCharVal1},",
				"          P1_T46OtherCharVal2 = {T46 OtherCharVal2},",
				"          P1_T46OtherNumVal1 = {T46 OtherNumVal1},",
				"          P1_T46OtherNumVal2 = {T46 OtherNumVal2},",
				"          P1_T46OtherDtVal1 = {T46 OtherDtVal1},",
				"          P1_T46OtherDtVal2 = {T46 OtherDtVal2},",
				"          P1_T47Type = {T47 Type},",
				"          P1_T47OtherCharVal1 = {T47 OtherCharVal1},",
				"          P1_T47OtherCharVal2 = {T47 OtherCharVal2},",
				"          P1_T47OtherNumVal1 = {T47 OtherNumVal1},",
				"          P1_T47OtherNumVal2 = {T47 OtherNumVal2},",
				"          P1_T47OtherDtVal1 = {T47 OtherDtVal1},",
				"          P1_T47OtherDtVal2 = {T47 OtherDtVal2},",
				"          P1_T48Type = {T48 Type},",
				"          P1_T48OtherCharVal1 = {T48 OtherCharVal1},",
				"          P1_T48OtherCharVal2 = {T48 OtherCharVal2},",
				"          P1_T48OtherNumVal1 = {T48 OtherNumVal1},",
				"          P1_T48OtherNumVal2 = {T48 OtherNumVal2},",
				"          P1_T48OtherDtVal1 = {T48 OtherDtVal1},",
				"          P1_T48OtherDtVal2 = {T48 OtherDtVal2},",
				"          P1_T49Type = {T49 Type},",
				"          P1_T49OtherCharVal1 = {T49 OtherCharVal1},",
				"          P1_T49OtherCharVal2 = {T49 OtherCharVal2},",
				"          P1_T49OtherNumVal1 = {T49 OtherNumVal1},",
				"          P1_T49OtherNumVal2 = {T49 OtherNumVal2},",
				"          P1_T49OtherDtVal1 = {T49 OtherDtVal1},",
				"          P1_T49OtherDtVal2 = {T49 OtherDtVal2},",
				"          P1_T50Type = {T50 Type},",
				"          P1_T50OtherCharVal1 = {T50 OtherCharVal1},",
				"          P1_T50OtherCharVal2 = {T50 OtherCharVal2},",
				"          P1_T50OtherNumVal1 = {T50 OtherNumVal1},",
				"          P1_T50OtherNumVal2 = {T50 OtherNumVal2},",
				"          P1_T50OtherDtVal1 = {T50 OtherDtVal1},",
				"          P1_T50OtherDtVal2 = {T50 OtherDtVal2}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> CleanupJoinCollumns",
				"joinT7, selectT8 join(WorkerId == {T8 WorkerId},",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> joinT8",
				"OtherCoreWorkers, OtherCoreYear join(OtherCoreWorkers@ClientId == OtherCoreYear@ClientId,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> JoinOtherAnalysisYear",
				"joinT50 derive({Data Collection Year} = $Flow_Folder_Year,",
				"          {Data Collection Quarter} = $Flow_Folder_Quarter,",
				"          {Included Record} = iif(isNull({T1 Type}) && \r",
				"isNull({T2 Type}) && \r",
				"isNull({T3 Type}) && \r",
				"isNull({T4 Type}) &&\r",
				"isNull({T5 Type}) &&\r",
				"isNull({T6 Type}) &&\r",
				"isNull({T7 Type}) &&\r",
				"isNull({T8 Type}) &&\r",
				"isNull({T9 Type}) &&\r",
				"isNull({T10 Type}) &&\r",
				"isNull({T11 Type}) &&\r",
				"isNull({T12 Type}) &&\r",
				"isNull({T13 Type}) &&\r",
				"isNull({T14 Type}) &&\r",
				"isNull({T15 Type}) &&\r",
				"isNull({T16 Type}) &&\r",
				"isNull({T17 Type}) &&\r",
				"isNull({T18 Type}) &&\r",
				"isNull({T19 Type}) &&\r",
				"isNull({T20 Type}) &&\r",
				"isNull({T21 Type}) &&\r",
				"isNull({T22 Type}) &&\r",
				"isNull({T23 Type}) &&\r",
				"isNull({T24 Type}) &&\r",
				"isNull({T25 Type}) &&\r",
				"isNull({T26 Type}) &&\r",
				"isNull({T27 Type}) &&\r",
				"isNull({T28 Type}) &&\r",
				"isNull({T29 Type}) &&\r",
				"isNull({T30 Type}) &&\r",
				"isNull({T31 Type}) &&\r",
				"isNull({T32 Type}) &&\r",
				"isNull({T33 Type}) &&\r",
				"isNull({T34 Type}) &&\r",
				"isNull({T35 Type}) &&\r",
				"isNull({T36 Type}) &&\r",
				"isNull({T37 Type}) &&\r",
				"isNull({T38 Type}) &&\r",
				"isNull({T39 Type}) &&\r",
				"isNull({T40 Type}) &&\r",
				"isNull({T41 Type}) &&\r",
				"isNull({T42 Type}) &&\r",
				"isNull({T43 Type}) &&\r",
				"isNull({T44 Type}) &&\r",
				"isNull({T45 Type}) &&\r",
				"isNull({T46 Type}) &&\r",
				"isNull({T47 Type}) &&\r",
				"isNull({T48 Type}) &&\r",
				"isNull({T49 Type}) &&\r",
				"isNull({T50 Type})\r",
				",'N','Y'\r",
				"),",
				"          {T1 Type} = iif(isNull({T1 Type}),'N/A',{T1 Type}),",
				"          {T2 Type} = iif(isNull({T2 Type}),'N/A',{T2 Type}),",
				"          {T3 Type} = iif(isNull({T3 Type}),'N/A',{T3 Type}),",
				"          {T4 Type} = iif(isNull({T4 Type}),'N/A',{T4 Type}),",
				"          {T5 Type} = iif(isNull({T5 Type}),'N/A',{T5 Type}),",
				"          {T6 Type} = iif(isNull({T6 Type}),'N/A',{T6 Type}),",
				"          {T7 Type} = iif(isNull({T7 Type}),'N/A',{T7 Type}),",
				"          {T8 Type} = iif(isNull({T8 Type}),'N/A',{T8 Type}),",
				"          {T9 Type} = iif(isNull({T9 Type}),'N/A',{T9 Type}),",
				"          {T10 Type} = iif(isNull({T10 Type}),'N/A',{T10 Type}),",
				"          {T11 Type} = iif(isNull({T11 Type}),'N/A',{T11 Type}),",
				"          {T12 Type} = iif(isNull({T12 Type}),'N/A',{T12 Type}),",
				"          {T13 Type} = iif(isNull({T13 Type}),'N/A',{T13 Type}),",
				"          {T14 Type} = iif(isNull({T14 Type}),'N/A',{T14 Type}),",
				"          {T15 Type} = iif(isNull({T15 Type}),'N/A',{T15 Type}),",
				"          {T16 Type} = iif(isNull({T16 Type}),'N/A',{T16 Type}),",
				"          {T17 Type} = iif(isNull({T17 Type}),'N/A',{T17 Type}),",
				"          {T18 Type} = iif(isNull({T18 Type}),'N/A',{T18 Type}),",
				"          {T19 Type} = iif(isNull({T19 Type}),'N/A',{T19 Type}),",
				"          {T20 Type} = iif(isNull({T20 Type}),'N/A',{T20 Type}),",
				"          {T21 Type} = iif(isNull({T21 Type}),'N/A',{T21 Type}),",
				"          {T22 Type} = iif(isNull({T22 Type}),'N/A',{T22 Type}),",
				"          {T23 Type} = iif(isNull({T23 Type}),'N/A',{T23 Type}),",
				"          {T24 Type} = iif(isNull({T24 Type}),'N/A',{T24 Type}),",
				"          {T25 Type} = iif(isNull({T25 Type}),'N/A',{T25 Type}),",
				"          {T26 Type} = iif(isNull({T26 Type}),'N/A',{T26 Type}),",
				"          {T27 Type} = iif(isNull({T27 Type}),'N/A',{T27 Type}),",
				"          {T28 Type} = iif(isNull({T28 Type}),'N/A',{T28 Type}),",
				"          {T29 Type} = iif(isNull({T29 Type}),'N/A',{T29 Type}),",
				"          {T30 Type} = iif(isNull({T30 Type}),'N/A',{T30 Type}),",
				"          {T31 Type} = iif(isNull({T31 Type}),'N/A',{T31 Type}),",
				"          {T32 Type} = iif(isNull({T32 Type}),'N/A',{T32 Type}),",
				"          {T33 Type} = iif(isNull({T33 Type}),'N/A',{T33 Type}),",
				"          {T34 Type} = iif(isNull({T34 Type}),'N/A',{T34 Type}),",
				"          {T35 Type} = iif(isNull({T35 Type}),'N/A',{T35 Type}),",
				"          {T36 Type} = iif(isNull({T36 Type}),'N/A',{T36 Type}),",
				"          {T37 Type} = iif(isNull({T37 Type}),'N/A',{T37 Type}),",
				"          {T38 Type} = iif(isNull({T38 Type}),'N/A',{T38 Type}),",
				"          {T39 Type} = iif(isNull({T39 Type}),'N/A',{T39 Type}),",
				"          {T40 Type} = iif(isNull({T40 Type}),'N/A',{T40 Type}),",
				"          {T41 Type} = iif(isNull({T41 Type}),'N/A',{T41 Type}),",
				"          {T42 Type} = iif(isNull({T42 Type}),'N/A',{T42 Type}),",
				"          {T43 Type} = iif(isNull({T43 Type}),'N/A',{T43 Type}),",
				"          {T44 Type} = iif(isNull({T44 Type}),'N/A',{T44 Type}),",
				"          {T45 Type} = iif(isNull({T45 Type}),'N/A',{T45 Type}),",
				"          {T46 Type} = iif(isNull({T46 Type}),'N/A',{T46 Type}),",
				"          {T47 Type} = iif(isNull({T47 Type}),'N/A',{T47 Type}),",
				"          {T48 Type} = iif(isNull({T48 Type}),'N/A',{T48 Type}),",
				"          {T49 Type} = iif(isNull({T49 Type}),'N/A',{T49 Type}),",
				"          {T50 Type} = iif(isNull({T50 Type}),'N/A',{T50 Type})) ~> UpdateNullandAddDateRelatedColumns",
				"UpdateNullandAddDateRelatedColumns filter({Included Record}=='Y') ~> RemoveRecordsWithNoActivity",
				"CleanupJoinCollumns sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          Column_1 as string,",
				"          Column_2 as string,",
				"          Column_3 as string,",
				"          Column_4 as string,",
				"          Column_5 as string,",
				"          Column_6 as string,",
				"          Column_7 as string,",
				"          Column_8 as string,",
				"          Column_9 as string,",
				"          Column_10 as string,",
				"          Column_11 as string,",
				"          Column_12 as string,",
				"          Column_13 as string,",
				"          Column_14 as string,",
				"          Column_15 as string,",
				"          Column_16 as string,",
				"          Column_17 as string,",
				"          Column_18 as string,",
				"          Column_19 as string,",
				"          Column_20 as string,",
				"          Column_21 as string,",
				"          Column_22 as string,",
				"          Column_23 as string,",
				"          Column_24 as string,",
				"          Column_25 as string,",
				"          Column_26 as string,",
				"          Column_27 as string,",
				"          Column_28 as string",
				"     ),",
				"     partitionFileNames:['OtherCoreAnalysisTbl_P1.csv'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> sink1"
			]
		}
	}
}