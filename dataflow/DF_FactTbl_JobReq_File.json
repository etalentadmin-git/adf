{
	"name": "DF_FactTbl_JobReq_File",
	"properties": {
		"folder": {
			"name": "Client/Fact Tables"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Source_Template_Req",
						"type": "DatasetReference"
					},
					"name": "Requisitions"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "Source_FactTblFldr",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "FilterOutClientHeaderRowAndColumn"
				},
				{
					"name": "SelectFinal"
				},
				{
					"name": "AddClientInfo"
				},
				{
					"name": "ConvertNullsForKeyFields"
				},
				{
					"name": "RemoveNullReqIDRows"
				},
				{
					"name": "tagEvent"
				},
				{
					"name": "AddEventMonth"
				},
				{
					"name": "RemoveDupRowsandAddRowCount"
				},
				{
					"name": "ReplaceSpecCharHyphen"
				},
				{
					"name": "ReplaceSpecialCharApostrophe"
				},
				{
					"name": "ReplaceSpecialCharacterAccent"
				},
				{
					"name": "derivedColumn1"
				}
			],
			"scriptLines": [
				"parameters{",
				"     Flow_Client_Id as string,",
				"     Flow_Client_Dt as string",
				"}",
				"source(output(",
				"          {DO NOT USE THIS COLUMN.  DO NOT ALTER HEADER NAMES ON THIS ROW==>} as string,",
				"          {Event Year} as short,",
				"          {Event Quarter} as integer,",
				"          {Event Date} as date,",
				"          {Requisition ID} as string,",
				"          {Requisition Type} as string,",
				"          {Posting Date} as date,",
				"          {Requisition Status} as string,",
				"          {Number of Openings} as integer,",
				"          {Job Title} as string,",
				"          {Job Function} as string,",
				"          {Corporate Title} as string,",
				"          {Work Office Location} as string,",
				"          {Work Office City} as string,",
				"          {Work Office State} as string,",
				"          {Work Office Country} as string,",
				"          {Strategic Work Location Ind} as string,",
				"          {Business Group Level 1} as string,",
				"          {Business Group Level 2} as string,",
				"          {Business Group Level 3} as string,",
				"          {Business Group Level 4} as string,",
				"          {Hiring Manager Worker ID} as string,",
				"          {Primary Recruiter Worker ID} as string,",
				"          {Requisition Other (1)} as string,",
				"          {Requisition Other (2)} as string,",
				"          {Requisition Other (3)} as string,",
				"          {Requisition Other (4)} as string,",
				"          {Requisition Other (5)} as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> Requisitions",
				"Requisitions filter(isNull({DO NOT USE THIS COLUMN.  DO NOT ALTER HEADER NAMES ON THIS ROW==>})) ~> FilterOutClientHeaderRowAndColumn",
				"ConvertNullsForKeyFields select(mapColumn(",
				"          {Client ID},",
				"          {Client Engagement Date},",
				"          {Event Date},",
				"          EventMonth,",
				"          {Event Quarter},",
				"          {Event Year},",
				"          EventId,",
				"          Event,",
				"          {Requisition ID},",
				"          {Requisition Type},",
				"          {Posting Date},",
				"          {Requisition Status},",
				"          {Number of Openings},",
				"          {Job Title},",
				"          {Job Function},",
				"          {Corporate Title},",
				"          {Work Office Location},",
				"          {Work Office City},",
				"          {Work Office State},",
				"          {Work Office Country},",
				"          {Strategic Work Location Ind},",
				"          {Business Group Level 1},",
				"          {Business Group Level 2},",
				"          {Business Group Level 3},",
				"          {Business Group Level 4},",
				"          {Hiring Manager Worker ID},",
				"          {Primary Recruiter Worker ID},",
				"          {Requisition Other (1)},",
				"          {Requisition Other (2)},",
				"          {Requisition Other (3)},",
				"          {Requisition Other (4)},",
				"          {Requisition Other (5)}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SelectFinal",
				"derivedColumn1 derive({Client ID} = $Flow_Client_Id,",
				"          {Client Engagement Date} = $Flow_Client_Dt) ~> AddClientInfo",
				"AddEventMonth derive(Event = iif(isNull(Event),'N/A',Event),",
				"          {Requisition Type} = iif(isNull({Requisition Type}),'N/A',{Requisition Type}),",
				"          {Requisition Status} = iif(isNull({Requisition Status}),'N/A',{Requisition Status}),",
				"          {Corporate Title} = iif(isNull({Corporate Title}),'N/A',{Corporate Title}),",
				"          {Work Office Location} = iif(isNull({Work Office Location}),'N/A',{Work Office Location}),",
				"          {Work Office City} = iif(isNull({Work Office City}),'N/A',{Work Office City}),",
				"          {Work Office State} = iif(isNull({Work Office State}),'N/A',{Work Office State}),",
				"          {Work Office Country} = iif(isNull({Work Office Country}),'N/A',{Work Office Country}),",
				"          {Strategic Work Location Ind} = iif(isNull({Strategic Work Location Ind}),'N/A',{Strategic Work Location Ind}),",
				"          {Business Group Level 1} = iif(isNull({Business Group Level 1}),'N/A',{Business Group Level 1}),",
				"          {Business Group Level 2} = iif(isNull({Business Group Level 2}),'N/A',{Business Group Level 2}),",
				"          {Business Group Level 3} = iif(isNull({Business Group Level 3}),'N/A',{Business Group Level 3}),",
				"          {Business Group Level 4} = iif(isNull({Business Group Level 4}),'N/A',{Business Group Level 4})) ~> ConvertNullsForKeyFields",
				"FilterOutClientHeaderRowAndColumn filter(not(isNull({Event Date})) && not(isNull({Requisition ID}))) ~> RemoveNullReqIDRows",
				"RemoveNullReqIDRows derive(Event = 'Requisition',",
				"          EventId = 'REQ') ~> tagEvent",
				"AddClientInfo derive(EventMonth = month({Event Date}),",
				"          {Event Quarter} = iif(isNull({Event Quarter}),\r",
				"iif(between(month({Event Date}),1,3),1,\r",
				"iif(between(month({Event Date}),4,6),2,\r",
				"iif(between(month({Event Date}),7,9),3,\r",
				"iif(between(month({Event Date}),10,12),4,0)))),\r",
				"{Event Quarter})) ~> AddEventMonth",
				"SelectFinal aggregate(groupBy({Client ID},",
				"          {Client Engagement Date},",
				"          {Event Date},",
				"          EventMonth,",
				"          {Event Quarter},",
				"          {Event Year},",
				"          EventId,",
				"          Event,",
				"          {Requisition ID},",
				"          {Requisition Type},",
				"          {Posting Date},",
				"          {Requisition Status},",
				"          {Number of Openings},",
				"          {Job Title} = ERROR_FUNCTION(''),",
				"          {Job Function},",
				"          {Corporate Title},",
				"          {Work Office Location},",
				"          {Work Office City},",
				"          {Work Office State},",
				"          {Work Office Country},",
				"          {Strategic Work Location Ind},",
				"          {Business Group Level 1},",
				"          {Business Group Level 2},",
				"          {Business Group Level 3},",
				"          {Business Group Level 4},",
				"          {Hiring Manager Worker ID},",
				"          {Primary Recruiter Worker ID},",
				"          {Requisition Other (1)},",
				"          {Requisition Other (2)},",
				"          {Requisition Other (3)},",
				"          {Requisition Other (4)},",
				"          {Requisition Other (5)}),",
				"     RowCount = count({Requisition ID})) ~> RemoveDupRowsandAddRowCount",
				"tagEvent derive({Job Title} = replace({Job Title},\"–\",\"-\")) ~> ReplaceSpecCharHyphen",
				"ReplaceSpecCharHyphen derive({Job Title} = replace({Job Title},\"’\",\"-\")) ~> ReplaceSpecialCharApostrophe",
				"ReplaceSpecialCharApostrophe derive({Job Title} = replace({Job Title},\"ó\",\"o\")) ~> ReplaceSpecialCharacterAccent",
				"ReplaceSpecialCharacterAccent derive({Job Title} = replace({Job Title},\"�\",\"-\")) ~> derivedColumn1",
				"RemoveDupRowsandAddRowCount sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          Column_1 as string,",
				"          Column_2 as string,",
				"          Column_3 as string,",
				"          Column_4 as string,",
				"          Column_5 as string,",
				"          Column_6 as string,",
				"          Column_7 as string,",
				"          Column_8 as string,",
				"          Column_9 as string,",
				"          Column_10 as string,",
				"          Column_11 as string,",
				"          Column_12 as string,",
				"          Column_13 as string,",
				"          Column_14 as string,",
				"          Column_15 as string,",
				"          Column_16 as string,",
				"          Column_17 as string,",
				"          Column_18 as string,",
				"          Column_19 as string,",
				"          Column_20 as string,",
				"          Column_21 as string,",
				"          Column_22 as string,",
				"          Column_23 as string,",
				"          Column_24 as string,",
				"          Column_25 as string,",
				"          Column_26 as string,",
				"          Column_27 as string,",
				"          Column_28 as string",
				"     ),",
				"     partitionFileNames:['ReqTbl.csv'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> sink1"
			]
		}
	}
}