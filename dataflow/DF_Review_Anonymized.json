{
	"name": "DF_Review_Anonymized",
	"properties": {
		"folder": {
			"name": "Client/Audit Reports"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Source_Audit_Identifier",
						"type": "DatasetReference"
					},
					"name": "Identifiers"
				},
				{
					"dataset": {
						"referenceName": "Source_FactTbl_AllCoreData_File",
						"type": "DatasetReference"
					},
					"name": "CoreFactTblTemplate"
				},
				{
					"dataset": {
						"referenceName": "Source_FactTbl_JobReq_File",
						"type": "DatasetReference"
					},
					"name": "ReqFactTbl"
				},
				{
					"dataset": {
						"referenceName": "Source_FactTbl_OtherCore_File",
						"type": "DatasetReference"
					},
					"name": "OtherCoreTbl"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "Source_AuditFolder",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "selectBusLvl1"
				},
				{
					"name": "aggregate1"
				},
				{
					"name": "SelectUniqueBusLvl1"
				},
				{
					"name": "JoinIdentifiertoLevel1Business"
				},
				{
					"name": "derivedColumn1"
				},
				{
					"name": "derivedColumn2"
				},
				{
					"name": "derivedColumn3"
				},
				{
					"name": "select2"
				},
				{
					"name": "selectBusLvl2"
				},
				{
					"name": "aggregate2"
				},
				{
					"name": "derivedColumn4"
				},
				{
					"name": "selectUniqueBusLvl2"
				},
				{
					"name": "JoinIdentifiertoLevel2Business"
				},
				{
					"name": "derivedColumn5"
				},
				{
					"name": "select3"
				},
				{
					"name": "selectBusLvl3"
				},
				{
					"name": "aggregate3"
				},
				{
					"name": "derivedColumn6"
				},
				{
					"name": "selectUniqueBusLvl3"
				},
				{
					"name": "JoinIdentifiertoLevel3Business"
				},
				{
					"name": "derivedColumn7"
				},
				{
					"name": "select4"
				},
				{
					"name": "selectBusLvl4"
				},
				{
					"name": "aggregate4"
				},
				{
					"name": "derivedColumn8"
				},
				{
					"name": "selectUniqueBusLvl4"
				},
				{
					"name": "JoinIdentifiertoLevel4Business"
				},
				{
					"name": "derivedColumn9"
				},
				{
					"name": "select5"
				},
				{
					"name": "filterBusinessLvl3FlaggedY"
				},
				{
					"name": "filterBusinessLvl4FlaggedY"
				},
				{
					"name": "filterBusinessLvl2FlaggedY"
				},
				{
					"name": "filterBusinessLvl1FlaggedY"
				},
				{
					"name": "union1"
				},
				{
					"name": "selectJobTitle"
				},
				{
					"name": "aggregate5"
				},
				{
					"name": "derivedColumn10"
				},
				{
					"name": "selectUniqueJobTitle"
				},
				{
					"name": "JoinIdentifiertoJobTitle"
				},
				{
					"name": "derivedColumn11"
				},
				{
					"name": "select6"
				},
				{
					"name": "filterJobTitleFlaggedY"
				},
				{
					"name": "selectPrevJobTitle"
				},
				{
					"name": "aggregate6"
				},
				{
					"name": "derivedColumn12"
				},
				{
					"name": "selectUniquePrevJobTitle"
				},
				{
					"name": "JoinIdentifiertoPrevJobTitle"
				},
				{
					"name": "derivedColumn13"
				},
				{
					"name": "select7"
				},
				{
					"name": "filterPrevJobTitleFlaggedY"
				},
				{
					"name": "selectJobFamilyFunction"
				},
				{
					"name": "aggregate7"
				},
				{
					"name": "derivedColumn14"
				},
				{
					"name": "selectUniqueJobFamilyFunction"
				},
				{
					"name": "JoinIdentifiertoJobFamilyFunction"
				},
				{
					"name": "derivedColumn15"
				},
				{
					"name": "select8"
				},
				{
					"name": "filterJobFamilyFunctionFlaggedY"
				},
				{
					"name": "selectPrevJobFamilyFunction"
				},
				{
					"name": "aggregate8"
				},
				{
					"name": "derivedColumn16"
				},
				{
					"name": "selectUniquePrevJobFamilyFunction"
				},
				{
					"name": "JoinIdentifiertoPrevJobFamilyFunction"
				},
				{
					"name": "derivedColumn17"
				},
				{
					"name": "select9"
				},
				{
					"name": "filterPrevJobFamilyFunctionFlaggedY"
				},
				{
					"name": "selectReqJobTitle"
				},
				{
					"name": "aggregate9"
				},
				{
					"name": "derivedColumn18"
				},
				{
					"name": "selectUniqueReqJobTitle"
				},
				{
					"name": "selectReqBusLvl1"
				},
				{
					"name": "aggregate10"
				},
				{
					"name": "derivedColumn19"
				},
				{
					"name": "selectUniqueReqBusLvl1"
				},
				{
					"name": "selectReqBusLvl2"
				},
				{
					"name": "aggregate11"
				},
				{
					"name": "derivedColumn20"
				},
				{
					"name": "selectUniqueReqBusLvl2"
				},
				{
					"name": "selectReqBusLvl3"
				},
				{
					"name": "aggregate12"
				},
				{
					"name": "derivedColumn21"
				},
				{
					"name": "selectUniqueReqBusLvl3"
				},
				{
					"name": "selectReqBusLvl4"
				},
				{
					"name": "aggregate13"
				},
				{
					"name": "derivedColumn22"
				},
				{
					"name": "selectUniqueReqBusLvl4"
				},
				{
					"name": "JoinIdentifiertoReqJobTitle"
				},
				{
					"name": "derivedColumn23"
				},
				{
					"name": "select10"
				},
				{
					"name": "filterJobTitleReqFlaggedY"
				},
				{
					"name": "JoinIdentifiertoReqBusLvl1"
				},
				{
					"name": "derivedColumn24"
				},
				{
					"name": "select11"
				},
				{
					"name": "filterBusLvl1ReqFlaggedY"
				},
				{
					"name": "JoinIdentifiertoReqBusLvl2"
				},
				{
					"name": "derivedColumn25"
				},
				{
					"name": "select12"
				},
				{
					"name": "filterBusLvl2ReqFlaggedY"
				},
				{
					"name": "JoinIdentifiertoReqBusLvl3"
				},
				{
					"name": "derivedColumn26"
				},
				{
					"name": "select13"
				},
				{
					"name": "filterBusLvl3ReqFlaggedY"
				},
				{
					"name": "JoinIdentifiertoReqBusLvl4"
				},
				{
					"name": "derivedColumn27"
				},
				{
					"name": "select14"
				},
				{
					"name": "filterBusLvl4ReqFlaggedY"
				},
				{
					"name": "select15"
				},
				{
					"name": "selectOtherFactEventType"
				},
				{
					"name": "aggregate14"
				},
				{
					"name": "derivedColumn28"
				},
				{
					"name": "selectUniqueOtherFactEventType"
				},
				{
					"name": "selectOtherFactEventDesc"
				},
				{
					"name": "aggregate15"
				},
				{
					"name": "derivedColumn29"
				},
				{
					"name": "selectUniqueOtherFactEventDesc"
				},
				{
					"name": "selectOtherFactOtherChar1"
				},
				{
					"name": "aggregate16"
				},
				{
					"name": "derivedColumn30"
				},
				{
					"name": "selectUniqueOtherFactOtherChar1"
				},
				{
					"name": "selectOtherFactOtherChar2"
				},
				{
					"name": "aggregate17"
				},
				{
					"name": "derivedColumn31"
				},
				{
					"name": "selectUniqueOtherFactOtherChar2"
				},
				{
					"name": "JoinIdentifiertoUniqueOtherFactEventType"
				},
				{
					"name": "derivedColumn32"
				},
				{
					"name": "select16"
				},
				{
					"name": "filterOtherFactEventTypeFlaggedY"
				},
				{
					"name": "JoinIdentifiertoUniqueOtherFactEventDesc"
				},
				{
					"name": "derivedColumn33"
				},
				{
					"name": "select17"
				},
				{
					"name": "filterOtherFactEventDescFlaggedY"
				},
				{
					"name": "JoinIdentifiertoUniqueOtherCharVal1"
				},
				{
					"name": "derivedColumn34"
				},
				{
					"name": "select18"
				},
				{
					"name": "filterOtherFactOtherChar1FlaggedY"
				},
				{
					"name": "JoinIdentifiertoUniqueOtherCharVal2"
				},
				{
					"name": "derivedColumn35"
				},
				{
					"name": "select19"
				},
				{
					"name": "filterOtherFactOtherChar2FlaggedY"
				}
			],
			"scriptLines": [
				"source(output(",
				"          TagIdentifier as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> Identifiers",
				"source(output(",
				"          {Client ID} as string,",
				"          {Client Engagement Date} as string,",
				"          {Client Engagement Type} as string,",
				"          {Worker ID} as string,",
				"          {Event Date} as string,",
				"          EventMonth as string,",
				"          {Event Quarter} as string,",
				"          {Event Year} as string,",
				"          {Event Code} as string,",
				"          {Event Type} as string,",
				"          Event as string,",
				"          {Event Reason} as string,",
				"          {Worker Status} as string,",
				"          {Worker Type} as string,",
				"          {Job Title} as string,",
				"          {Job Family/Function} as string,",
				"          {Years in Job} as string,",
				"          {Previous Job Title} as string,",
				"          {Previous Job Family/Function} as string,",
				"          {Original Hire Date} as string,",
				"          {Current Hire Date} as string,",
				"          {Years of Service} as string,",
				"          {Years of Service Band} as string,",
				"          {Years of Service Sort ID} as string,",
				"          {Last Promo Date} as string,",
				"          {Rehire Indicator} as string,",
				"          {Corporate Title} as string,",
				"          {Previous Corporate Title} as string,",
				"          {Manager Indicator} as string,",
				"          {Direct Manager Worker ID} as string,",
				"          {Work Office Location} as string,",
				"          {Work City} as string,",
				"          {Work State} as string,",
				"          {Work Country} as string,",
				"          {Strategic Work Location Ind} as string,",
				"          {Legacy Organization} as string,",
				"          {Business Group Level 1} as string,",
				"          {Business Group Level 2} as string,",
				"          {Business Group Level 3} as string,",
				"          {Business Group Level 4} as string,",
				"          Race as string,",
				"          {Hispanic or Latino Origin} as string,",
				"          Gender as string,",
				"          {Veteran Ind} as string,",
				"          LGTBQ as string,",
				"          {Disability Ind} as string,",
				"          {Birth Year} as string,",
				"          {Generation Desc} as string,",
				"          {Generation Sort ID} as string,",
				"          EmpCount as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> CoreFactTblTemplate",
				"source(output(",
				"          {Client ID} as string,",
				"          {Client Engagement Date} as string,",
				"          {Client Engagement Type} as string,",
				"          {Event Date} as string,",
				"          EventMonth as string,",
				"          {Event Quarter} as string,",
				"          {Event Year} as string,",
				"          EventId as string,",
				"          Event as string,",
				"          {Requisition ID} as string,",
				"          {Requisition Type} as string,",
				"          {Posting Date} as string,",
				"          {Requisition Status} as string,",
				"          {Number of Openings} as string,",
				"          {Job Title} as string,",
				"          {Job Function} as string,",
				"          {Corporate Title} as string,",
				"          {Work Office Location} as string,",
				"          {Work Office City} as string,",
				"          {Work Office State} as string,",
				"          {Work Office Country} as string,",
				"          {Strategic Work Location Ind} as string,",
				"          {Business Group Level 1} as string,",
				"          {Business Group Level 2} as string,",
				"          {Business Group Level 3} as string,",
				"          {Business Group Level 4} as string,",
				"          {Hiring Manager Worker ID} as string,",
				"          {Primary Recruiter Worker ID} as string,",
				"          {Requisition Other (1)} as string,",
				"          {Requisition Other (2)} as string,",
				"          {Requisition Other (3)} as string,",
				"          {Requisition Other (4)} as string,",
				"          {Requisition Other (5)} as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> ReqFactTbl",
				"source(output(",
				"          {Client ID} as string,",
				"          {Client Engagement Date} as string,",
				"          {Worker ID} as string,",
				"          {Event Date} as string,",
				"          EventMonth as string,",
				"          {Event Quarter} as string,",
				"          {Event Year} as string,",
				"          {Event ID} as string,",
				"          Event as string,",
				"          {Event (Type)} as string,",
				"          {Event (Desc)} as string,",
				"          {Other (Char Value 1)} as string,",
				"          {Other (Char Value 2)} as string,",
				"          {Other (Num Value 1)} as string,",
				"          {Other (Num Value 2)} as string,",
				"          {Other (Date Value 1)} as string,",
				"          {Other (Date Value 2)} as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> OtherCoreTbl",
				"CoreFactTblTemplate select(mapColumn(",
				"          {Client ID},",
				"          {Client Engagement Date},",
				"          {Business Group Level 1}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectBusLvl1",
				"selectBusLvl1 aggregate(groupBy({Client ID},",
				"          {Client Engagement Date},",
				"          {Business Group Level 1}),",
				"     {Reccord Count} = count({Client ID})) ~> aggregate1",
				"derivedColumn2 select(mapColumn(",
				"          {Client ID},",
				"          {Client Engagement Date},",
				"          Table,",
				"          {Business Group Level 1},",
				"          IdentifierKey",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SelectUniqueBusLvl1",
				"derivedColumn1, SelectUniqueBusLvl1 join(derivedColumn1@IdentifierKey == SelectUniqueBusLvl1@IdentifierKey,",
				"     joinType:'outer',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> JoinIdentifiertoLevel1Business",
				"Identifiers derive(IdentifierKey = 1) ~> derivedColumn1",
				"aggregate1 derive(IdentifierKey = 1,",
				"          Table = 'Core') ~> derivedColumn2",
				"JoinIdentifiertoLevel1Business derive(IdentifierFlag = iif(instr({Business Group Level 1},' ' + TagIdentifier + ' ')>0, \"Y\", iif(instr({Business Group Level 1},TagIdentifier + ' ')==1, \"Y\", \"N\")),",
				"          Field = \"Business Group Level 1\") ~> derivedColumn3",
				"derivedColumn3 select(mapColumn(",
				"          {Client ID},",
				"          {Client Engagement Date},",
				"          Table,",
				"          Field,",
				"          {Field Value} = {Business Group Level 1},",
				"          TagIdentifier,",
				"          IdentifierFlag",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select2",
				"CoreFactTblTemplate select(mapColumn(",
				"          {Client ID},",
				"          {Client Engagement Date},",
				"          {Business Group Level 2}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectBusLvl2",
				"selectBusLvl2 aggregate(groupBy({Client ID},",
				"          {Client Engagement Date},",
				"          {Business Group Level 2}),",
				"     {Reccord Count} = count({Client ID})) ~> aggregate2",
				"aggregate2 derive(IdentifierKey = 1,",
				"          Table = 'Core') ~> derivedColumn4",
				"derivedColumn4 select(mapColumn(",
				"          {Client ID},",
				"          {Client Engagement Date},",
				"          Table,",
				"          {Business Group Level 2},",
				"          IdentifierKey",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectUniqueBusLvl2",
				"derivedColumn1, selectUniqueBusLvl2 join(derivedColumn1@IdentifierKey == selectUniqueBusLvl2@IdentifierKey,",
				"     joinType:'outer',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> JoinIdentifiertoLevel2Business",
				"JoinIdentifiertoLevel2Business derive(IdentifierFlag = iif(instr({Business Group Level 2},' ' + TagIdentifier + ' ')>0, \"Y\", iif(instr({Business Group Level 2},TagIdentifier + ' ')==1, \"Y\", \"N\")),",
				"          Field = 'Business Group Level 2') ~> derivedColumn5",
				"derivedColumn5 select(mapColumn(",
				"          {Client ID},",
				"          {Client Engagement Date},",
				"          Table,",
				"          Field,",
				"          {Field Value} = {Business Group Level 2},",
				"          TagIdentifier,",
				"          IdentifierFlag",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select3",
				"CoreFactTblTemplate select(mapColumn(",
				"          {Client ID},",
				"          {Client Engagement Date},",
				"          {Business Group Level 3}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectBusLvl3",
				"selectBusLvl3 aggregate(groupBy({Client ID},",
				"          {Client Engagement Date},",
				"          {Business Group Level 3}),",
				"     {Record Count} = count({Client ID})) ~> aggregate3",
				"aggregate3 derive(IdentifierKey = 1,",
				"          Table = 'Core') ~> derivedColumn6",
				"derivedColumn6 select(mapColumn(",
				"          {Client ID},",
				"          {Client Engagement Date},",
				"          Table,",
				"          {Business Group Level 3},",
				"          IdentifierKey",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectUniqueBusLvl3",
				"derivedColumn1, selectUniqueBusLvl3 join(derivedColumn1@IdentifierKey == selectUniqueBusLvl3@IdentifierKey,",
				"     joinType:'outer',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> JoinIdentifiertoLevel3Business",
				"JoinIdentifiertoLevel3Business derive(IdentifierFlag = iif(instr({Business Group Level 3},' ' + TagIdentifier + ' ')>0, \"Y\", iif(instr({Business Group Level 3},TagIdentifier + ' ')==1, \"Y\", \"N\")),",
				"          Field = 'Business Group Level 3') ~> derivedColumn7",
				"derivedColumn7 select(mapColumn(",
				"          {Client ID},",
				"          {Client Engagement Date},",
				"          Table,",
				"          Field,",
				"          {Field Value} = {Business Group Level 3},",
				"          TagIdentifier,",
				"          IdentifierFlag",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select4",
				"CoreFactTblTemplate select(mapColumn(",
				"          {Client ID},",
				"          {Client Engagement Date},",
				"          {Business Group Level 4}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectBusLvl4",
				"selectBusLvl4 aggregate(groupBy({Client ID},",
				"          {Client Engagement Date},",
				"          {Business Group Level 4}),",
				"     {Record Count} = count({Client ID})) ~> aggregate4",
				"aggregate4 derive(IdentifierKey = 1,",
				"          Table = 'Core') ~> derivedColumn8",
				"derivedColumn8 select(mapColumn(",
				"          {Client ID},",
				"          {Client Engagement Date},",
				"          Table,",
				"          {Business Group Level 4},",
				"          IdentifierKey",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectUniqueBusLvl4",
				"derivedColumn1, selectUniqueBusLvl4 join(derivedColumn1@IdentifierKey == selectUniqueBusLvl4@IdentifierKey,",
				"     joinType:'outer',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> JoinIdentifiertoLevel4Business",
				"JoinIdentifiertoLevel4Business derive(IdentifierFlag = iif(instr({Business Group Level 4},' ' + TagIdentifier + ' ')>0, \"Y\", iif(instr({Business Group Level 4},TagIdentifier + ' ')==1, \"Y\", \"N\")),",
				"          Field = 'Business Group Level 4') ~> derivedColumn9",
				"derivedColumn9 select(mapColumn(",
				"          {Client ID},",
				"          {Client Engagement Date},",
				"          Table,",
				"          Field,",
				"          {Field Value} = {Business Group Level 4},",
				"          TagIdentifier,",
				"          IdentifierFlag",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select5",
				"select4 filter(IdentifierFlag=='Y') ~> filterBusinessLvl3FlaggedY",
				"select5 filter(IdentifierFlag=='Y') ~> filterBusinessLvl4FlaggedY",
				"select3 filter(IdentifierFlag=='Y') ~> filterBusinessLvl2FlaggedY",
				"select2 filter(IdentifierFlag=='Y') ~> filterBusinessLvl1FlaggedY",
				"filterBusinessLvl1FlaggedY, filterBusinessLvl2FlaggedY, filterBusinessLvl3FlaggedY, filterBusinessLvl4FlaggedY, filterJobTitleFlaggedY, filterPrevJobTitleFlaggedY, filterJobFamilyFunctionFlaggedY, filterPrevJobFamilyFunctionFlaggedY, filterJobTitleReqFlaggedY, filterBusLvl1ReqFlaggedY, filterBusLvl2ReqFlaggedY, filterBusLvl3ReqFlaggedY, filterBusLvl4ReqFlaggedY, filterOtherFactEventTypeFlaggedY, filterOtherFactEventDescFlaggedY, filterOtherFactOtherChar1FlaggedY, filterOtherFactOtherChar2FlaggedY union(byName: true)~> union1",
				"CoreFactTblTemplate select(mapColumn(",
				"          {Client ID},",
				"          {Client Engagement Date},",
				"          {Job Title}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectJobTitle",
				"selectJobTitle aggregate(groupBy({Client ID},",
				"          {Client Engagement Date},",
				"          {Job Title}),",
				"     {Record Count} = count({Client ID})) ~> aggregate5",
				"aggregate5 derive(IdentifierKey = 1,",
				"          Table = 'Core') ~> derivedColumn10",
				"derivedColumn10 select(mapColumn(",
				"          {Client ID},",
				"          {Client Engagement Date},",
				"          Table,",
				"          {Job Title},",
				"          IdentifierKey",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectUniqueJobTitle",
				"derivedColumn1, selectUniqueJobTitle join(derivedColumn1@IdentifierKey == selectUniqueJobTitle@IdentifierKey,",
				"     joinType:'outer',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> JoinIdentifiertoJobTitle",
				"JoinIdentifiertoJobTitle derive(IdentifierFlag = iif(instr({Job Title},' ' + TagIdentifier + ' ')>0, \"Y\", iif(instr({Job Title},TagIdentifier + ' ')==1, \"Y\", \"N\")),",
				"          Field = 'Job Title') ~> derivedColumn11",
				"derivedColumn11 select(mapColumn(",
				"          {Client ID},",
				"          {Client Engagement Date},",
				"          Table,",
				"          Field,",
				"          {Field Value} = {Job Title},",
				"          TagIdentifier,",
				"          IdentifierFlag",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select6",
				"select6 filter(IdentifierFlag=='Y') ~> filterJobTitleFlaggedY",
				"CoreFactTblTemplate select(mapColumn(",
				"          {Client ID},",
				"          {Client Engagement Date},",
				"          {Previous Job Title}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectPrevJobTitle",
				"selectPrevJobTitle aggregate(groupBy({Client ID},",
				"          {Client Engagement Date},",
				"          {Previous Job Title}),",
				"     {Record Count} = count({Client ID})) ~> aggregate6",
				"aggregate6 derive(IdentifierKey = 1,",
				"          Table = 'Core') ~> derivedColumn12",
				"derivedColumn12 select(mapColumn(",
				"          {Client ID},",
				"          {Client Engagement Date},",
				"          Table,",
				"          {Previous Job Title},",
				"          IdentifierKey",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectUniquePrevJobTitle",
				"derivedColumn1, selectUniquePrevJobTitle join(derivedColumn1@IdentifierKey == selectUniquePrevJobTitle@IdentifierKey,",
				"     joinType:'outer',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> JoinIdentifiertoPrevJobTitle",
				"JoinIdentifiertoPrevJobTitle derive(IdentifierFlag = iif(instr({Previous Job Title},' ' + TagIdentifier + ' ')>0, \"Y\", iif(instr({Previous Job Title},TagIdentifier + ' ')==1, \"Y\", \"N\")),",
				"          Field = 'Prev Job Title') ~> derivedColumn13",
				"derivedColumn13 select(mapColumn(",
				"          {Client ID},",
				"          {Client Engagement Date},",
				"          Table,",
				"          Field,",
				"          {Field Value} = {Previous Job Title},",
				"          TagIdentifier,",
				"          IdentifierFlag",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select7",
				"select7 filter(IdentifierFlag=='Y') ~> filterPrevJobTitleFlaggedY",
				"CoreFactTblTemplate select(mapColumn(",
				"          {Client ID},",
				"          {Client Engagement Date},",
				"          {Job Family/Function}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectJobFamilyFunction",
				"selectJobFamilyFunction aggregate(groupBy({Client ID},",
				"          {Client Engagement Date},",
				"          {Job Family/Function}),",
				"     {Record Count} = count({Client ID})) ~> aggregate7",
				"aggregate7 derive(IdentifierKey = 1,",
				"          Table = 'Core') ~> derivedColumn14",
				"derivedColumn14 select(mapColumn(",
				"          {Client ID},",
				"          {Client Engagement Date},",
				"          Table,",
				"          {Job Family/Function},",
				"          IdentifierKey",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectUniqueJobFamilyFunction",
				"derivedColumn1, selectUniqueJobFamilyFunction join(derivedColumn1@IdentifierKey == selectUniqueJobFamilyFunction@IdentifierKey,",
				"     joinType:'outer',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> JoinIdentifiertoJobFamilyFunction",
				"JoinIdentifiertoJobFamilyFunction derive(IdentifierFlag = iif(instr({Job Family/Function},' ' + TagIdentifier + ' ')>0, \"Y\", iif(instr({Job Family/Function},TagIdentifier + ' ')==1, \"Y\", \"N\")),",
				"          Field = 'Job Family/Function') ~> derivedColumn15",
				"derivedColumn15 select(mapColumn(",
				"          {Client ID},",
				"          {Client Engagement Date},",
				"          Table,",
				"          Field,",
				"          {Field Value} = {Job Family/Function},",
				"          TagIdentifier,",
				"          IdentifierFlag",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select8",
				"select8 filter(IdentifierFlag=='Y') ~> filterJobFamilyFunctionFlaggedY",
				"CoreFactTblTemplate select(mapColumn(",
				"          {Client ID},",
				"          {Client Engagement Date},",
				"          {Previous Job Family/Function}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectPrevJobFamilyFunction",
				"selectPrevJobFamilyFunction aggregate(groupBy({Client ID},",
				"          {Client Engagement Date},",
				"          {Previous Job Family/Function}),",
				"     {Record Count} = count({Client ID})) ~> aggregate8",
				"aggregate8 derive(IdentifierKey = 1,",
				"          Table = 'Core') ~> derivedColumn16",
				"derivedColumn16 select(mapColumn(",
				"          {Client ID},",
				"          {Client Engagement Date},",
				"          Table,",
				"          {Previous Job Family/Function},",
				"          IdentifierKey",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectUniquePrevJobFamilyFunction",
				"derivedColumn1, selectUniquePrevJobFamilyFunction join(derivedColumn1@IdentifierKey == selectUniquePrevJobFamilyFunction@IdentifierKey,",
				"     joinType:'outer',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> JoinIdentifiertoPrevJobFamilyFunction",
				"JoinIdentifiertoPrevJobFamilyFunction derive(IdentifierFlag = iif(instr({Previous Job Family/Function},' ' + TagIdentifier + ' ')>0, \"Y\", iif(instr({Previous Job Family/Function},TagIdentifier + ' ')==1, \"Y\", \"N\")),",
				"          Field = 'Prev Job Family/Function') ~> derivedColumn17",
				"derivedColumn17 select(mapColumn(",
				"          {Client ID},",
				"          {Client Engagement Date},",
				"          Table,",
				"          Field,",
				"          {Field Value} = {Previous Job Family/Function},",
				"          TagIdentifier,",
				"          IdentifierFlag",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select9",
				"select9 filter(IdentifierFlag=='Y') ~> filterPrevJobFamilyFunctionFlaggedY",
				"ReqFactTbl select(mapColumn(",
				"          {Client ID},",
				"          {Client Engagement Date},",
				"          {Job Title}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectReqJobTitle",
				"selectReqJobTitle aggregate(groupBy({Client ID},",
				"          {Client Engagement Date},",
				"          {Job Title}),",
				"     {Record Count} = count({Client ID})) ~> aggregate9",
				"aggregate9 derive(IdentifierKey = 1,",
				"          Table = 'Requisitions') ~> derivedColumn18",
				"derivedColumn18 select(mapColumn(",
				"          {Client ID},",
				"          {Client Engagement Date},",
				"          Table,",
				"          {Job Title},",
				"          IdentifierKey",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectUniqueReqJobTitle",
				"ReqFactTbl select(mapColumn(",
				"          {Client ID},",
				"          {Client Engagement Date},",
				"          {Business Group Level 1}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectReqBusLvl1",
				"selectReqBusLvl1 aggregate(groupBy({Client ID},",
				"          {Client Engagement Date},",
				"          {Business Group Level 1}),",
				"     {Record Count} = count({Client ID})) ~> aggregate10",
				"aggregate10 derive(IdentifierKey = 1,",
				"          Table = 'Requisitions') ~> derivedColumn19",
				"derivedColumn19 select(mapColumn(",
				"          {Client ID},",
				"          {Client Engagement Date},",
				"          Table,",
				"          {Business Group Level 1},",
				"          IdentifierKey",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectUniqueReqBusLvl1",
				"ReqFactTbl select(mapColumn(",
				"          {Client ID},",
				"          {Client Engagement Date},",
				"          {Business Group Level 2}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectReqBusLvl2",
				"selectReqBusLvl2 aggregate(groupBy({Client ID},",
				"          {Client Engagement Date},",
				"          {Business Group Level 2}),",
				"     {Record Count} = count({Client ID})) ~> aggregate11",
				"aggregate11 derive(IdentifierKey = 1,",
				"          Table = 'Requisitions') ~> derivedColumn20",
				"derivedColumn20 select(mapColumn(",
				"          {Client ID},",
				"          {Client Engagement Date},",
				"          Table,",
				"          {Business Group Level 2},",
				"          IdentifierKey",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectUniqueReqBusLvl2",
				"ReqFactTbl select(mapColumn(",
				"          {Client ID},",
				"          {Client Engagement Date},",
				"          {Business Group Level 3}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectReqBusLvl3",
				"selectReqBusLvl3 aggregate(groupBy({Client ID},",
				"          {Client Engagement Date},",
				"          {Business Group Level 3}),",
				"     {Record Count} = count({Client ID})) ~> aggregate12",
				"aggregate12 derive(IdentifierKey = 1,",
				"          Table = 'Requisitions') ~> derivedColumn21",
				"derivedColumn21 select(mapColumn(",
				"          {Client ID},",
				"          {Client Engagement Date},",
				"          Table,",
				"          {Business Group Level 3},",
				"          IdentifierKey",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectUniqueReqBusLvl3",
				"ReqFactTbl select(mapColumn(",
				"          {Client ID},",
				"          {Client Engagement Date},",
				"          {Business Group Level 4}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectReqBusLvl4",
				"selectReqBusLvl4 aggregate(groupBy({Client ID},",
				"          {Client Engagement Date},",
				"          {Business Group Level 4}),",
				"     {Record Count} = count({Client ID})) ~> aggregate13",
				"aggregate13 derive(IdentifierKey = 1,",
				"          Table = 'Requisitions') ~> derivedColumn22",
				"derivedColumn22 select(mapColumn(",
				"          {Client ID},",
				"          {Client Engagement Date},",
				"          Table,",
				"          {Business Group Level 4},",
				"          IdentifierKey",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectUniqueReqBusLvl4",
				"derivedColumn1, selectUniqueReqJobTitle join(derivedColumn1@IdentifierKey == selectUniqueReqJobTitle@IdentifierKey,",
				"     joinType:'outer',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> JoinIdentifiertoReqJobTitle",
				"JoinIdentifiertoReqJobTitle derive(IdentifierFlag = iif(instr({Job Title},' ' + TagIdentifier + ' ')>0, \"Y\", iif(instr({Job Title},TagIdentifier + ' ')==1, \"Y\", \"N\")),",
				"          Field = 'Job Title') ~> derivedColumn23",
				"derivedColumn23 select(mapColumn(",
				"          {Client ID},",
				"          {Client Engagement Date},",
				"          Table,",
				"          Field,",
				"          {Field Value} = {Job Title},",
				"          TagIdentifier,",
				"          IdentifierFlag",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select10",
				"select10 filter(IdentifierFlag=='Y') ~> filterJobTitleReqFlaggedY",
				"derivedColumn1, selectUniqueReqBusLvl1 join(derivedColumn1@IdentifierKey == selectUniqueReqBusLvl1@IdentifierKey,",
				"     joinType:'outer',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> JoinIdentifiertoReqBusLvl1",
				"JoinIdentifiertoReqBusLvl1 derive(IdentifierFlag = iif(instr({Business Group Level 1},' ' + TagIdentifier + ' ')>0, \"Y\", iif(instr({Business Group Level 1},TagIdentifier + ' ')==1, \"Y\", \"N\")),",
				"          Field = \"Business Group Level 1\") ~> derivedColumn24",
				"derivedColumn24 select(mapColumn(",
				"          {Client ID},",
				"          {Client Engagement Date},",
				"          Table,",
				"          Field,",
				"          {Field Value} = {Business Group Level 1},",
				"          TagIdentifier,",
				"          IdentifierFlag",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select11",
				"select11 filter(IdentifierFlag=='Y') ~> filterBusLvl1ReqFlaggedY",
				"derivedColumn1, selectUniqueReqBusLvl2 join(derivedColumn1@IdentifierKey == selectUniqueReqBusLvl2@IdentifierKey,",
				"     joinType:'outer',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> JoinIdentifiertoReqBusLvl2",
				"JoinIdentifiertoReqBusLvl2 derive(IdentifierFlag = iif(instr({Business Group Level 2},' ' + TagIdentifier + ' ')>0, \"Y\", iif(instr({Business Group Level 2},TagIdentifier + ' ')==1, \"Y\", \"N\")),",
				"          Field = \"Business Group Level 2\") ~> derivedColumn25",
				"derivedColumn25 select(mapColumn(",
				"          {Client ID},",
				"          {Client Engagement Date},",
				"          Table,",
				"          Field,",
				"          {Field Value} = {Business Group Level 2},",
				"          TagIdentifier,",
				"          IdentifierFlag",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select12",
				"select12 filter(IdentifierFlag=='Y') ~> filterBusLvl2ReqFlaggedY",
				"derivedColumn1, selectUniqueReqBusLvl3 join(derivedColumn1@IdentifierKey == selectUniqueReqBusLvl3@IdentifierKey,",
				"     joinType:'outer',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> JoinIdentifiertoReqBusLvl3",
				"JoinIdentifiertoReqBusLvl3 derive(IdentifierFlag = iif(instr({Business Group Level 3},' ' + TagIdentifier + ' ')>0, \"Y\", iif(instr({Business Group Level 3},TagIdentifier + ' ')==1, \"Y\", \"N\")),",
				"          Field = \"Business Group Level 3\") ~> derivedColumn26",
				"derivedColumn26 select(mapColumn(",
				"          {Client ID},",
				"          {Client Engagement Date},",
				"          Table,",
				"          Field,",
				"          {Field Value} = {Business Group Level 3},",
				"          TagIdentifier,",
				"          IdentifierFlag",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select13",
				"select13 filter(IdentifierFlag=='Y') ~> filterBusLvl3ReqFlaggedY",
				"derivedColumn1, selectUniqueReqBusLvl4 join(derivedColumn1@IdentifierKey == selectUniqueReqBusLvl4@IdentifierKey,",
				"     joinType:'outer',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> JoinIdentifiertoReqBusLvl4",
				"JoinIdentifiertoReqBusLvl4 derive(IdentifierFlag = iif(instr({Business Group Level 4},' ' + TagIdentifier + ' ')>0, \"Y\", iif(instr({Business Group Level 4},TagIdentifier + ' ')==1, \"Y\", \"N\")),",
				"          Field = \"Business Group Level 4\") ~> derivedColumn27",
				"derivedColumn27 select(mapColumn(",
				"          {Client ID},",
				"          {Client Engagement Date},",
				"          Table,",
				"          Field,",
				"          {Field Value} = {Business Group Level 4},",
				"          TagIdentifier,",
				"          IdentifierFlag",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select14",
				"select14 filter(IdentifierFlag=='Y') ~> filterBusLvl4ReqFlaggedY",
				"union1 select(mapColumn(",
				"          {Client ID},",
				"          {Client Engagement Date},",
				"          Table,",
				"          Field,",
				"          {Field Value},",
				"          TagIdentifier",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select15",
				"OtherCoreTbl select(mapColumn(",
				"          {Client ID},",
				"          {Client Engagement Date},",
				"          {Event (Type)}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectOtherFactEventType",
				"selectOtherFactEventType aggregate(groupBy({Client ID},",
				"          {Client Engagement Date},",
				"          {Event (Type)}),",
				"     {Record Count} = count({Client ID})) ~> aggregate14",
				"aggregate14 derive(IdentifierKey = 1,",
				"          Table = 'Other Core') ~> derivedColumn28",
				"derivedColumn28 select(mapColumn(",
				"          {Client ID},",
				"          {Client Engagement Date},",
				"          Table,",
				"          {Event (Type)},",
				"          IdentifierKey",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectUniqueOtherFactEventType",
				"OtherCoreTbl select(mapColumn(",
				"          {Client ID},",
				"          {Client Engagement Date},",
				"          {Event (Desc)}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectOtherFactEventDesc",
				"selectOtherFactEventDesc aggregate(groupBy({Client ID},",
				"          {Client Engagement Date},",
				"          {Event (Desc)}),",
				"     {Record Count} = count({Client ID})) ~> aggregate15",
				"aggregate15 derive(IdentifierKey = 1,",
				"          Table = 'Other Core') ~> derivedColumn29",
				"derivedColumn29 select(mapColumn(",
				"          {Client ID},",
				"          {Client Engagement Date},",
				"          Table,",
				"          {Event (Desc)},",
				"          IdentifierKey",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectUniqueOtherFactEventDesc",
				"OtherCoreTbl select(mapColumn(",
				"          {Client ID},",
				"          {Client Engagement Date},",
				"          {Other (Char Value 1)}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectOtherFactOtherChar1",
				"selectOtherFactOtherChar1 aggregate(groupBy({Client ID},",
				"          {Client Engagement Date},",
				"          {Other (Char Value 1)}),",
				"     {Record Count} = count({Client ID})) ~> aggregate16",
				"aggregate16 derive(IdentifierKey = 1,",
				"          Table = 'Other Core') ~> derivedColumn30",
				"derivedColumn30 select(mapColumn(",
				"          {Client ID},",
				"          {Client Engagement Date},",
				"          Table,",
				"          {Other (Char Value 1)},",
				"          IdentifierKey",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectUniqueOtherFactOtherChar1",
				"OtherCoreTbl select(mapColumn(",
				"          {Client ID},",
				"          {Client Engagement Date},",
				"          {Other (Char Value 2)}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectOtherFactOtherChar2",
				"selectOtherFactOtherChar2 aggregate(groupBy({Client ID},",
				"          {Client Engagement Date},",
				"          {Other (Char Value 2)}),",
				"     {Record Count} = count({Client ID})) ~> aggregate17",
				"aggregate17 derive(IdentifierKey = 1,",
				"          Table = 'Other Core') ~> derivedColumn31",
				"derivedColumn31 select(mapColumn(",
				"          {Client ID},",
				"          {Client Engagement Date},",
				"          Table,",
				"          {Other (Char Value 2)},",
				"          IdentifierKey",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectUniqueOtherFactOtherChar2",
				"derivedColumn1, selectUniqueOtherFactEventType join(derivedColumn1@IdentifierKey == selectUniqueOtherFactEventType@IdentifierKey,",
				"     joinType:'outer',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> JoinIdentifiertoUniqueOtherFactEventType",
				"JoinIdentifiertoUniqueOtherFactEventType derive(IdentifierFlag = iif(instr({Event (Type)},' ' + TagIdentifier + ' ')>0, \"Y\", iif(instr({Event (Type)},TagIdentifier + ' ')==1, \"Y\", \"N\")),",
				"          Field = \"Event Type\") ~> derivedColumn32",
				"derivedColumn32 select(mapColumn(",
				"          {Client ID},",
				"          {Client Engagement Date},",
				"          Table,",
				"          Field,",
				"          {Field Value} = {Event (Type)},",
				"          TagIdentifier,",
				"          IdentifierFlag",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select16",
				"select16 filter(IdentifierFlag=='Y') ~> filterOtherFactEventTypeFlaggedY",
				"derivedColumn1, selectUniqueOtherFactEventDesc join(derivedColumn1@IdentifierKey == selectUniqueOtherFactEventDesc@IdentifierKey,",
				"     joinType:'outer',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> JoinIdentifiertoUniqueOtherFactEventDesc",
				"JoinIdentifiertoUniqueOtherFactEventDesc derive(IdentifierFlag = iif(instr({Event (Desc)},' ' + TagIdentifier + ' ')>0, \"Y\", iif(instr({Event (Desc)},TagIdentifier + ' ')==1, \"Y\", \"N\")),",
				"          Field = \"Event Desc\") ~> derivedColumn33",
				"derivedColumn33 select(mapColumn(",
				"          {Client ID},",
				"          {Client Engagement Date},",
				"          Table,",
				"          Field,",
				"          {Field Value} = {Event (Desc)},",
				"          TagIdentifier,",
				"          IdentifierFlag",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select17",
				"select17 filter(IdentifierFlag=='Y') ~> filterOtherFactEventDescFlaggedY",
				"derivedColumn1, selectUniqueOtherFactOtherChar1 join(derivedColumn1@IdentifierKey == selectUniqueOtherFactOtherChar1@IdentifierKey,",
				"     joinType:'outer',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> JoinIdentifiertoUniqueOtherCharVal1",
				"JoinIdentifiertoUniqueOtherCharVal1 derive(IdentifierFlag = iif(instr({Other (Char Value 1)},' ' + TagIdentifier + ' ')>0, \"Y\", iif(instr({Other (Char Value 1)},TagIdentifier + ' ')==1, \"Y\", \"N\")),",
				"          Field = \"Char Val 1\") ~> derivedColumn34",
				"derivedColumn34 select(mapColumn(",
				"          {Client ID},",
				"          {Client Engagement Date},",
				"          Table,",
				"          Field,",
				"          {Field Value} = {Other (Char Value 1)},",
				"          TagIdentifier,",
				"          IdentifierFlag",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select18",
				"select18 filter(IdentifierFlag=='Y') ~> filterOtherFactOtherChar1FlaggedY",
				"derivedColumn1, selectUniqueOtherFactOtherChar2 join(derivedColumn1@IdentifierKey == selectUniqueOtherFactOtherChar2@IdentifierKey,",
				"     joinType:'outer',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> JoinIdentifiertoUniqueOtherCharVal2",
				"JoinIdentifiertoUniqueOtherCharVal2 derive(IdentifierFlag = iif(instr({Other (Char Value 2)},' ' + TagIdentifier + ' ')>0, \"Y\", iif(instr({Other (Char Value 2)},TagIdentifier + ' ')==1, \"Y\", \"N\")),",
				"          Field = \"Char Val 2\") ~> derivedColumn35",
				"derivedColumn35 select(mapColumn(",
				"          {Client ID},",
				"          {Client Engagement Date},",
				"          Table,",
				"          Field,",
				"          {Field Value} = {Other (Char Value 2)},",
				"          TagIdentifier,",
				"          IdentifierFlag",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select19",
				"select19 filter(IdentifierFlag=='Y') ~> filterOtherFactOtherChar2FlaggedY",
				"select15 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['AnonymizationReview.csv'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> sink1"
			]
		}
	}
}