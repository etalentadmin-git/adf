{
	"name": "DF_Review_Anonymized",
	"properties": {
		"folder": {
			"name": "Client/Audit Reports"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Source_Audit_Identifier",
						"type": "DatasetReference"
					},
					"name": "Identifiers"
				},
				{
					"dataset": {
						"referenceName": "Source_FactTbl_AllCoreData_File",
						"type": "DatasetReference"
					},
					"name": "CoreFactTblTemplate"
				}
			],
			"sinks": [],
			"transformations": [
				{
					"name": "selectBusLvl1"
				},
				{
					"name": "aggregate1"
				},
				{
					"name": "SelectUniqueLvl1"
				},
				{
					"name": "JoinIdentifiertoLevel1Business"
				},
				{
					"name": "derivedColumn1"
				},
				{
					"name": "derivedColumn2"
				},
				{
					"name": "derivedColumn3"
				},
				{
					"name": "select2"
				},
				{
					"name": "selectBusLvl2"
				},
				{
					"name": "aggregate2"
				},
				{
					"name": "derivedColumn4"
				},
				{
					"name": "selectUniqueLvl2"
				},
				{
					"name": "JoinIdentifiertoLevel2Business"
				},
				{
					"name": "derivedColumn5"
				},
				{
					"name": "select3"
				},
				{
					"name": "selectBusLvl3"
				},
				{
					"name": "aggregate3"
				},
				{
					"name": "derivedColumn6"
				},
				{
					"name": "selectUniqueLvl3"
				},
				{
					"name": "JoinIdentifiertoLevel3Business"
				},
				{
					"name": "derivedColumn7"
				},
				{
					"name": "select4"
				},
				{
					"name": "selectBusLvl4"
				},
				{
					"name": "aggregate4"
				},
				{
					"name": "derivedColumn8"
				},
				{
					"name": "selectUniqueLvl4"
				},
				{
					"name": "JoinIdentifiertoLevel4Business"
				},
				{
					"name": "derivedColumn9"
				},
				{
					"name": "select5"
				},
				{
					"name": "filterBusinessLvl3FlaggedY"
				},
				{
					"name": "filterBusinessLvl4FlaggedY"
				},
				{
					"name": "filterBusinessLvl2FlaggedY"
				},
				{
					"name": "filterBusinessLvl1FlaggedY"
				},
				{
					"name": "union1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          TagIdentifier as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> Identifiers",
				"source(output(",
				"          {Client ID} as string,",
				"          {Client Engagement Date} as string,",
				"          {Client Engagement Type} as string,",
				"          {Worker ID} as string,",
				"          {Event Date} as string,",
				"          EventMonth as string,",
				"          {Event Quarter} as string,",
				"          {Event Year} as string,",
				"          {Event Code} as string,",
				"          {Event Type} as string,",
				"          Event as string,",
				"          {Event Reason} as string,",
				"          {Worker Status} as string,",
				"          {Worker Type} as string,",
				"          {Job Title} as string,",
				"          {Job Family/Function} as string,",
				"          {Years in Job} as string,",
				"          {Previous Job Title} as string,",
				"          {Previous Job Family/Function} as string,",
				"          {Original Hire Date} as string,",
				"          {Current Hire Date} as string,",
				"          {Years of Service} as string,",
				"          {Years of Service Band} as string,",
				"          {Years of Service Sort ID} as string,",
				"          {Last Promo Date} as string,",
				"          {Rehire Indicator} as string,",
				"          {Corporate Title} as string,",
				"          {Previous Corporate Title} as string,",
				"          {Manager Indicator} as string,",
				"          {Direct Manager Worker ID} as string,",
				"          {Work Office Location} as string,",
				"          {Work City} as string,",
				"          {Work State} as string,",
				"          {Work Country} as string,",
				"          {Strategic Work Location Ind} as string,",
				"          {Legacy Organization} as string,",
				"          {Business Group Level 1} as string,",
				"          {Business Group Level 2} as string,",
				"          {Business Group Level 3} as string,",
				"          {Business Group Level 4} as string,",
				"          Race as string,",
				"          {Hispanic or Latino Origin} as string,",
				"          Gender as string,",
				"          {Veteran Ind} as string,",
				"          LGTBQ as string,",
				"          {Disability Ind} as string,",
				"          {Birth Year} as string,",
				"          {Generation Desc} as string,",
				"          {Generation Sort ID} as string,",
				"          EmpCount as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> CoreFactTblTemplate",
				"CoreFactTblTemplate select(mapColumn(",
				"          {Client ID},",
				"          {Client Engagement Date},",
				"          {Business Group Level 1}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectBusLvl1",
				"selectBusLvl1 aggregate(groupBy({Client ID},",
				"          {Client Engagement Date},",
				"          {Business Group Level 1}),",
				"     {Reccord Count} = count({Client ID})) ~> aggregate1",
				"derivedColumn2 select(mapColumn(",
				"          {Client ID},",
				"          {Client Engagement Date},",
				"          {Business Group Level 1},",
				"          IdentifierKey",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SelectUniqueLvl1",
				"derivedColumn1, SelectUniqueLvl1 join(derivedColumn1@IdentifierKey == SelectUniqueLvl1@IdentifierKey,",
				"     joinType:'outer',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> JoinIdentifiertoLevel1Business",
				"Identifiers derive(IdentifierKey = 1) ~> derivedColumn1",
				"aggregate1 derive(IdentifierKey = 1) ~> derivedColumn2",
				"JoinIdentifiertoLevel1Business derive(IdentifierFlag = iif(instr({Business Group Level 1},' ' + TagIdentifier + ' ')>0, \"Y\", \"N\"),",
				"          Field = \"Business Group Level 1\") ~> derivedColumn3",
				"derivedColumn3 select(mapColumn(",
				"          {Client ID},",
				"          {Client Engagement Date},",
				"          TagIdentifier,",
				"          {Field Value} = {Business Group Level 1},",
				"          IdentifierFlag",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select2",
				"CoreFactTblTemplate select(mapColumn(",
				"          {Client ID},",
				"          {Client Engagement Date},",
				"          {Business Group Level 2}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectBusLvl2",
				"selectBusLvl2 aggregate(groupBy({Client ID},",
				"          {Client Engagement Date},",
				"          {Business Group Level 2}),",
				"     {Reccord Count} = count({Client ID})) ~> aggregate2",
				"aggregate2 derive(IdentifierKey = 1) ~> derivedColumn4",
				"derivedColumn4 select(mapColumn(",
				"          {Client ID},",
				"          {Client Engagement Date},",
				"          {Business Group Level 2},",
				"          IdentifierKey",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectUniqueLvl2",
				"derivedColumn1, selectUniqueLvl2 join(derivedColumn1@IdentifierKey == selectUniqueLvl2@IdentifierKey,",
				"     joinType:'outer',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> JoinIdentifiertoLevel2Business",
				"JoinIdentifiertoLevel2Business derive(IdentifierFlag = iif(instr({Business Group Level 2},' ' + TagIdentifier + ' ')>0, \"Y\", \"N\"),",
				"          Field = 'Business Group Level 2') ~> derivedColumn5",
				"derivedColumn5 select(mapColumn(",
				"          {Client ID},",
				"          {Client Engagement Date},",
				"          TagIdentifier,",
				"          {Field Value} = {Business Group Level 2},",
				"          IdentifierFlag",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select3",
				"CoreFactTblTemplate select(mapColumn(",
				"          {Client ID},",
				"          {Client Engagement Date},",
				"          {Business Group Level 3}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectBusLvl3",
				"selectBusLvl3 aggregate(groupBy({Client ID},",
				"          {Client Engagement Date},",
				"          {Business Group Level 3}),",
				"     {Record Count} = count({Client ID})) ~> aggregate3",
				"aggregate3 derive(IdentifierKey = 1) ~> derivedColumn6",
				"derivedColumn6 select(mapColumn(",
				"          {Client ID},",
				"          {Client Engagement Date},",
				"          {Business Group Level 3},",
				"          IdentifierKey",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectUniqueLvl3",
				"derivedColumn1, selectUniqueLvl3 join(derivedColumn1@IdentifierKey == selectUniqueLvl3@IdentifierKey,",
				"     joinType:'outer',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> JoinIdentifiertoLevel3Business",
				"JoinIdentifiertoLevel3Business derive(IdentifierFlag = iif(instr({Business Group Level 3},' ' + TagIdentifier + ' ')>0, \"Y\", \"N\"),",
				"          Field = 'Business Group Level 3') ~> derivedColumn7",
				"derivedColumn7 select(mapColumn(",
				"          {Client ID},",
				"          {Client Engagement Date},",
				"          Field,",
				"          {Field Value} = {Business Group Level 3},",
				"          TagIdentifier,",
				"          IdentifierFlag",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select4",
				"CoreFactTblTemplate select(mapColumn(",
				"          {Client ID},",
				"          {Client Engagement Date},",
				"          {Business Group Level 4}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectBusLvl4",
				"selectBusLvl4 aggregate(groupBy({Client ID},",
				"          {Client Engagement Date},",
				"          {Business Group Level 4}),",
				"     {Record Count} = count({Client ID})) ~> aggregate4",
				"aggregate4 derive(IdentifierKey = 1) ~> derivedColumn8",
				"derivedColumn8 select(mapColumn(",
				"          {Client ID},",
				"          {Client Engagement Date},",
				"          {Business Group Level 4},",
				"          IdentifierKey",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectUniqueLvl4",
				"derivedColumn1, selectUniqueLvl4 join(derivedColumn1@IdentifierKey == selectUniqueLvl4@IdentifierKey,",
				"     joinType:'outer',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> JoinIdentifiertoLevel4Business",
				"JoinIdentifiertoLevel4Business derive(IdentifierFlag = iif(instr({Business Group Level 4},' ' + TagIdentifier + ' ')>0, \"Y\", \"N\"),",
				"          Field = 'Business Group Level 4') ~> derivedColumn9",
				"derivedColumn9 select(mapColumn(",
				"          TagIdentifier,",
				"          {Client ID},",
				"          {Client Engagement Date},",
				"          {Field Value} = {Business Group Level 4},",
				"          IdentifierFlag",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select5",
				"select4 filter(IdentifierFlag=='Y') ~> filterBusinessLvl3FlaggedY",
				"select5 filter(IdentifierFlag=='Y') ~> filterBusinessLvl4FlaggedY",
				"select3 filter(IdentifierFlag=='Y') ~> filterBusinessLvl2FlaggedY",
				"select2 filter(IdentifierFlag=='Y') ~> filterBusinessLvl1FlaggedY",
				"filterBusinessLvl1FlaggedY, filterBusinessLvl2FlaggedY union(byName: true)~> union1"
			]
		}
	}
}