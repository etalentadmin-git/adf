{
	"name": "Append_Mapping_Job",
	"properties": {
		"folder": {
			"name": "Client/Database/Load Mapping Tables"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Source_Mapping_Job",
						"type": "DatasetReference"
					},
					"name": "Job"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "Source_Mapping_Job",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "alterRow1"
				},
				{
					"name": "AlterColumnNamesforMap"
				},
				{
					"name": "derivedColumn1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          {Client ID} as string,",
				"          {Client Job Function} as string,",
				"          {Client Job Title} as string,",
				"          {Elloree Job Function} as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> Job",
				"Job alterRow(upsertIf(true()),",
				"     deleteIf(isNull({Client ID})),",
				"     deleteIf(isNull({Client Job Function})),",
				"     deleteIf(isNull({Client Job Title})),",
				"     deleteIf(isNull({Elloree Job Function}))) ~> alterRow1",
				"alterRow1 select(mapColumn(",
				"          ClientJobFunction = {Client Job Function},",
				"          ClientJobTitle = {Client Job Title},",
				"          ElloreeJobFunction = {Elloree Job Function}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> AlterColumnNamesforMap",
				"AlterColumnNamesforMap derive(LoadDt = currentDate()) ~> derivedColumn1",
				"derivedColumn1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          {Client ID} as string,",
				"          {Client Job Function} as string,",
				"          {Client Job Title} as string,",
				"          {Elloree Job Function} as string",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     format: 'table') ~> sink1"
			]
		}
	}
}