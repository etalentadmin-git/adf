{
	"name": "DF_FactTbl_ApplStatus",
	"properties": {
		"folder": {
			"name": "Client/Fact Tables"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Source_FactTbl_Applicant_File",
						"type": "DatasetReference"
					},
					"name": "Applicant"
				},
				{
					"dataset": {
						"referenceName": "Source_Mapping_Ethnicity",
						"type": "DatasetReference"
					},
					"name": "EthnicityMap"
				},
				{
					"dataset": {
						"referenceName": "Source_Mapping_Gender",
						"type": "DatasetReference"
					},
					"name": "GenderMap"
				},
				{
					"dataset": {
						"referenceName": "Source_Mapping_Applicant",
						"type": "DatasetReference"
					},
					"name": "ApplicantMap"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "Source_FactTblFldr",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "select1"
				},
				{
					"name": "JoinEthMap"
				},
				{
					"name": "JoinGenderMap"
				},
				{
					"name": "SelectEthnicity"
				},
				{
					"name": "SelectGender"
				},
				{
					"name": "JoinApplicantMap"
				},
				{
					"name": "SelectApplicant"
				},
				{
					"name": "SelectToRemoveJoinFields"
				},
				{
					"name": "CalcApplicantStatus"
				}
			],
			"scriptLines": [
				"source(output(",
				"          {Client ID} as string,",
				"          {Client Engagement Date} as date 'MM/dd/yyyy',",
				"          {Client Engagement Type} as string,",
				"          {Event Date} as string,",
				"          EventMonth as string,",
				"          {Event Quarter} as string,",
				"          {Event Year} as string,",
				"          Event as string,",
				"          {Requisition ID} as string,",
				"          {Applicant ID} as string,",
				"          Source as string,",
				"          {Applicant Type} as string,",
				"          {Internal Worker ID} as string,",
				"          Race as string,",
				"          {Hispanic or Latino Origin} as string,",
				"          Gender as string,",
				"          {Veteran Ind} as string,",
				"          LGTBQ as string,",
				"          {Disability Ind} as string,",
				"          {Applicant Final Disposition} as string,",
				"          {Applicant Step Before Final Disposition} as string,",
				"          {Applicant Rejected Reason} as string,",
				"          {Applicant Other (1)} as string,",
				"          {Applicant Other (2)} as string,",
				"          {Applicant Other (3)} as string,",
				"          {Applicant Other (4)} as string,",
				"          {Applicant Other (5)} as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> Applicant",
				"source(output(",
				"          {Client ID} as string,",
				"          {Client Engagement Date} as date 'MM/dd/yyyy',",
				"          {Client Race} as string,",
				"          {Client Hispanic or Latino Origin} as string,",
				"          {Elloree Race} as string,",
				"          {Elloree Hispanic or Latino Origin} as string,",
				"          {Suggested Elloree Race} as string,",
				"          {Suggested Elloree Hispanic or Latino Origin} as string,",
				"          {Suggested Source} as string,",
				"          {2017 Headcount} as string,",
				"          {2018 Headcount} as string,",
				"          {2018 Hire} as string,",
				"          {2018 Promo} as string,",
				"          {2018 Term} as string,",
				"          {2019 Headcount} as string,",
				"          {2019 Hire} as string,",
				"          {2019 Promo} as string,",
				"          {2019 Term} as string,",
				"          {2020 Headcount} as string,",
				"          {2020 Hire} as string,",
				"          {2020 Promo} as string,",
				"          {2020 Term} as string,",
				"          {2021 Headcount} as string,",
				"          {2021 Hire} as string,",
				"          {2021 Promo} as string,",
				"          {2021 Term} as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> EthnicityMap",
				"source(output(",
				"          {Client ID} as string,",
				"          {Client Engagement Date} as date 'MM/dd/yyyy',",
				"          {Client Gender} as string,",
				"          {Elloree Gender} as string,",
				"          {Suggested Elloree Gender} as string,",
				"          {Suggested Source} as string,",
				"          {2017 Headcount} as string,",
				"          {2018 Headcount} as string,",
				"          {2018 Hire} as string,",
				"          {2018 Promo} as string,",
				"          {2018 Term} as string,",
				"          {2019 Headcount} as string,",
				"          {2019 Hire} as string,",
				"          {2019 Promo} as string,",
				"          {2019 Term} as string,",
				"          {2020 Headcount} as string,",
				"          {2020 Hire} as string,",
				"          {2020 Promo} as string,",
				"          {2020 Term} as string,",
				"          {2021 Headcount} as string,",
				"          {2021 Hire} as string,",
				"          {2021 Promo} as string,",
				"          {2021 Term} as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> GenderMap",
				"source(output(",
				"          {Client ID} as string,",
				"          {Client Engagement Date} as date 'MM/dd/yyyy',",
				"          {Client Applicant Final Disposition} as string,",
				"          {Client Applicant Step Before Final Disposition} as string,",
				"          {Client Applicant Rejected Reason} as string,",
				"          {Elloree Applicant Final Disposition} as string,",
				"          {Elloree Applicant Category} as string,",
				"          {Elloree Submitted to Mgr Fl} as string,",
				"          {Suggested Elloree Applicant Final Disposition} as string,",
				"          {Suggested Elloree Applicant Category} as string,",
				"          {Suggested Elloree Submitted to Mgr Fl} as string,",
				"          {Suggested Source} as string,",
				"          {2021 Job Applicant} as string,",
				"          {2022 Job Applicant} as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> ApplicantMap",
				"Applicant select(mapColumn(",
				"          {Client ID},",
				"          {Client Engagement Date},",
				"          {Applicant ID},",
				"          {Requisition ID},",
				"          {Event Date},",
				"          EventMonth,",
				"          {Event Quarter},",
				"          {Event Year},",
				"          Event,",
				"          {Applicant Type},",
				"          Race,",
				"          {Hispanic or Latino Origin},",
				"          Gender,",
				"          {Applicant Final Disposition},",
				"          {Applicant Step Before Final Disposition},",
				"          {Applicant Rejected Reason}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"select1, SelectEthnicity join({Client ID} == {Ethnicity Client ID}",
				"     && {Client Engagement Date} == {Ethnicity Client Engagement Date}",
				"     && Race == {Ethnicity Client Race}",
				"     && {Hispanic or Latino Origin} == {Ethnicity Client Hispanic or Latino Origin},",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> JoinEthMap",
				"JoinEthMap, SelectGender join({Client ID} == {Gender Client ID}",
				"     && {Client Engagement Date} == {Gender Client Engagement Date}",
				"     && Gender == {Gender Client Gender},",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> JoinGenderMap",
				"EthnicityMap select(mapColumn(",
				"          {Ethnicity Client ID} = {Client ID},",
				"          {Ethnicity Client Engagement Date} = {Client Engagement Date},",
				"          {Ethnicity Client Race} = {Client Race},",
				"          {Ethnicity Client Hispanic or Latino Origin} = {Client Hispanic or Latino Origin},",
				"          {Ethnicity Elloree Race} = {Elloree Race},",
				"          {Ethnicity Elloree Hispanic or Latino Origin} = {Elloree Hispanic or Latino Origin}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SelectEthnicity",
				"GenderMap select(mapColumn(",
				"          {Gender Client ID} = {Client ID},",
				"          {Gender Client Engagement Date} = {Client Engagement Date},",
				"          {Gender Client Gender} = {Client Gender},",
				"          {Gender Elloree Gender} = {Elloree Gender}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SelectGender",
				"JoinGenderMap, SelectApplicant join({Client ID} == {Applicant Client ID}",
				"     && {Client Engagement Date} == {Applicant Client Engagement Date}",
				"     && {Applicant Final Disposition} == {Applicant Client Applicant Final Disposition}",
				"     && {Applicant Step Before Final Disposition} == {Applicant Client Applicant Step Before Final Disposition}",
				"     && {Applicant Rejected Reason} == {Applicant Client Applicant Rejected Reason},",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> JoinApplicantMap",
				"ApplicantMap select(mapColumn(",
				"          {Applicant Client ID} = {Client ID},",
				"          {Applicant Client Engagement Date} = {Client Engagement Date},",
				"          {Applicant Client Applicant Final Disposition} = {Client Applicant Final Disposition},",
				"          {Applicant Client Applicant Step Before Final Disposition} = {Client Applicant Step Before Final Disposition},",
				"          {Applicant Client Applicant Rejected Reason} = {Client Applicant Rejected Reason},",
				"          {Applicant Elloree Applicant Final Disposition} = {Elloree Applicant Final Disposition},",
				"          {Applicant Elloree Applicant Category} = {Elloree Applicant Category},",
				"          {Applicant Elloree Submitted to Mgr Fl} = {Elloree Submitted to Mgr Fl}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SelectApplicant",
				"JoinApplicantMap select(mapColumn(",
				"          {Client ID},",
				"          {Client Engagement Date},",
				"          {Applicant ID},",
				"          {Requisition ID},",
				"          {Event Date},",
				"          EventMonth,",
				"          {Event Quarter},",
				"          {Event Year},",
				"          {Applicant Type},",
				"          {Elloree Applicant Final Disposition} = {Applicant Elloree Applicant Final Disposition},",
				"          {Elloree Applicant Category} = {Applicant Elloree Applicant Category},",
				"          {Elloree Submitted to Mgr Fl} = {Applicant Elloree Submitted to Mgr Fl},",
				"          {Elloree Race} = {Ethnicity Elloree Race},",
				"          {Elloree Hispanic or Latino Origin} = {Ethnicity Elloree Hispanic or Latino Origin},",
				"          {Elloree Gender} = {Gender Elloree Gender}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SelectToRemoveJoinFields",
				"SelectToRemoveJoinFields derive(Applicant = 1,",
				"          {White Appl} = iif({Elloree Race}=='White',1,0),",
				"          {Black Appl} = iif({Elloree Race}=='Black',1,0),",
				"          {Latinx Appl} = iif(or({Elloree Race}=='Latinx',{Elloree Hispanic or Latino Origin}=='Y'),1,0),",
				"          {Asian Appl} = iif({Elloree Race}=='Asian',1,0),",
				"          {Two or More Appl} = iif({Elloree Race}=='2+ Races',1,0),",
				"          {Other Appl} = iif({Elloree Race}=='Other',1,0),",
				"          {DNSID Appl} = iif(and({Elloree Race}=='Did Not Self Identify',or({Elloree Hispanic or Latino Origin}=='Did Not Self Identify',{Elloree Hispanic or Latino Origin}=='N')),1,0),",
				"          {Female Appl} = iif({Elloree Gender}=='Female',1,0),",
				"          {PoC Appl} = iif(or(or(or({Elloree Race}=='Black',{Elloree Race}=='Asian'),\r",
				"or({Elloree Race}=='2+ Races',{Elloree Race}=='Other')),\r",
				"or({Elloree Race}=='Latinx',{Elloree Hispanic or Latino Origin}=='Y')),1,0),",
				"          {Male Appl} = iif({Elloree Gender}=='Male',1,0),",
				"          {Other Gender Appl} = iif({Elloree Gender}=='Other',1,0),",
				"          {DNSID Gender Appl} = iif({Elloree Gender}=='Did Not Self Identify',1,0),",
				"          {Diverse Applicant} = iif(or(or(or(or({Elloree Race}=='Black',{Elloree Race}=='Asian'),\r",
				"or({Elloree Race}=='2+ Races',{Elloree Race}=='Other')),\r",
				"or({Elloree Race}=='Latinx',{Elloree Hispanic or Latino Origin}=='Y')),\r",
				"{Elloree Gender}==\"Female\"),1,0),",
				"          {Applicant Rejected by HR} = iif(and({Elloree Applicant Category}=='Applicant',{Elloree Applicant Final Disposition}=='Not Selected - HR'),1,0),",
				"          {Applicant Withdrew} = iif(and({Elloree Applicant Category}=='Applicant',{Elloree Applicant Final Disposition}=='Withdrew'),1,0),",
				"          Candidate = iif({Elloree Applicant Category}=='Candidate',1,0),",
				"          {Candidate Rejected by HR} = iif(and({Elloree Applicant Category}=='Candidate',{Elloree Applicant Final Disposition}=='Not Selected - HR'),1,0),",
				"          {Candidate StM} = iif(and({Elloree Applicant Category}=='Candidate',{Elloree Submitted to Mgr Fl}=='Y'),1,0),",
				"          {Candidate Rejected by HM} = iif(and({Elloree Applicant Category}=='Candidate',{Elloree Applicant Final Disposition}=='Not Selected - HM'),1,0),",
				"          {Candidate Interviewed} = iif(and({Elloree Applicant Category}=='Candidate',{Elloree Submitted to Mgr Fl}=='Y'),\r",
				"iif(or({Elloree Applicant Final Disposition}=='Interviewed',{Elloree Applicant Final Disposition}=='Hired'),1,0),0),",
				"          {Candidate Hired} = iif(and({Elloree Applicant Category}=='Candidate',{Elloree Submitted to Mgr Fl}=='Y'),\r",
				"iif({Elloree Applicant Final Disposition}==\"Hired\",1,0),0),",
				"          {Candidate Withdrew} = iif(and({Elloree Applicant Category}=='Candidate',{Elloree Submitted to Mgr Fl}=='Y'),\r",
				"iif({Elloree Applicant Final Disposition}==\"Withdrew\",1,0),0)) ~> CalcApplicantStatus",
				"CalcApplicantStatus sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          Column_1 as string,",
				"          Column_2 as string,",
				"          Column_3 as string,",
				"          Column_4 as string,",
				"          Column_5 as string,",
				"          Column_6 as string,",
				"          Column_7 as string,",
				"          Column_8 as string,",
				"          Column_9 as string,",
				"          Column_10 as string,",
				"          Column_11 as string,",
				"          Column_12 as string,",
				"          Column_13 as string,",
				"          Column_14 as string,",
				"          Column_15 as string,",
				"          Column_16 as string,",
				"          Column_17 as string,",
				"          Column_18 as string,",
				"          Column_19 as string,",
				"          Column_20 as string,",
				"          Column_21 as string,",
				"          Column_22 as string,",
				"          Column_23 as string,",
				"          Column_24 as string,",
				"          Column_25 as string,",
				"          Column_26 as string,",
				"          Column_27 as string,",
				"          Column_28 as string",
				"     ),",
				"     partitionFileNames:['TAApplStatusFactTbl.csv'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> sink1"
			]
		}
	}
}