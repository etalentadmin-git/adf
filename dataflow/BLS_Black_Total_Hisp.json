{
	"name": "BLS_Black_Total_Hisp",
	"properties": {
		"folder": {
			"name": "External Data/BLS"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Json_BLS_Black_Total_Hisp",
						"type": "DatasetReference"
					},
					"name": "BLSJsonSource"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "Source_BLS_Output",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "flatten3"
				},
				{
					"name": "flatten4"
				},
				{
					"name": "derivedColumn1"
				},
				{
					"name": "select1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          status as string,",
				"          responseTime as integer,",
				"          message as string[],",
				"          Results as (series as (seriesID as string, data as (year as string, period as string, periodName as string, latest as string, value as string, footnotes as ({} as string)[])[])[])",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     documentForm: 'documentPerLine') ~> BLSJsonSource",
				"BLSJsonSource foldDown(unroll(Results.series),",
				"     mapColumn(",
				"          status,",
				"          responseTime,",
				"          message,",
				"          seriesID = Results.series.seriesID,",
				"          data = Results.series.data",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> flatten3",
				"flatten3 foldDown(unroll(data),",
				"     mapColumn(",
				"          seriesID,",
				"          year = data.year,",
				"          period = data.period,",
				"          latest = data.latest,",
				"          value = data.value",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> flatten4",
				"flatten4 derive(Race = 'Black',",
				"          Source = 'BLS',",
				"          EthnicOrigin = 'Hispanic or Latino',",
				"          Gender = 'All',",
				"          SeriesDesc = '(unadj) Civilian Labor Force - Black or African American, Hispanic',",
				"          Quarter = iif(period=='Q01',1,iif(period=='Q02',2,iif(period=='Q03',3,iif(period=='Q04',4,0)))),",
				"          Headcount = toInteger(value)*1000) ~> derivedColumn1",
				"derivedColumn1 select(mapColumn(",
				"          Source,",
				"          SourceId = seriesID,",
				"          Desc = SeriesDesc,",
				"          Year = year,",
				"          Quarter,",
				"          Latest = latest,",
				"          EthnicOrigin,",
				"          Race,",
				"          Gender,",
				"          Headcount",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"select1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['BLS_Black_Total_Hisp.csv'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> sink1"
			]
		}
	}
}