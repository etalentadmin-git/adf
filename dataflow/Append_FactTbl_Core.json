{
	"name": "Append_FactTbl_Core",
	"properties": {
		"folder": {
			"name": "Client/Database/Load Fact Tables"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Source_FactTbl_AllCoreData_File",
						"type": "DatasetReference"
					},
					"name": "Core"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "etalentCoreFactTbl",
						"type": "DatasetReference"
					},
					"name": "AppendCoreFact"
				}
			],
			"transformations": [
				{
					"name": "alterRow1"
				},
				{
					"name": "RemoveNullRows"
				},
				{
					"name": "derivedColumn1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          {Client ID} as string,",
				"          {Client Engagement Date} as date 'MM/dd/yyyy',",
				"          {Client Engagement Type} as string,",
				"          {Worker ID} as string,",
				"          {Event Date} as date 'yyyy-MM-dd',",
				"          EventMonth as integer,",
				"          {Event Quarter} as integer,",
				"          {Event Year} as short,",
				"          {Event Code} as string,",
				"          {Event Type} as string,",
				"          Event as string,",
				"          {Event Reason} as string,",
				"          {Worker Status} as string,",
				"          {Worker Type} as string,",
				"          {Job Title} as string,",
				"          {Job Family/Function} as string,",
				"          {Years in Job} as double,",
				"          {Previous Job Title} as string,",
				"          {Previous Job Family/Function} as string,",
				"          {Original Hire Date} as date 'MM/dd/yyyy',",
				"          {Current Hire Date} as date 'MM/dd/yyyy',",
				"          {Years of Service} as double,",
				"          {Years of Service Band} as string,",
				"          {Years of Service Sort ID} as integer,",
				"          {Last Promo Date} as date,",
				"          {Rehire Indicator} as string,",
				"          {Corporate Title} as string,",
				"          {Previous Corporate Title} as string,",
				"          {Manager Indicator} as string,",
				"          {Direct Manager Worker ID} as string,",
				"          {Work Office Location} as string,",
				"          {Work City} as string,",
				"          {Work State} as string,",
				"          {Work Country} as string,",
				"          {Strategic Work Location Ind} as string,",
				"          {Legacy Organization} as string,",
				"          {Business Group Level 1} as string,",
				"          {Business Group Level 2} as string,",
				"          {Business Group Level 3} as string,",
				"          {Business Group Level 4} as string,",
				"          Race as string,",
				"          {Hispanic or Latino Origin} as string,",
				"          Gender as string,",
				"          {Veteran Ind} as string,",
				"          LGTBQ as string,",
				"          {Disability Ind} as string,",
				"          {Birth Year} as short,",
				"          {Generation Desc} as string,",
				"          {Generation Sort ID} as integer,",
				"          EmpCount as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> Core",
				"RemoveNullRows alterRow(upsertIf(true()),",
				"     deleteIf(isNull({Client ID})),",
				"     deleteIf(isNull({Client Engagement Date})),",
				"     deleteIf(isNull({Worker ID})),",
				"     deleteIf(isNull({Event Date})),",
				"     deleteIf(isNull({Event Year})),",
				"     deleteIf(isNull({Event Code})),",
				"     deleteIf(isNull({Event Type})),",
				"     deleteIf(isNull(Event)),",
				"     deleteIf(isNull({Event Reason})),",
				"     deleteIf(isNull({Worker Status})),",
				"     deleteIf(isNull({Worker Type})),",
				"     deleteIf(isNull({Job Title})),",
				"     deleteIf(isNull({Job Family/Function})),",
				"     deleteIf(isNull({Years in Job})),",
				"     deleteIf(isNull({Previous Job Title})),",
				"     deleteIf(isNull({Previous Job Family/Function})),",
				"     deleteIf(isNull({Original Hire Date})),",
				"     deleteIf(isNull({Current Hire Date})),",
				"     deleteIf(isNull({Years of Service})),",
				"     deleteIf(isNull({Years of Service Band})),",
				"     deleteIf(isNull({Years of Service Sort ID})),",
				"     deleteIf(isNull({Rehire Indicator})),",
				"     deleteIf(isNull({Corporate Title})),",
				"     deleteIf(isNull({Previous Corporate Title})),",
				"     deleteIf(isNull({Manager Indicator})),",
				"     deleteIf(isNull({Direct Manager Worker ID})),",
				"     deleteIf(isNull({Work Office Location})),",
				"     deleteIf(isNull({Work City})),",
				"     deleteIf(isNull({Work State})),",
				"     deleteIf(isNull({Work Country})),",
				"     deleteIf(isNull({Strategic Work Location Ind})),",
				"     deleteIf(isNull({Legacy Organization})),",
				"     deleteIf(isNull({Business Group Level 1})),",
				"     deleteIf(isNull({Business Group Level 2})),",
				"     deleteIf(isNull({Business Group Level 3})),",
				"     deleteIf(isNull({Business Group Level 4})),",
				"     deleteIf(isNull(Race)),",
				"     deleteIf(isNull({Hispanic or Latino Origin})),",
				"     deleteIf(isNull(Gender)),",
				"     deleteIf(isNull({Veteran Ind})),",
				"     deleteIf(isNull(LGTBQ)),",
				"     deleteIf(isNull({Disability Ind})),",
				"     deleteIf(isNull({Generation Desc})),",
				"     deleteIf(isNull({Generation Sort ID})),",
				"     deleteIf(isNull(EmpCount))) ~> alterRow1",
				"Core filter(!(isNull({Event Date}))||!(isNull({Worker ID}))) ~> RemoveNullRows",
				"alterRow1 derive(LoadDt = currentDate()) ~> derivedColumn1",
				"derivedColumn1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          ClientId as string,",
				"          ClientEngagementDt as date,",
				"          ClientEngagementType as string,",
				"          WorkerId as string,",
				"          EventDt as date,",
				"          EventMonth as integer,",
				"          EventQuarter as integer,",
				"          EventYear as integer,",
				"          Event as string,",
				"          EventId as string,",
				"          EventType as string,",
				"          EventReason as string,",
				"          WorkerStatus as string,",
				"          WorkerType as string,",
				"          JobTitle as string,",
				"          JobFunction as string,",
				"          YearsinJob as double,",
				"          PrevJobTitle as string,",
				"          PrevJobFunction as string,",
				"          LastPromoDt as date,",
				"          OrigHireDt as date,",
				"          CurrHireDt as date,",
				"          RehireInd as string,",
				"          YearsofSrvc as double,",
				"          YearsofSrvcBand as string,",
				"          YearsofSrvcBandSortId as integer,",
				"          CorpTitle as string,",
				"          PrevCorpTitle as string,",
				"          ManagerInd as string,",
				"          DirectMgrWorkerId as string,",
				"          WorkOfficeLoc as string,",
				"          WorkOfficeCity as string,",
				"          WorkOfficeState as string,",
				"          WorkOfficeCountry as string,",
				"          WorkStrategicLocInd as string,",
				"          LegacyOrg as string,",
				"          BusinessGrpLvl1 as string,",
				"          BusinessGrpLvl2 as string,",
				"          BusinessGrpLvl3 as string,",
				"          BusinessGrpLvl4 as string,",
				"          Race as string,",
				"          HispanicLatinoOrigin as string,",
				"          Gender as string,",
				"          Veteran as string,",
				"          LGTBQ as string,",
				"          DisabilityInd as string,",
				"          BirthYear as integer,",
				"          Generation as string,",
				"          GenerationSortId as integer,",
				"          EmpCount as integer,",
				"          LoadDt as date",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:true,",
				"     keys:['ClientId','ClientEngagementDt','EventDt','EventId','WorkerId'],",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          ClientId = {Client ID},",
				"          ClientEngagementDt = {Client Engagement Date},",
				"          ClientEngagementType = {Client Engagement Type},",
				"          WorkerId = {Worker ID},",
				"          EventDt = {Event Date},",
				"          EventMonth,",
				"          EventQuarter = {Event Quarter},",
				"          EventYear = {Event Year},",
				"          Event,",
				"          EventId = {Event Code},",
				"          EventType = {Event Type},",
				"          EventReason = {Event Reason},",
				"          WorkerStatus = {Worker Status},",
				"          WorkerType = {Worker Type},",
				"          JobTitle = {Job Title},",
				"          JobFunction = {Job Family/Function},",
				"          YearsinJob = {Years in Job},",
				"          PrevJobTitle = {Previous Job Title},",
				"          PrevJobFunction = {Previous Job Family/Function},",
				"          LastPromoDt = {Last Promo Date},",
				"          OrigHireDt = {Original Hire Date},",
				"          CurrHireDt = {Current Hire Date},",
				"          RehireInd = {Rehire Indicator},",
				"          YearsofSrvc = {Years of Service},",
				"          YearsofSrvcBand = {Years of Service Band},",
				"          YearsofSrvcBandSortId = {Years of Service Sort ID},",
				"          CorpTitle = {Corporate Title},",
				"          PrevCorpTitle = {Previous Corporate Title},",
				"          ManagerInd = {Manager Indicator},",
				"          DirectMgrWorkerId = {Direct Manager Worker ID},",
				"          WorkOfficeLoc = {Work Office Location},",
				"          WorkOfficeCity = {Work City},",
				"          WorkOfficeState = {Work State},",
				"          WorkOfficeCountry = {Work Country},",
				"          WorkStrategicLocInd = {Strategic Work Location Ind},",
				"          LegacyOrg = {Legacy Organization},",
				"          BusinessGrpLvl1 = {Business Group Level 1},",
				"          BusinessGrpLvl2 = {Business Group Level 2},",
				"          BusinessGrpLvl3 = {Business Group Level 3},",
				"          BusinessGrpLvl4 = {Business Group Level 4},",
				"          Race,",
				"          HispanicLatinoOrigin = {Hispanic or Latino Origin},",
				"          Gender,",
				"          Veteran = {Veteran Ind},",
				"          LGTBQ,",
				"          DisabilityInd = {Disability Ind},",
				"          BirthYear = {Birth Year},",
				"          Generation = {Generation Desc},",
				"          GenerationSortId = {Generation Sort ID},",
				"          EmpCount,",
				"          LoadDt",
				"     )) ~> AppendCoreFact"
			]
		}
	}
}