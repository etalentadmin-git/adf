{
	"name": "DF_Mapping_BusHierarchy_NEW",
	"properties": {
		"description": "This workflow outputs 2 files for hierarchy review.  The 1st file shows record counts by Business Org Level 1 and the second file shows counts by level 1 and level 2.  Output has placeholder columns for mapping.",
		"folder": {
			"name": "Client/Mapping Tables"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Source_FactTbl_AllCoreData_File",
						"type": "DatasetReference"
					},
					"name": "AllCoreData"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "Source_AuditFolder",
						"type": "DatasetReference"
					},
					"name": "sink2"
				}
			],
			"transformations": [
				{
					"name": "SelectCoreRecords"
				},
				{
					"name": "filterBaseYear"
				},
				{
					"name": "filterBaseYearPlus1"
				},
				{
					"name": "filterBaseYearPlus2"
				},
				{
					"name": "filterBaseYearPlus3"
				},
				{
					"name": "selectB3Hierarchy"
				},
				{
					"name": "selectB2Hierarchy"
				},
				{
					"name": "selectB1Hierarchy"
				},
				{
					"name": "selectB0Hierarchy"
				},
				{
					"name": "filterAllHCT"
				},
				{
					"name": "UniqueWorkerIds"
				},
				{
					"name": "selectWorkerIds"
				},
				{
					"name": "joinEachHCTYearB0"
				},
				{
					"name": "joinEachHCTYearB1"
				},
				{
					"name": "joinEachHCTYearB2"
				},
				{
					"name": "joinEachHCTYearB3"
				},
				{
					"name": "derivedHierarchyChg"
				},
				{
					"name": "derivedTransfer"
				},
				{
					"name": "derivedHierarchyCodeChg"
				},
				{
					"name": "selectHierarchyFlagOutput"
				},
				{
					"name": "derivedColumn2"
				},
				{
					"name": "join1"
				},
				{
					"name": "Yr0SetMappingLogic"
				},
				{
					"name": "Yr0SuggestedMapping"
				},
				{
					"name": "Yr0PullOnlyMapped"
				},
				{
					"name": "join2"
				},
				{
					"name": "Yr1SetMappingLogic"
				},
				{
					"name": "Yr1PullOnlyMapped"
				},
				{
					"name": "Yr1SuggestedMapping"
				},
				{
					"name": "selectYr1Mapping"
				},
				{
					"name": "selectYr0Mapping"
				},
				{
					"name": "union1"
				},
				{
					"name": "aggregate1"
				},
				{
					"name": "join3"
				},
				{
					"name": "Yr2SetMappingLogic"
				},
				{
					"name": "Yr2PullOnlyMapped"
				},
				{
					"name": "Yr2SuggestedMapping"
				},
				{
					"name": "selectYr2Mapping"
				},
				{
					"name": "Yr3SuggestedMapping"
				},
				{
					"name": "selectYr3Mapping"
				},
				{
					"name": "derivedColumn3"
				},
				{
					"name": "HierarchyKeyCount"
				},
				{
					"name": "SumWithoutYear"
				},
				{
					"name": "selectMappingWithDupCount"
				},
				{
					"name": "derivedCreateKeyForDupCheck"
				},
				{
					"name": "derivedCreateKeyForDupCheck1"
				},
				{
					"name": "joinDuplicateCountInfo"
				},
				{
					"name": "derivedSetMappingLevels"
				}
			],
			"scriptLines": [
				"parameters{",
				"     Flow_Client_Id as string,",
				"     Flow_Client_Dt as string,",
				"     Levels_Count as string",
				"}",
				"source(output(",
				"          {Client ID} as string,",
				"          {Client Engagement Date} as date 'MM/dd/yyyy',",
				"          {Client Engagement Type} as string,",
				"          {Worker ID} as string,",
				"          {Event Date} as date,",
				"          EventMonth as integer,",
				"          {Event Quarter} as integer,",
				"          {Event Year} as short,",
				"          {Event Code} as string,",
				"          {Event Type} as string,",
				"          Event as string,",
				"          {Event Reason} as string,",
				"          {Worker Status} as string,",
				"          {Worker Type} as string,",
				"          {Job Title} as string,",
				"          {Job Family/Function} as string,",
				"          {Years in Job} as string,",
				"          {Previous Job Title} as string,",
				"          {Previous Job Family/Function} as string,",
				"          {Original Hire Date} as string,",
				"          {Current Hire Date} as string,",
				"          {Years of Service} as string,",
				"          {Years of Service Band} as string,",
				"          {Years of Service Sort ID} as string,",
				"          {Last Promo Date} as string,",
				"          {Rehire Indicator} as string,",
				"          {Corporate Title} as string,",
				"          {Previous Corporate Title} as string,",
				"          {Manager Indicator} as string,",
				"          {Direct Manager Worker ID} as string,",
				"          {Work Office Location} as string,",
				"          {Work City} as string,",
				"          {Work State} as string,",
				"          {Work Country} as string,",
				"          {Strategic Work Location Ind} as string,",
				"          {Legacy Organization} as string,",
				"          {Business Group Level 1} as string,",
				"          {Business Group Level 2} as string,",
				"          {Business Group Level 3} as string,",
				"          {Business Group Level 4} as string,",
				"          Race as string,",
				"          {Hispanic or Latino Origin} as string,",
				"          Gender as string,",
				"          {Veteran Ind} as string,",
				"          LGTBQ as string,",
				"          {Disability Ind} as string,",
				"          {Birth Year} as string,",
				"          {Generation Desc} as string,",
				"          {Generation Sort ID} as string,",
				"          EmpCount as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> AllCoreData",
				"AllCoreData select(mapColumn(",
				"          {Client ID},",
				"          {Client Engagement Date},",
				"          {Record Id} = {Worker ID},",
				"          {Event Year},",
				"          Event,",
				"          {Business Group Level 1},",
				"          {Business Group Level 2},",
				"          {Business Group Level 3},",
				"          {Business Group Level 4},",
				"          {Job Title}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SelectCoreRecords",
				"SelectCoreRecords filter({Event Year}==2021 && Event=='Headcount') ~> filterBaseYear",
				"SelectCoreRecords filter({Event Year}==2022 && Event=='Headcount') ~> filterBaseYearPlus1",
				"SelectCoreRecords filter({Event Year}==2023 && Event=='Headcount') ~> filterBaseYearPlus2",
				"SelectCoreRecords filter({Event Year}==2024 && Event=='Headcount') ~> filterBaseYearPlus3",
				"filterBaseYearPlus3 select(mapColumn(",
				"          {Yr 3 - Worker Id} = {Record Id},",
				"          {Yr 3 - Event Year} = {Event Year},",
				"          {Yr 3 - Business Group Level 1} = {Business Group Level 1},",
				"          {Yr 3 - Business Group Level 2} = {Business Group Level 2},",
				"          {Yr 3 - Business Group Level 3} = {Business Group Level 3},",
				"          {Yr 3 - Business Group Level 4} = {Business Group Level 4},",
				"          {Yr 3 - Job Title} = {Job Title}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectB3Hierarchy",
				"filterBaseYearPlus2 select(mapColumn(",
				"          {Yr 2 - Worker Id} = {Record Id},",
				"          {Yr 2 - Event Year} = {Event Year},",
				"          {Yr 2 - Business Group Level 1} = {Business Group Level 1},",
				"          {Yr 2 - Business Group Level 2} = {Business Group Level 2},",
				"          {Yr 2 - Business Group Level 3} = {Business Group Level 3},",
				"          {Yr 2 - Business Group Level 4} = {Business Group Level 4},",
				"          {Yr 2 - Job Title} = {Job Title}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectB2Hierarchy",
				"filterBaseYearPlus1 select(mapColumn(",
				"          {Yr 1 - Worker Id} = {Record Id},",
				"          {Yr 1 - Event Year} = {Event Year},",
				"          {Yr 1 - Business Group Level 1} = {Business Group Level 1},",
				"          {Yr 1 - Business Group Level 2} = {Business Group Level 2},",
				"          {Yr 1 - Business Group Level 3} = {Business Group Level 3},",
				"          {Yr 1 - Business Group Level 4} = {Business Group Level 4},",
				"          {Yr 1 - Job Title} = {Job Title}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectB1Hierarchy",
				"filterBaseYear select(mapColumn(",
				"          {Yr 0 - Worker Id} = {Record Id},",
				"          {Yr 0 - Event Year} = {Event Year},",
				"          {Yr 0 - Business Group Level 1} = {Business Group Level 1},",
				"          {Yr 0 - Business Group Level 2} = {Business Group Level 2},",
				"          {Yr 0 - Business Group Level 3} = {Business Group Level 3},",
				"          {Yr 0 - Business Group Level 4} = {Business Group Level 4},",
				"          {Yr 0 - Job Title} = {Job Title}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectB0Hierarchy",
				"SelectCoreRecords filter(Event=='Headcount') ~> filterAllHCT",
				"filterAllHCT aggregate(groupBy({Worker Id} = {Record Id}),",
				"     {Record Count} = count({Record Id})) ~> UniqueWorkerIds",
				"UniqueWorkerIds select(mapColumn(",
				"          {Worker Id}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectWorkerIds",
				"selectWorkerIds, selectB0Hierarchy join({Worker Id} == {Yr 0 - Worker Id},",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> joinEachHCTYearB0",
				"joinEachHCTYearB0, selectB1Hierarchy join({Worker Id} == {Yr 1 - Worker Id},",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> joinEachHCTYearB1",
				"joinEachHCTYearB1, selectB2Hierarchy join({Worker Id} == {Yr 2 - Worker Id},",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> joinEachHCTYearB2",
				"joinEachHCTYearB2, selectB3Hierarchy join({Worker Id} == {Yr 3 - Worker Id},",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> joinEachHCTYearB3",
				"derivedSetMappingLevels derive({Yr 0 - Hierarchy Code} = concat(concat(concat({Yr 0 - Business Group Level 1}, {Yr 0 - Business Group Level 2}),{Yr 0 - Business Group Level 3}),{Yr 0 - Business Group Level 4}),",
				"          {Yr 1 - Hierarchy Code} = concat(concat(concat({Yr 1 - Business Group Level 1}, {Yr 1 - Business Group Level 2}),{Yr 1 - Business Group Level 3}),{Yr 1 - Business Group Level 4}),",
				"          {Yr 2 - Hierarchy Code} = concat(concat(concat({Yr 2 - Business Group Level 1}, {Yr 2 - Business Group Level 2}),{Yr 2 - Business Group Level 3}),{Yr 2 - Business Group Level 4}),",
				"          {Yr 3 - Hierarchy Code} = concat(concat(concat({Yr 3 - Business Group Level 1}, {Yr 3 - Business Group Level 2}),{Yr 3 - Business Group Level 3}),{Yr 3 - Business Group Level 4}),",
				"          {Yr 0 to Yr 1 Lvl 1 Change} = iif({Yr 0 - Business Group Level 1}=={Yr 1 - Business Group Level 1},'N','Y'),",
				"          {Yr 0 to Yr 1 Lvl 2 Change} = iif({Yr 0 - Business Group Level 2}=={Yr 1 - Business Group Level 2},'N','Y'),",
				"          {Yr 0 to Yr 1 Lvl 3 Change} = iif({Yr 0 - Business Group Level 3}=={Yr 1 - Business Group Level 3},'N','Y'),",
				"          {Yr 0 to Yr 1 Lvl 4 Change} = iif({Yr 0 - Business Group Level 4}=={Yr 1 - Business Group Level 4},'N','Y'),",
				"          {Yr 1 to Yr 2 Lvl 1 Change} = iif({Yr 1 - Business Group Level 1}=={Yr 2 - Business Group Level 1},'N','Y'),",
				"          {Yr 1 to Yr 2 Lvl 2 Change} = iif({Yr 1 - Business Group Level 2}=={Yr 2 - Business Group Level 2},'N','Y'),",
				"          {Yr 1 to Yr 2 Lvl 3 Change} = iif({Yr 1 - Business Group Level 3}=={Yr 2 - Business Group Level 3},'N','Y'),",
				"          {Yr 1 to Yr 2 Lvl 4 Change} = iif({Yr 1 - Business Group Level 4}=={Yr 2 - Business Group Level 4},'N','Y'),",
				"          {Yr 2 to Yr 3 Lvl 1 Change} = iif({Yr 2 - Business Group Level 1}=={Yr 3 - Business Group Level 1},'N','Y'),",
				"          {Yr 2 to Yr 3 Lvl 2 Change} = iif({Yr 2 - Business Group Level 2}=={Yr 3 - Business Group Level 2},'N','Y'),",
				"          {Yr 2 to Yr 3 Lvl 3 Change} = iif({Yr 2 - Business Group Level 3}=={Yr 3 - Business Group Level 3},'N','Y'),",
				"          {Yr 2 to Yr 3 Lvl 4 Change} = iif({Yr 2 - Business Group Level 4}=={Yr 3 - Business Group Level 4},'N','Y'),",
				"          {Yr 0 to Yr 1 Job Change} = iif({Yr 0 - Job Title}=={Yr 1 - Job Title},'N','Y'),",
				"          {Yr 1 to Yr 2 Job Change} = iif({Yr 1 - Job Title}=={Yr 2 - Job Title},'N','Y'),",
				"          {Yr 2 to Yr 3 Job Change} = iif({Yr 2 - Job Title}=={Yr 3 - Job Title},'N','Y')) ~> derivedHierarchyChg",
				"derivedHierarchyCodeChg derive({Yr 0 to Yr 1 Transfer Possibility} = iif({Yr 0 to Yr 1 Hierarchy Code Change}=='Y',iif({Yr 0 to Yr 1 Job Change}=='Y','Y','N'),'N'),",
				"          {Yr 1 to Yr 2 Transfer Possibility} = iif({Yr 1 to Yr 2 Hierarchy Code Change}=='Y',iif({Yr 1 to Yr 2 Job Change}=='Y','Y','N'),'N'),",
				"          {Yr 2 to Yr 3 Transfer Possibility} = iif({Yr 2 to Yr 3 Hierarchy Code Change}=='Y',iif({Yr 2 to Yr 3 Job Change}=='Y','Y','N'),'N')) ~> derivedTransfer",
				"derivedHierarchyChg derive({Yr 0 to Yr 1 Hierarchy Code Change} = iif({Yr 0 - Hierarchy Code}=={Yr 1 - Hierarchy Code},'N','Y'),",
				"          {Yr 1 to Yr 2 Hierarchy Code Change} = iif({Yr 1 - Hierarchy Code}=={Yr 2 - Hierarchy Code},'N','Y'),",
				"          {Yr 2 to Yr 3 Hierarchy Code Change} = iif({Yr 2 - Hierarchy Code}=={Yr 3 - Hierarchy Code},'N','Y')) ~> derivedHierarchyCodeChg",
				"derivedColumn2 select(mapColumn(",
				"          {Worker Id},",
				"          {Yr 0 - Event Year},",
				"          {Yr 0 - Business Group Level 1},",
				"          {Yr 0 - Business Group Level 2},",
				"          {Yr 0 - Business Group Level 3},",
				"          {Yr 0 - Business Group Level 4},",
				"          {Yr 0 - Job Title},",
				"          {Yr 1 - Event Year},",
				"          {Yr 1 - Business Group Level 1},",
				"          {Yr 1 - Business Group Level 2} = selectB1Hierarchy@{Yr 1 - Business Group Level 2},",
				"          {Yr 1 - Business Group Level 3} = selectB1Hierarchy@{Yr 1 - Business Group Level 3},",
				"          {Yr 1 - Business Group Level 4} = selectB1Hierarchy@{Yr 1 - Business Group Level 4},",
				"          {Yr 1 - Job Title},",
				"          {Yr 2 - Event Year},",
				"          {Yr 2 - Business Group Level 1},",
				"          {Yr 2 - Business Group Level 2} = selectB2Hierarchy@{Yr 2 - Business Group Level 2},",
				"          {Yr 2 - Business Group Level 3} = selectB2Hierarchy@{Yr 2 - Business Group Level 3},",
				"          {Yr 2 - Business Group Level 4} = selectB2Hierarchy@{Yr 2 - Business Group Level 4},",
				"          {Yr 2 - Job Title},",
				"          {Yr 3 - Event Year},",
				"          {Yr 3 - Business Group Level 1},",
				"          {Yr 3 - Business Group Level 2} = selectB3Hierarchy@{Yr 3 - Business Group Level 2},",
				"          {Yr 3 - Business Group Level 3} = selectB3Hierarchy@{Yr 3 - Business Group Level 3},",
				"          {Yr 3 - Business Group Level 4} = selectB3Hierarchy@{Yr 3 - Business Group Level 4},",
				"          {Yr 3 - Job Title},",
				"          {Yr 0 - Hierarchy Code},",
				"          {Yr 1 - Hierarchy Code},",
				"          {Yr 2 - Hierarchy Code},",
				"          {Yr 3 - Hierarchy Code},",
				"          {Yr 0 to Yr 1 Lvl 1 Change},",
				"          {Yr 0 to Yr 1 Lvl 2 Change},",
				"          {Yr 0 to Yr 1 Lvl 3 Change},",
				"          {Yr 0 to Yr 1 Lvl 4 Change},",
				"          {Yr 1 to Yr 2 Lvl 1 Change},",
				"          {Yr 1 to Yr 2 Lvl 2 Change},",
				"          {Yr 1 to Yr 2 Lvl 3 Change},",
				"          {Yr 1 to Yr 2 Lvl 4 Change},",
				"          {Yr 2 to Yr 3 Lvl 1 Change},",
				"          {Yr 2 to Yr 3 Lvl 2 Change},",
				"          {Yr 2 to Yr 3 Lvl 3 Change},",
				"          {Yr 2 to Yr 3 Lvl 4 Change},",
				"          {Yr 0 to Yr 1 Job Change},",
				"          {Yr 1 to Yr 2 Job Change},",
				"          {Yr 2 to Yr 3 Job Change},",
				"          {Yr 0 to Yr 1 Hierarchy Code Change},",
				"          {Yr 1 to Yr 2 Hierarchy Code Change},",
				"          {Yr 2 to Yr 3 Hierarchy Code Change},",
				"          {Yr 0 to Yr 1 Transfer Possibility},",
				"          {Yr 1 to Yr 2 Transfer Possibility},",
				"          {Yr 2 to Yr 3 Transfer Possibility},",
				"          {Yr 0 Matches Yr 1},",
				"          {Yr 0 Matches Yr 2},",
				"          {Yr 0 Matches Yr 3},",
				"          {Yr 1 Matches Yr 2},",
				"          {Yr 1 Matches Yr 3},",
				"          {Yr 2 Matches Yr 3}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectHierarchyFlagOutput",
				"derivedTransfer derive({Yr 0 Matches Yr 1} = iif({Yr 0 - Hierarchy Code}=={Yr 1 - Hierarchy Code},'Y','N'),",
				"          {Yr 0 Matches Yr 2} = iif({Yr 0 - Hierarchy Code}=={Yr 2 - Hierarchy Code},'Y','N'),",
				"          {Yr 0 Matches Yr 3} = iif({Yr 0 - Hierarchy Code}=={Yr 3 - Hierarchy Code},'Y','N'),",
				"          {Yr 1 Matches Yr 2} = iif({Yr 1 - Hierarchy Code}=={Yr 2 - Hierarchy Code},'Y','N'),",
				"          {Yr 1 Matches Yr 3} = iif({Yr 1 - Hierarchy Code}=={Yr 3 - Hierarchy Code},'Y','N'),",
				"          {Yr 2 Matches Yr 3} = iif({Yr 2 - Hierarchy Code}=={Yr 3 - Hierarchy Code},'Y','N')) ~> derivedColumn2",
				"filterBaseYear, selectHierarchyFlagOutput join({Record Id} == {Worker Id},",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join1",
				"join1 derive({Mapped Hierarchy Lvl 1} = iif({Yr 0 Matches Yr 3}=='Y',{Yr 3 - Business Group Level 1},\r",
				"iif({Yr 0 Matches Yr 1}=='N' && {Yr 0 to Yr 1 Transfer Possibility}=='N' && {Yr 1 Matches Yr 3}=='Y',{Yr 3 - Business Group Level 1},\r",
				"iif({Yr 0 Matches Yr 1}=='Y' && {Yr 1 Matches Yr 2}=='N' && {Yr 1 to Yr 2 Transfer Possibility}=='N' && {Yr 2 Matches Yr 3}=='Y',{Yr 3 - Business Group Level 1},\r",
				"iif({Yr 0 to Yr 1 Transfer Possibility}=='N' && {Yr 1 to Yr 2 Transfer Possibility}=='N' && {Yr 2 to Yr 3 Transfer Possibility}=='N',{Yr 3 - Business Group Level 1},'NO MAPPING' )))),",
				"          {Mapped Hierarchy Lvl 2} = iif({Yr 0 Matches Yr 3}=='Y',{Yr 3 - Business Group Level 2}, \r",
				"iif({Yr 0 Matches Yr 1}=='N' && {Yr 0 to Yr 1 Transfer Possibility}=='N' && {Yr 1 Matches Yr 3}=='Y',{Yr 3 - Business Group Level 2}, \r",
				"iif({Yr 0 Matches Yr 1}=='Y' && {Yr 1 Matches Yr 2}=='N' && {Yr 1 to Yr 2 Transfer Possibility}=='N' && {Yr 2 Matches Yr 3}=='Y',{Yr 3 - Business Group Level 2}, \r",
				"iif({Yr 0 to Yr 1 Transfer Possibility}=='N' && {Yr 1 to Yr 2 Transfer Possibility}=='N' && {Yr 2 to Yr 3 Transfer Possibility}=='N',{Yr 3 - Business Group Level 2},'NO MAPPING' )))),",
				"          {Mapped Hierarchy Lvl 3} = iif({Yr 0 Matches Yr 3}=='Y',{Yr 3 - Business Group Level 3}, \r",
				"iif({Yr 0 Matches Yr 1}=='N' && {Yr 0 to Yr 1 Transfer Possibility}=='N' && {Yr 1 Matches Yr 3}=='Y',{Yr 3 - Business Group Level 3}, \r",
				"iif({Yr 0 Matches Yr 1}=='Y' && {Yr 1 Matches Yr 2}=='N' && {Yr 1 to Yr 2 Transfer Possibility}=='N' && {Yr 2 Matches Yr 3}=='Y',{Yr 3 - Business Group Level 3}, \r",
				"iif({Yr 0 to Yr 1 Transfer Possibility}=='N' && {Yr 1 to Yr 2 Transfer Possibility}=='N' && {Yr 2 to Yr 3 Transfer Possibility}=='N',{Yr 3 - Business Group Level 3},'NO MAPPING' )))),",
				"          {Mapped Hierarchy Lvl 4} = iif({Yr 0 Matches Yr 3}=='Y',{Yr 3 - Business Group Level 4}, \r",
				"iif({Yr 0 Matches Yr 1}=='N' && {Yr 0 to Yr 1 Transfer Possibility}=='N' && {Yr 1 Matches Yr 3}=='Y',{Yr 3 - Business Group Level 4}, \r",
				"iif({Yr 0 Matches Yr 1}=='Y' && {Yr 1 Matches Yr 2}=='N' && {Yr 1 to Yr 2 Transfer Possibility}=='N' && {Yr 2 Matches Yr 3}=='Y',{Yr 3 - Business Group Level 4}, \r",
				"iif({Yr 0 to Yr 1 Transfer Possibility}=='N' && {Yr 1 to Yr 2 Transfer Possibility}=='N' && {Yr 2 to Yr 3 Transfer Possibility}=='N',{Yr 3 - Business Group Level 4},'NO MAPPING' ))))) ~> Yr0SetMappingLogic",
				"Yr0PullOnlyMapped aggregate(groupBy({Yr 0 - Business Group Level 1},",
				"          {Yr 0 - Business Group Level 2},",
				"          {Yr 0 - Business Group Level 3},",
				"          {Yr 0 - Business Group Level 4},",
				"          {Mapped Hierarchy Lvl 1},",
				"          {Mapped Hierarchy Lvl 2},",
				"          {Mapped Hierarchy Lvl 3},",
				"          {Mapped Hierarchy Lvl 4},",
				"          {Event Year}),",
				"     {Record Count} = count({Record Id})) ~> Yr0SuggestedMapping",
				"Yr0SetMappingLogic filter({Mapped Hierarchy Lvl 1}!='NO MAPPING') ~> Yr0PullOnlyMapped",
				"filterBaseYearPlus1, selectHierarchyFlagOutput join({Record Id} == {Worker Id},",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join2",
				"join2 derive({Mapped Hierarchy Lvl 1} = iif({Yr 1 Matches Yr 3}=='Y',{Yr 3 - Business Group Level 1}, \r",
				"iif({Yr 1 Matches Yr 2}=='N' && {Yr 1 to Yr 2 Transfer Possibility}=='N' && {Yr 2 Matches Yr 3}=='Y',{Yr 3 - Business Group Level 1},  \r",
				"iif({Yr 1 Matches Yr 2}=='Y' && {Yr 2 Matches Yr 3}=='N' && {Yr 2 to Yr 3 Transfer Possibility}=='N',{Yr 3 - Business Group Level 1}, \r",
				"iif({Yr 1 to Yr 2 Transfer Possibility}=='N' && {Yr 2 to Yr 3 Transfer Possibility}=='N',{Yr 3 - Business Group Level 1},'NO MAPPING' )))),",
				"          {Mapped Hierarchy Lvl 2} = iif({Yr 1 Matches Yr 3}=='Y',{Yr 3 - Business Group Level 2}, \r",
				"iif({Yr 1 Matches Yr 2}=='N' && {Yr 1 to Yr 2 Transfer Possibility}=='N' && {Yr 2 Matches Yr 3}=='Y',{Yr 3 - Business Group Level 2},  \r",
				"iif({Yr 1 Matches Yr 2}=='Y' && {Yr 2 Matches Yr 3}=='N' && {Yr 2 to Yr 3 Transfer Possibility}=='N',{Yr 3 - Business Group Level 2}, \r",
				"iif({Yr 1 to Yr 2 Transfer Possibility}=='N' && {Yr 2 to Yr 3 Transfer Possibility}=='N',{Yr 3 - Business Group Level 2},'NO MAPPING' )))),",
				"          {Mapped Hierarchy Lvl 3} = iif({Yr 1 Matches Yr 3}=='Y',{Yr 3 - Business Group Level 3}, \r",
				"iif({Yr 1 Matches Yr 2}=='N' && {Yr 1 to Yr 2 Transfer Possibility}=='N' && {Yr 2 Matches Yr 3}=='Y',{Yr 3 - Business Group Level 3},  \r",
				"iif({Yr 1 Matches Yr 2}=='Y' && {Yr 2 Matches Yr 3}=='N' && {Yr 2 to Yr 3 Transfer Possibility}=='N',{Yr 3 - Business Group Level 3}, \r",
				"iif({Yr 1 to Yr 2 Transfer Possibility}=='N' && {Yr 2 to Yr 3 Transfer Possibility}=='N',{Yr 3 - Business Group Level 3},'NO MAPPING' )))),",
				"          {Mapped Hierarchy Lvl 4} = iif({Yr 1 Matches Yr 3}=='Y',{Yr 3 - Business Group Level 4}, \r",
				"iif({Yr 1 Matches Yr 2}=='N' && {Yr 1 to Yr 2 Transfer Possibility}=='N' && {Yr 2 Matches Yr 3}=='Y',{Yr 3 - Business Group Level 4},  \r",
				"iif({Yr 1 Matches Yr 2}=='Y' && {Yr 2 Matches Yr 3}=='N' && {Yr 2 to Yr 3 Transfer Possibility}=='N',{Yr 3 - Business Group Level 4}, \r",
				"iif({Yr 1 to Yr 2 Transfer Possibility}=='N' && {Yr 2 to Yr 3 Transfer Possibility}=='N',{Yr 3 - Business Group Level 4},'NO MAPPING' ))))) ~> Yr1SetMappingLogic",
				"Yr1SetMappingLogic filter({Mapped Hierarchy Lvl 1}!='NO MAPPING') ~> Yr1PullOnlyMapped",
				"Yr1PullOnlyMapped aggregate(groupBy({Yr 1 - Business Group Level 1},",
				"          {Yr 1 - Business Group Level 2},",
				"          {Yr 1 - Business Group Level 3},",
				"          {Yr 1 - Business Group Level 4},",
				"          {Mapped Hierarchy Lvl 1},",
				"          {Mapped Hierarchy Lvl 2},",
				"          {Mapped Hierarchy Lvl 3},",
				"          {Mapped Hierarchy Lvl 4},",
				"          {Event Year}),",
				"     {Record Count} = count({Record Id})) ~> Yr1SuggestedMapping",
				"Yr1SuggestedMapping select(mapColumn(",
				"          {Business Group Level 1} = {Yr 1 - Business Group Level 1},",
				"          {Business Group Level 2} = {Yr 1 - Business Group Level 2},",
				"          {Business Group Level 3} = {Yr 1 - Business Group Level 3},",
				"          {Business Group Level 4} = {Yr 1 - Business Group Level 4},",
				"          {Mapped Hierarchy Lvl 1},",
				"          {Mapped Hierarchy Lvl 2},",
				"          {Mapped Hierarchy Lvl 3},",
				"          {Mapped Hierarchy Lvl 4},",
				"          {Event Year},",
				"          {Record Count}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectYr1Mapping",
				"Yr0SuggestedMapping select(mapColumn(",
				"          {Business Group Level 1} = {Yr 0 - Business Group Level 1},",
				"          {Business Group Level 2} = {Yr 0 - Business Group Level 2},",
				"          {Business Group Level 3} = {Yr 0 - Business Group Level 3},",
				"          {Business Group Level 4} = {Yr 0 - Business Group Level 4},",
				"          {Mapped Hierarchy Lvl 1},",
				"          {Mapped Hierarchy Lvl 2},",
				"          {Mapped Hierarchy Lvl 3},",
				"          {Mapped Hierarchy Lvl 4},",
				"          {Event Year},",
				"          {Record Count}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectYr0Mapping",
				"selectYr0Mapping, selectYr1Mapping, selectYr2Mapping, selectYr3Mapping union(byName: true)~> union1",
				"union1 aggregate(groupBy({Event Year},",
				"          {Business Group Level 1},",
				"          {Business Group Level 2},",
				"          {Business Group Level 3},",
				"          {Business Group Level 4},",
				"          {Mapped Hierarchy Lvl 1},",
				"          {Mapped Hierarchy Lvl 2},",
				"          {Mapped Hierarchy Lvl 3},",
				"          {Mapped Hierarchy Lvl 4}),",
				"     {Record Count} = sum({Record Count})) ~> aggregate1",
				"filterBaseYearPlus2, selectHierarchyFlagOutput join({Record Id} == {Worker Id},",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join3",
				"join3 derive({Mapped Hierarchy Lvl 1} = iif({Yr 2 Matches Yr 3}=='Y',{Yr 3 - Business Group Level 1},  iif({Yr 2 Matches Yr 3}=='N' && {Yr 2 to Yr 3 Transfer Possibility}=='N',{Yr 3 - Business Group Level 1},'NO MAPPING' )),",
				"          {Mapped Hierarchy Lvl 2} = iif({Yr 2 Matches Yr 3}=='Y',{Yr 3 - Business Group Level 2},  iif({Yr 2 Matches Yr 3}=='N' && {Yr 2 to Yr 3 Transfer Possibility}=='N',{Yr 3 - Business Group Level 2},'NO MAPPING' )),",
				"          {Mapped Hierarchy Lvl 3} = iif({Yr 2 Matches Yr 3}=='Y',{Yr 3 - Business Group Level 3},  iif({Yr 2 Matches Yr 3}=='N' && {Yr 2 to Yr 3 Transfer Possibility}=='N',{Yr 3 - Business Group Level 3},'NO MAPPING' )),",
				"          {Mapped Hierarchy Lvl 4} = iif({Yr 2 Matches Yr 3}=='Y',{Yr 3 - Business Group Level 4},  iif({Yr 2 Matches Yr 3}=='N' && {Yr 2 to Yr 3 Transfer Possibility}=='N',{Yr 3 - Business Group Level 4},'NO MAPPING' ))) ~> Yr2SetMappingLogic",
				"Yr2SetMappingLogic filter({Mapped Hierarchy Lvl 1}!='NO MAPPING') ~> Yr2PullOnlyMapped",
				"Yr2PullOnlyMapped aggregate(groupBy({Yr 2 - Business Group Level 1},",
				"          {Yr 2 - Business Group Level 2},",
				"          {Yr 2 - Business Group Level 3},",
				"          {Yr 2 - Business Group Level 4},",
				"          {Mapped Hierarchy Lvl 1},",
				"          {Mapped Hierarchy Lvl 2},",
				"          {Mapped Hierarchy Lvl 3},",
				"          {Mapped Hierarchy Lvl 4},",
				"          {Event Year}),",
				"     {Record Count} = count({Record Id})) ~> Yr2SuggestedMapping",
				"Yr2SuggestedMapping select(mapColumn(",
				"          {Business Group Level 1} = {Yr 2 - Business Group Level 1},",
				"          {Business Group Level 2} = {Yr 2 - Business Group Level 2},",
				"          {Business Group Level 3} = {Yr 2 - Business Group Level 3},",
				"          {Business Group Level 4} = {Yr 2 - Business Group Level 4},",
				"          {Mapped Hierarchy Lvl 1},",
				"          {Mapped Hierarchy Lvl 2},",
				"          {Mapped Hierarchy Lvl 3},",
				"          {Mapped Hierarchy Lvl 4},",
				"          {Record Count},",
				"          {Event Year}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectYr2Mapping",
				"selectB3Hierarchy aggregate(groupBy({Yr 3 - Business Group Level 1},",
				"          {Yr 3 - Business Group Level 2},",
				"          {Yr 3 - Business Group Level 3},",
				"          {Yr 3 - Business Group Level 4},",
				"          {Yr 3 - Event Year}),",
				"     {Record Count} = count({Yr 3 - Worker Id})) ~> Yr3SuggestedMapping",
				"derivedColumn3 select(mapColumn(",
				"          {Business Group Level 1} = {Yr 3 - Business Group Level 1},",
				"          {Business Group Level 2} = {Yr 3 - Business Group Level 2},",
				"          {Business Group Level 3} = {Yr 3 - Business Group Level 3},",
				"          {Business Group Level 4} = {Yr 3 - Business Group Level 4},",
				"          {Mapped Hierarchy Lvl 1},",
				"          {Mapped Hierarchy Lvl 2},",
				"          {Mapped Hierarchy Lvl 3},",
				"          {Mapped Hierarchy Lvl 4},",
				"          {Event Year} = {Yr 3 - Event Year},",
				"          {Record Count}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectYr3Mapping",
				"Yr3SuggestedMapping derive({Mapped Hierarchy Lvl 1} = {Yr 3 - Business Group Level 1},",
				"          {Mapped Hierarchy Lvl 2} = {Yr 3 - Business Group Level 2},",
				"          {Mapped Hierarchy Lvl 3} = {Yr 3 - Business Group Level 3},",
				"          {Mapped Hierarchy Lvl 4} = {Yr 3 - Business Group Level 4}) ~> derivedColumn3",
				"derivedCreateKeyForDupCheck aggregate(groupBy({Hierarchy Key}),",
				"     {Dup Key Count} = count({Hierarchy Key})) ~> HierarchyKeyCount",
				"aggregate1 aggregate(groupBy({Business Group Level 1},",
				"          {Business Group Level 2},",
				"          {Business Group Level 3},",
				"          {Business Group Level 4},",
				"          {Mapped Hierarchy Lvl 1},",
				"          {Mapped Hierarchy Lvl 2},",
				"          {Mapped Hierarchy Lvl 3},",
				"          {Mapped Hierarchy Lvl 4}),",
				"     {Record Count} = sum({Record Count})) ~> SumWithoutYear",
				"joinDuplicateCountInfo select(mapColumn(",
				"          {Business Group Level 1},",
				"          {Business Group Level 2},",
				"          {Business Group Level 3},",
				"          {Business Group Level 4},",
				"          {Mapped Hierarchy Lvl 1},",
				"          {Mapped Hierarchy Lvl 2},",
				"          {Mapped Hierarchy Lvl 3},",
				"          {Mapped Hierarchy Lvl 4},",
				"          {Total Record Count} = {Record Count},",
				"          {Duplicate Hierarchy Count} = {Dup Key Count}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectMappingWithDupCount",
				"aggregate1 derive({Hierarchy Key} = concat(concat(concat({Business Group Level 1},{Business Group Level 2}),{Business Group Level 3}),{Business Group Level 4})) ~> derivedCreateKeyForDupCheck",
				"SumWithoutYear derive({Hierarchy Key} = concat(concat(concat({Business Group Level 1},{Business Group Level 2}),{Business Group Level 3}),{Business Group Level 4})) ~> derivedCreateKeyForDupCheck1",
				"derivedCreateKeyForDupCheck1, HierarchyKeyCount join(derivedCreateKeyForDupCheck1@{Hierarchy Key} == HierarchyKeyCount@{Hierarchy Key},",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> joinDuplicateCountInfo",
				"joinEachHCTYearB3 derive({Yr 0 - Business Group Level 2} = iif($Levels_Count=='2',{Yr 0 - Business Group Level 2},'N/A'),",
				"          {Yr 0 - Business Group Level 3} = iif($Levels_Count=='3',{Yr 0 - Business Group Level 3},'N/A'),",
				"          {Yr 0 - Business Group Level 4} = iif($Levels_Count=='4',{Yr 0 - Business Group Level 4},'N/A'),",
				"          {Yr 1 - Business Group Level 2} = iif($Levels_Count=='2',{Yr 1 - Business Group Level 2},'N/A'),",
				"          {Yr 1 - Business Group Level 3} = iif($Levels_Count=='3',{Yr 1 - Business Group Level 3},'N/A'),",
				"          {Yr 1 - Business Group Level 4} = iif($Levels_Count=='4',{Yr 1 - Business Group Level 4},'N/A'),",
				"          {Yr 2 - Business Group Level 2} = iif($Levels_Count=='2',{Yr 2 - Business Group Level 2},'N/A'),",
				"          {Yr 2 - Business Group Level 3} = iif($Levels_Count=='3',{Yr 2 - Business Group Level 3},'N/A'),",
				"          {Yr 2 - Business Group Level 4} = iif($Levels_Count=='4',{Yr 2 - Business Group Level 4},'N/A'),",
				"          {Yr 3 - Business Group Level 2} = iif($Levels_Count=='2',{Yr 3 - Business Group Level 2},'N/A'),",
				"          {Yr 3 - Business Group Level 3} = iif($Levels_Count=='3',{Yr 3 - Business Group Level 3},'N/A'),",
				"          {Yr 3 - Business Group Level 4} = iif($Levels_Count=='4',{Yr 3 - Business Group Level 4},'N/A')) ~> derivedSetMappingLevels",
				"Yr0SetMappingLogic sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['Worker Hierarchy Map.csv'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> sink2"
			]
		}
	}
}